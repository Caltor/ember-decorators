{
  "type": "File",
  "start": 0,
  "end": 26948,
  "loc": {
    "start": {
      "line": 1,
      "column": 0
    },
    "end": {
      "line": 825,
      "column": 0
    }
  },
  "program": {
    "type": "Program",
    "start": 0,
    "end": 26948,
    "loc": {
      "start": {
        "line": 1,
        "column": 0
      },
      "end": {
        "line": 825,
        "column": 0
      }
    },
    "sourceType": "module",
    "body": [
      {
        "type": "ImportDeclaration",
        "start": 0,
        "end": 26,
        "loc": {
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 26
          }
        },
        "specifiers": [
          {
            "type": "ImportDefaultSpecifier",
            "start": 7,
            "end": 12,
            "loc": {
              "start": {
                "line": 1,
                "column": 7
              },
              "end": {
                "line": 1,
                "column": 12
              }
            },
            "local": {
              "type": "Identifier",
              "start": 7,
              "end": 12,
              "loc": {
                "start": {
                  "line": 1,
                  "column": 7
                },
                "end": {
                  "line": 1,
                  "column": 12
                },
                "identifierName": "Ember"
              },
              "name": "Ember"
            }
          }
        ],
        "source": {
          "type": "StringLiteral",
          "start": 18,
          "end": 25,
          "loc": {
            "start": {
              "line": 1,
              "column": 18
            },
            "end": {
              "line": 1,
              "column": 25
            }
          },
          "extra": {
            "rawValue": "ember",
            "raw": "'ember'"
          },
          "value": "ember"
        }
      },
      {
        "type": "ImportDeclaration",
        "start": 27,
        "end": 65,
        "loc": {
          "start": {
            "line": 2,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 38
          }
        },
        "specifiers": [
          {
            "type": "ImportSpecifier",
            "start": 36,
            "end": 42,
            "loc": {
              "start": {
                "line": 2,
                "column": 9
              },
              "end": {
                "line": 2,
                "column": 15
              }
            },
            "imported": {
              "type": "Identifier",
              "start": 36,
              "end": 42,
              "loc": {
                "start": {
                  "line": 2,
                  "column": 9
                },
                "end": {
                  "line": 2,
                  "column": 15
                },
                "identifierName": "assert"
              },
              "name": "assert"
            },
            "local": {
              "type": "Identifier",
              "start": 36,
              "end": 42,
              "loc": {
                "start": {
                  "line": 2,
                  "column": 9
                },
                "end": {
                  "line": 2,
                  "column": 15
                },
                "identifierName": "assert"
              },
              "name": "assert"
            }
          }
        ],
        "source": {
          "type": "StringLiteral",
          "start": 50,
          "end": 64,
          "loc": {
            "start": {
              "line": 2,
              "column": 23
            },
            "end": {
              "line": 2,
              "column": 37
            }
          },
          "extra": {
            "rawValue": "@ember/debug",
            "raw": "'@ember/debug'"
          },
          "value": "@ember/debug"
        }
      },
      {
        "type": "ImportDeclaration",
        "start": 66,
        "end": 238,
        "loc": {
          "start": {
            "line": 3,
            "column": 0
          },
          "end": {
            "line": 7,
            "column": 35
          }
        },
        "specifiers": [
          {
            "type": "ImportSpecifier",
            "start": 77,
            "end": 112,
            "loc": {
              "start": {
                "line": 4,
                "column": 2
              },
              "end": {
                "line": 4,
                "column": 37
              }
            },
            "imported": {
              "type": "Identifier",
              "start": 77,
              "end": 112,
              "loc": {
                "start": {
                  "line": 4,
                  "column": 2
                },
                "end": {
                  "line": 4,
                  "column": 37
                },
                "identifierName": "decoratedPropertyWithRequiredParams"
              },
              "name": "decoratedPropertyWithRequiredParams"
            },
            "local": {
              "type": "Identifier",
              "start": 77,
              "end": 112,
              "loc": {
                "start": {
                  "line": 4,
                  "column": 2
                },
                "end": {
                  "line": 4,
                  "column": 37
                },
                "identifierName": "decoratedPropertyWithRequiredParams"
              },
              "name": "decoratedPropertyWithRequiredParams"
            }
          },
          {
            "type": "ImportSpecifier",
            "start": 116,
            "end": 153,
            "loc": {
              "start": {
                "line": 5,
                "column": 2
              },
              "end": {
                "line": 5,
                "column": 39
              }
            },
            "imported": {
              "type": "Identifier",
              "start": 116,
              "end": 153,
              "loc": {
                "start": {
                  "line": 5,
                  "column": 2
                },
                "end": {
                  "line": 5,
                  "column": 39
                },
                "identifierName": "decoratedPropertyWithOptionalCallback"
              },
              "name": "decoratedPropertyWithOptionalCallback"
            },
            "local": {
              "type": "Identifier",
              "start": 116,
              "end": 153,
              "loc": {
                "start": {
                  "line": 5,
                  "column": 2
                },
                "end": {
                  "line": 5,
                  "column": 39
                },
                "identifierName": "decoratedPropertyWithOptionalCallback"
              },
              "name": "decoratedPropertyWithOptionalCallback"
            }
          },
          {
            "type": "ImportSpecifier",
            "start": 157,
            "end": 202,
            "loc": {
              "start": {
                "line": 6,
                "column": 2
              },
              "end": {
                "line": 6,
                "column": 47
              }
            },
            "imported": {
              "type": "Identifier",
              "start": 157,
              "end": 202,
              "loc": {
                "start": {
                  "line": 6,
                  "column": 2
                },
                "end": {
                  "line": 6,
                  "column": 47
                },
                "identifierName": "decoratedPropertyWithEitherCallbackOrProperty"
              },
              "name": "decoratedPropertyWithEitherCallbackOrProperty"
            },
            "local": {
              "type": "Identifier",
              "start": 157,
              "end": 202,
              "loc": {
                "start": {
                  "line": 6,
                  "column": 2
                },
                "end": {
                  "line": 6,
                  "column": 47
                },
                "identifierName": "decoratedPropertyWithEitherCallbackOrProperty"
              },
              "name": "decoratedPropertyWithEitherCallbackOrProperty"
            }
          }
        ],
        "source": {
          "type": "StringLiteral",
          "start": 210,
          "end": 237,
          "loc": {
            "start": {
              "line": 7,
              "column": 7
            },
            "end": {
              "line": 7,
              "column": 34
            }
          },
          "extra": {
            "rawValue": "../utils/decorator-macros",
            "raw": "'../utils/decorator-macros'"
          },
          "value": "../utils/decorator-macros"
        }
      },
      {
        "type": "ImportDeclaration",
        "start": 240,
        "end": 314,
        "loc": {
          "start": {
            "line": 9,
            "column": 0
          },
          "end": {
            "line": 11,
            "column": 37
          }
        },
        "specifiers": [
          {
            "type": "ImportSpecifier",
            "start": 251,
            "end": 276,
            "loc": {
              "start": {
                "line": 10,
                "column": 2
              },
              "end": {
                "line": 10,
                "column": 27
              }
            },
            "imported": {
              "type": "Identifier",
              "start": 251,
              "end": 276,
              "loc": {
                "start": {
                  "line": 10,
                  "column": 2
                },
                "end": {
                  "line": 10,
                  "column": 27
                },
                "identifierName": "SUPPORTS_UNIQ_BY_COMPUTED"
              },
              "name": "SUPPORTS_UNIQ_BY_COMPUTED"
            },
            "local": {
              "type": "Identifier",
              "start": 251,
              "end": 276,
              "loc": {
                "start": {
                  "line": 10,
                  "column": 2
                },
                "end": {
                  "line": 10,
                  "column": 27
                },
                "identifierName": "SUPPORTS_UNIQ_BY_COMPUTED"
              },
              "name": "SUPPORTS_UNIQ_BY_COMPUTED"
            }
          }
        ],
        "source": {
          "type": "StringLiteral",
          "start": 284,
          "end": 313,
          "loc": {
            "start": {
              "line": 11,
              "column": 7
            },
            "end": {
              "line": 11,
              "column": 36
            }
          },
          "extra": {
            "rawValue": "ember-compatibility-helpers",
            "raw": "'ember-compatibility-helpers'"
          },
          "value": "ember-compatibility-helpers"
        },
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.alias](http://emberjs.com/api/classes/Ember.computed.html#method_alias)\n *\n * Creates a new property that is an alias for another property on an object.\n * Calls to get or set this property behave as though they were called on\n * the original property.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { alias } from 'ember-decorators/object/computed';\n *\n * export default class UserProfileComponent extends Component {\n *   person = {\n *     first: 'Joe'\n *   };\n *\n *   @alias('person.first') firstName;\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the aliased property\n ",
            "start": 316,
            "end": 987,
            "loc": {
              "start": {
                "line": 13,
                "column": 0
              },
              "end": {
                "line": 35,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 988,
        "end": 1067,
        "loc": {
          "start": {
            "line": 36,
            "column": 0
          },
          "end": {
            "line": 36,
            "column": 79
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "VariableDeclaration",
          "start": 995,
          "end": 1067,
          "loc": {
            "start": {
              "line": 36,
              "column": 7
            },
            "end": {
              "line": 36,
              "column": 79
            }
          },
          "declarations": [
            {
              "type": "VariableDeclarator",
              "start": 1001,
              "end": 1066,
              "loc": {
                "start": {
                  "line": 36,
                  "column": 13
                },
                "end": {
                  "line": 36,
                  "column": 78
                }
              },
              "id": {
                "type": "Identifier",
                "start": 1001,
                "end": 1006,
                "loc": {
                  "start": {
                    "line": 36,
                    "column": 13
                  },
                  "end": {
                    "line": 36,
                    "column": 18
                  },
                  "identifierName": "alias"
                },
                "name": "alias",
                "leadingComments": null
              },
              "init": {
                "type": "CallExpression",
                "start": 1009,
                "end": 1066,
                "loc": {
                  "start": {
                    "line": 36,
                    "column": 21
                  },
                  "end": {
                    "line": 36,
                    "column": 78
                  }
                },
                "callee": {
                  "type": "Identifier",
                  "start": 1009,
                  "end": 1044,
                  "loc": {
                    "start": {
                      "line": 36,
                      "column": 21
                    },
                    "end": {
                      "line": 36,
                      "column": 56
                    },
                    "identifierName": "decoratedPropertyWithRequiredParams"
                  },
                  "name": "decoratedPropertyWithRequiredParams"
                },
                "arguments": [
                  {
                    "type": "MemberExpression",
                    "start": 1045,
                    "end": 1065,
                    "loc": {
                      "start": {
                        "line": 36,
                        "column": 57
                      },
                      "end": {
                        "line": 36,
                        "column": 77
                      }
                    },
                    "object": {
                      "type": "MemberExpression",
                      "start": 1045,
                      "end": 1059,
                      "loc": {
                        "start": {
                          "line": 36,
                          "column": 57
                        },
                        "end": {
                          "line": 36,
                          "column": 71
                        }
                      },
                      "object": {
                        "type": "Identifier",
                        "start": 1045,
                        "end": 1050,
                        "loc": {
                          "start": {
                            "line": 36,
                            "column": 57
                          },
                          "end": {
                            "line": 36,
                            "column": 62
                          },
                          "identifierName": "Ember"
                        },
                        "name": "Ember"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 1051,
                        "end": 1059,
                        "loc": {
                          "start": {
                            "line": 36,
                            "column": 63
                          },
                          "end": {
                            "line": 36,
                            "column": 71
                          },
                          "identifierName": "computed"
                        },
                        "name": "computed"
                      },
                      "computed": false
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 1060,
                      "end": 1065,
                      "loc": {
                        "start": {
                          "line": 36,
                          "column": 72
                        },
                        "end": {
                          "line": 36,
                          "column": 77
                        },
                        "identifierName": "alias"
                      },
                      "name": "alias"
                    },
                    "computed": false
                  }
                ]
              },
              "leadingComments": null
            }
          ],
          "kind": "const",
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.alias](http://emberjs.com/api/classes/Ember.computed.html#method_alias)\n *\n * Creates a new property that is an alias for another property on an object.\n * Calls to get or set this property behave as though they were called on\n * the original property.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { alias } from 'ember-decorators/object/computed';\n *\n * export default class UserProfileComponent extends Component {\n *   person = {\n *     first: 'Joe'\n *   };\n *\n *   @alias('person.first') firstName;\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the aliased property\n ",
              "start": 316,
              "end": 987,
              "loc": {
                "start": {
                  "line": 13,
                  "column": 0
                },
                "end": {
                  "line": 35,
                  "column": 3
                }
              }
            }
          ],
          "trailingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.and](http://emberjs.com/api/classes/Ember.computed.html#method_and)\n *\n * A computed property that performs a logical and on the original values\n * for the provided dependent properties.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { and } from 'ember-decorators/object/computed';\n *\n * export default class UserProfileComponent extends Component {\n *   person = {\n *     first: 'Joe'\n *   };\n *\n *   @and('person.{first,last}') hasFullName; // false\n * }\n * ```\n *\n * @function\n * @param {...String} dependentKeys - Keys for properties to `and`\n ",
              "start": 1069,
              "end": 1692,
              "loc": {
                "start": {
                  "line": 38,
                  "column": 0
                },
                "end": {
                  "line": 59,
                  "column": 3
                }
              }
            }
          ]
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.alias](http://emberjs.com/api/classes/Ember.computed.html#method_alias)\n *\n * Creates a new property that is an alias for another property on an object.\n * Calls to get or set this property behave as though they were called on\n * the original property.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { alias } from 'ember-decorators/object/computed';\n *\n * export default class UserProfileComponent extends Component {\n *   person = {\n *     first: 'Joe'\n *   };\n *\n *   @alias('person.first') firstName;\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the aliased property\n ",
            "start": 316,
            "end": 987,
            "loc": {
              "start": {
                "line": 13,
                "column": 0
              },
              "end": {
                "line": 35,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.and](http://emberjs.com/api/classes/Ember.computed.html#method_and)\n *\n * A computed property that performs a logical and on the original values\n * for the provided dependent properties.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { and } from 'ember-decorators/object/computed';\n *\n * export default class UserProfileComponent extends Component {\n *   person = {\n *     first: 'Joe'\n *   };\n *\n *   @and('person.{first,last}') hasFullName; // false\n * }\n * ```\n *\n * @function\n * @param {...String} dependentKeys - Keys for properties to `and`\n ",
            "start": 1069,
            "end": 1692,
            "loc": {
              "start": {
                "line": 38,
                "column": 0
              },
              "end": {
                "line": 59,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 1693,
        "end": 1768,
        "loc": {
          "start": {
            "line": 60,
            "column": 0
          },
          "end": {
            "line": 60,
            "column": 75
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "VariableDeclaration",
          "start": 1700,
          "end": 1768,
          "loc": {
            "start": {
              "line": 60,
              "column": 7
            },
            "end": {
              "line": 60,
              "column": 75
            }
          },
          "declarations": [
            {
              "type": "VariableDeclarator",
              "start": 1706,
              "end": 1767,
              "loc": {
                "start": {
                  "line": 60,
                  "column": 13
                },
                "end": {
                  "line": 60,
                  "column": 74
                }
              },
              "id": {
                "type": "Identifier",
                "start": 1706,
                "end": 1709,
                "loc": {
                  "start": {
                    "line": 60,
                    "column": 13
                  },
                  "end": {
                    "line": 60,
                    "column": 16
                  },
                  "identifierName": "and"
                },
                "name": "and",
                "leadingComments": null
              },
              "init": {
                "type": "CallExpression",
                "start": 1712,
                "end": 1767,
                "loc": {
                  "start": {
                    "line": 60,
                    "column": 19
                  },
                  "end": {
                    "line": 60,
                    "column": 74
                  }
                },
                "callee": {
                  "type": "Identifier",
                  "start": 1712,
                  "end": 1747,
                  "loc": {
                    "start": {
                      "line": 60,
                      "column": 19
                    },
                    "end": {
                      "line": 60,
                      "column": 54
                    },
                    "identifierName": "decoratedPropertyWithRequiredParams"
                  },
                  "name": "decoratedPropertyWithRequiredParams"
                },
                "arguments": [
                  {
                    "type": "MemberExpression",
                    "start": 1748,
                    "end": 1766,
                    "loc": {
                      "start": {
                        "line": 60,
                        "column": 55
                      },
                      "end": {
                        "line": 60,
                        "column": 73
                      }
                    },
                    "object": {
                      "type": "MemberExpression",
                      "start": 1748,
                      "end": 1762,
                      "loc": {
                        "start": {
                          "line": 60,
                          "column": 55
                        },
                        "end": {
                          "line": 60,
                          "column": 69
                        }
                      },
                      "object": {
                        "type": "Identifier",
                        "start": 1748,
                        "end": 1753,
                        "loc": {
                          "start": {
                            "line": 60,
                            "column": 55
                          },
                          "end": {
                            "line": 60,
                            "column": 60
                          },
                          "identifierName": "Ember"
                        },
                        "name": "Ember"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 1754,
                        "end": 1762,
                        "loc": {
                          "start": {
                            "line": 60,
                            "column": 61
                          },
                          "end": {
                            "line": 60,
                            "column": 69
                          },
                          "identifierName": "computed"
                        },
                        "name": "computed"
                      },
                      "computed": false
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 1763,
                      "end": 1766,
                      "loc": {
                        "start": {
                          "line": 60,
                          "column": 70
                        },
                        "end": {
                          "line": 60,
                          "column": 73
                        },
                        "identifierName": "and"
                      },
                      "name": "and"
                    },
                    "computed": false
                  }
                ]
              },
              "leadingComments": null
            }
          ],
          "kind": "const",
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.and](http://emberjs.com/api/classes/Ember.computed.html#method_and)\n *\n * A computed property that performs a logical and on the original values\n * for the provided dependent properties.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { and } from 'ember-decorators/object/computed';\n *\n * export default class UserProfileComponent extends Component {\n *   person = {\n *     first: 'Joe'\n *   };\n *\n *   @and('person.{first,last}') hasFullName; // false\n * }\n * ```\n *\n * @function\n * @param {...String} dependentKeys - Keys for properties to `and`\n ",
              "start": 1069,
              "end": 1692,
              "loc": {
                "start": {
                  "line": 38,
                  "column": 0
                },
                "end": {
                  "line": 59,
                  "column": 3
                }
              }
            }
          ],
          "trailingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.bool](http://emberjs.com/api/classes/Ember.computed.html#method_bool)\n *\n * A computed property that converts the provided dependent property into a\n * boolean value.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { bool } from 'ember-decorators/object/computed';\n *\n * export default class MessagesNotificationComponent extends Component {\n *   messageCount = 1;\n *\n *   @bool('messageCount') hasMessages; // true\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to convert\n ",
              "start": 1770,
              "end": 2354,
              "loc": {
                "start": {
                  "line": 62,
                  "column": 0
                },
                "end": {
                  "line": 81,
                  "column": 3
                }
              }
            }
          ]
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.and](http://emberjs.com/api/classes/Ember.computed.html#method_and)\n *\n * A computed property that performs a logical and on the original values\n * for the provided dependent properties.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { and } from 'ember-decorators/object/computed';\n *\n * export default class UserProfileComponent extends Component {\n *   person = {\n *     first: 'Joe'\n *   };\n *\n *   @and('person.{first,last}') hasFullName; // false\n * }\n * ```\n *\n * @function\n * @param {...String} dependentKeys - Keys for properties to `and`\n ",
            "start": 1069,
            "end": 1692,
            "loc": {
              "start": {
                "line": 38,
                "column": 0
              },
              "end": {
                "line": 59,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.bool](http://emberjs.com/api/classes/Ember.computed.html#method_bool)\n *\n * A computed property that converts the provided dependent property into a\n * boolean value.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { bool } from 'ember-decorators/object/computed';\n *\n * export default class MessagesNotificationComponent extends Component {\n *   messageCount = 1;\n *\n *   @bool('messageCount') hasMessages; // true\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to convert\n ",
            "start": 1770,
            "end": 2354,
            "loc": {
              "start": {
                "line": 62,
                "column": 0
              },
              "end": {
                "line": 81,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 2355,
        "end": 2432,
        "loc": {
          "start": {
            "line": 82,
            "column": 0
          },
          "end": {
            "line": 82,
            "column": 77
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "VariableDeclaration",
          "start": 2362,
          "end": 2432,
          "loc": {
            "start": {
              "line": 82,
              "column": 7
            },
            "end": {
              "line": 82,
              "column": 77
            }
          },
          "declarations": [
            {
              "type": "VariableDeclarator",
              "start": 2368,
              "end": 2431,
              "loc": {
                "start": {
                  "line": 82,
                  "column": 13
                },
                "end": {
                  "line": 82,
                  "column": 76
                }
              },
              "id": {
                "type": "Identifier",
                "start": 2368,
                "end": 2372,
                "loc": {
                  "start": {
                    "line": 82,
                    "column": 13
                  },
                  "end": {
                    "line": 82,
                    "column": 17
                  },
                  "identifierName": "bool"
                },
                "name": "bool",
                "leadingComments": null
              },
              "init": {
                "type": "CallExpression",
                "start": 2375,
                "end": 2431,
                "loc": {
                  "start": {
                    "line": 82,
                    "column": 20
                  },
                  "end": {
                    "line": 82,
                    "column": 76
                  }
                },
                "callee": {
                  "type": "Identifier",
                  "start": 2375,
                  "end": 2410,
                  "loc": {
                    "start": {
                      "line": 82,
                      "column": 20
                    },
                    "end": {
                      "line": 82,
                      "column": 55
                    },
                    "identifierName": "decoratedPropertyWithRequiredParams"
                  },
                  "name": "decoratedPropertyWithRequiredParams"
                },
                "arguments": [
                  {
                    "type": "MemberExpression",
                    "start": 2411,
                    "end": 2430,
                    "loc": {
                      "start": {
                        "line": 82,
                        "column": 56
                      },
                      "end": {
                        "line": 82,
                        "column": 75
                      }
                    },
                    "object": {
                      "type": "MemberExpression",
                      "start": 2411,
                      "end": 2425,
                      "loc": {
                        "start": {
                          "line": 82,
                          "column": 56
                        },
                        "end": {
                          "line": 82,
                          "column": 70
                        }
                      },
                      "object": {
                        "type": "Identifier",
                        "start": 2411,
                        "end": 2416,
                        "loc": {
                          "start": {
                            "line": 82,
                            "column": 56
                          },
                          "end": {
                            "line": 82,
                            "column": 61
                          },
                          "identifierName": "Ember"
                        },
                        "name": "Ember"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 2417,
                        "end": 2425,
                        "loc": {
                          "start": {
                            "line": 82,
                            "column": 62
                          },
                          "end": {
                            "line": 82,
                            "column": 70
                          },
                          "identifierName": "computed"
                        },
                        "name": "computed"
                      },
                      "computed": false
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 2426,
                      "end": 2430,
                      "loc": {
                        "start": {
                          "line": 82,
                          "column": 71
                        },
                        "end": {
                          "line": 82,
                          "column": 75
                        },
                        "identifierName": "bool"
                      },
                      "name": "bool"
                    },
                    "computed": false
                  }
                ]
              },
              "leadingComments": null
            }
          ],
          "kind": "const",
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.bool](http://emberjs.com/api/classes/Ember.computed.html#method_bool)\n *\n * A computed property that converts the provided dependent property into a\n * boolean value.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { bool } from 'ember-decorators/object/computed';\n *\n * export default class MessagesNotificationComponent extends Component {\n *   messageCount = 1;\n *\n *   @bool('messageCount') hasMessages; // true\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to convert\n ",
              "start": 1770,
              "end": 2354,
              "loc": {
                "start": {
                  "line": 62,
                  "column": 0
                },
                "end": {
                  "line": 81,
                  "column": 3
                }
              }
            }
          ],
          "trailingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.collect](http://emberjs.com/api/classes/Ember.computed.html#method_collect)\n *\n * A computed property that returns the array of values for the provided\n * dependent properties.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { collect } from 'ember-decorators/object/computed';\n *\n * export default class CameraEquipmentComponent extends Component {\n *   light = 'strobe';\n *   lens = '35mm prime';\n *\n *   @collect('light', 'lens') equipment; // ['strobe', '35mm prime']\n * }\n * ```\n *\n * @function\n * @param {...String} dependentKeys - Keys for the properties to collect\n ",
              "start": 2434,
              "end": 3081,
              "loc": {
                "start": {
                  "line": 84,
                  "column": 0
                },
                "end": {
                  "line": 104,
                  "column": 3
                }
              }
            }
          ]
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.bool](http://emberjs.com/api/classes/Ember.computed.html#method_bool)\n *\n * A computed property that converts the provided dependent property into a\n * boolean value.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { bool } from 'ember-decorators/object/computed';\n *\n * export default class MessagesNotificationComponent extends Component {\n *   messageCount = 1;\n *\n *   @bool('messageCount') hasMessages; // true\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to convert\n ",
            "start": 1770,
            "end": 2354,
            "loc": {
              "start": {
                "line": 62,
                "column": 0
              },
              "end": {
                "line": 81,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.collect](http://emberjs.com/api/classes/Ember.computed.html#method_collect)\n *\n * A computed property that returns the array of values for the provided\n * dependent properties.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { collect } from 'ember-decorators/object/computed';\n *\n * export default class CameraEquipmentComponent extends Component {\n *   light = 'strobe';\n *   lens = '35mm prime';\n *\n *   @collect('light', 'lens') equipment; // ['strobe', '35mm prime']\n * }\n * ```\n *\n * @function\n * @param {...String} dependentKeys - Keys for the properties to collect\n ",
            "start": 2434,
            "end": 3081,
            "loc": {
              "start": {
                "line": 84,
                "column": 0
              },
              "end": {
                "line": 104,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 3082,
        "end": 3165,
        "loc": {
          "start": {
            "line": 105,
            "column": 0
          },
          "end": {
            "line": 105,
            "column": 83
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "VariableDeclaration",
          "start": 3089,
          "end": 3165,
          "loc": {
            "start": {
              "line": 105,
              "column": 7
            },
            "end": {
              "line": 105,
              "column": 83
            }
          },
          "declarations": [
            {
              "type": "VariableDeclarator",
              "start": 3095,
              "end": 3164,
              "loc": {
                "start": {
                  "line": 105,
                  "column": 13
                },
                "end": {
                  "line": 105,
                  "column": 82
                }
              },
              "id": {
                "type": "Identifier",
                "start": 3095,
                "end": 3102,
                "loc": {
                  "start": {
                    "line": 105,
                    "column": 13
                  },
                  "end": {
                    "line": 105,
                    "column": 20
                  },
                  "identifierName": "collect"
                },
                "name": "collect",
                "leadingComments": null
              },
              "init": {
                "type": "CallExpression",
                "start": 3105,
                "end": 3164,
                "loc": {
                  "start": {
                    "line": 105,
                    "column": 23
                  },
                  "end": {
                    "line": 105,
                    "column": 82
                  }
                },
                "callee": {
                  "type": "Identifier",
                  "start": 3105,
                  "end": 3140,
                  "loc": {
                    "start": {
                      "line": 105,
                      "column": 23
                    },
                    "end": {
                      "line": 105,
                      "column": 58
                    },
                    "identifierName": "decoratedPropertyWithRequiredParams"
                  },
                  "name": "decoratedPropertyWithRequiredParams"
                },
                "arguments": [
                  {
                    "type": "MemberExpression",
                    "start": 3141,
                    "end": 3163,
                    "loc": {
                      "start": {
                        "line": 105,
                        "column": 59
                      },
                      "end": {
                        "line": 105,
                        "column": 81
                      }
                    },
                    "object": {
                      "type": "MemberExpression",
                      "start": 3141,
                      "end": 3155,
                      "loc": {
                        "start": {
                          "line": 105,
                          "column": 59
                        },
                        "end": {
                          "line": 105,
                          "column": 73
                        }
                      },
                      "object": {
                        "type": "Identifier",
                        "start": 3141,
                        "end": 3146,
                        "loc": {
                          "start": {
                            "line": 105,
                            "column": 59
                          },
                          "end": {
                            "line": 105,
                            "column": 64
                          },
                          "identifierName": "Ember"
                        },
                        "name": "Ember"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 3147,
                        "end": 3155,
                        "loc": {
                          "start": {
                            "line": 105,
                            "column": 65
                          },
                          "end": {
                            "line": 105,
                            "column": 73
                          },
                          "identifierName": "computed"
                        },
                        "name": "computed"
                      },
                      "computed": false
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 3156,
                      "end": 3163,
                      "loc": {
                        "start": {
                          "line": 105,
                          "column": 74
                        },
                        "end": {
                          "line": 105,
                          "column": 81
                        },
                        "identifierName": "collect"
                      },
                      "name": "collect"
                    },
                    "computed": false
                  }
                ]
              },
              "leadingComments": null
            }
          ],
          "kind": "const",
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.collect](http://emberjs.com/api/classes/Ember.computed.html#method_collect)\n *\n * A computed property that returns the array of values for the provided\n * dependent properties.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { collect } from 'ember-decorators/object/computed';\n *\n * export default class CameraEquipmentComponent extends Component {\n *   light = 'strobe';\n *   lens = '35mm prime';\n *\n *   @collect('light', 'lens') equipment; // ['strobe', '35mm prime']\n * }\n * ```\n *\n * @function\n * @param {...String} dependentKeys - Keys for the properties to collect\n ",
              "start": 2434,
              "end": 3081,
              "loc": {
                "start": {
                  "line": 84,
                  "column": 0
                },
                "end": {
                  "line": 104,
                  "column": 3
                }
              }
            }
          ],
          "trailingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.deprecatingAlias](http://emberjs.com/api/classes/Ember.computed.html#method_deprecatingAlias)\n *\n * Creates a new property that is an alias for another property on an object.\n * Calls to get or set this property behave as though they were called on\n * the original property, but will also trigger a deprecation warning.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { deprecatingAlias } from 'ember-decorators/object/computed';\n *\n * export default class UserProfileComponent extends {\n *   person = {\n *     first: 'Joe'\n *   };\n *\n *   @deprecatingAlias('person.first', {\n *     id: 'user-profile.firstName',\n *     until: '3.0.0',\n *     url: 'https://example.com/deprecations/user-profile.firstName'\n *   }) firstName;\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to alias\n * @param {Object} options\n ",
              "start": 3167,
              "end": 4085,
              "loc": {
                "start": {
                  "line": 107,
                  "column": 0
                },
                "end": {
                  "line": 134,
                  "column": 3
                }
              }
            }
          ]
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.collect](http://emberjs.com/api/classes/Ember.computed.html#method_collect)\n *\n * A computed property that returns the array of values for the provided\n * dependent properties.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { collect } from 'ember-decorators/object/computed';\n *\n * export default class CameraEquipmentComponent extends Component {\n *   light = 'strobe';\n *   lens = '35mm prime';\n *\n *   @collect('light', 'lens') equipment; // ['strobe', '35mm prime']\n * }\n * ```\n *\n * @function\n * @param {...String} dependentKeys - Keys for the properties to collect\n ",
            "start": 2434,
            "end": 3081,
            "loc": {
              "start": {
                "line": 84,
                "column": 0
              },
              "end": {
                "line": 104,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.deprecatingAlias](http://emberjs.com/api/classes/Ember.computed.html#method_deprecatingAlias)\n *\n * Creates a new property that is an alias for another property on an object.\n * Calls to get or set this property behave as though they were called on\n * the original property, but will also trigger a deprecation warning.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { deprecatingAlias } from 'ember-decorators/object/computed';\n *\n * export default class UserProfileComponent extends {\n *   person = {\n *     first: 'Joe'\n *   };\n *\n *   @deprecatingAlias('person.first', {\n *     id: 'user-profile.firstName',\n *     until: '3.0.0',\n *     url: 'https://example.com/deprecations/user-profile.firstName'\n *   }) firstName;\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to alias\n * @param {Object} options\n ",
            "start": 3167,
            "end": 4085,
            "loc": {
              "start": {
                "line": 107,
                "column": 0
              },
              "end": {
                "line": 134,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 4086,
        "end": 4187,
        "loc": {
          "start": {
            "line": 135,
            "column": 0
          },
          "end": {
            "line": 135,
            "column": 101
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "VariableDeclaration",
          "start": 4093,
          "end": 4187,
          "loc": {
            "start": {
              "line": 135,
              "column": 7
            },
            "end": {
              "line": 135,
              "column": 101
            }
          },
          "declarations": [
            {
              "type": "VariableDeclarator",
              "start": 4099,
              "end": 4186,
              "loc": {
                "start": {
                  "line": 135,
                  "column": 13
                },
                "end": {
                  "line": 135,
                  "column": 100
                }
              },
              "id": {
                "type": "Identifier",
                "start": 4099,
                "end": 4115,
                "loc": {
                  "start": {
                    "line": 135,
                    "column": 13
                  },
                  "end": {
                    "line": 135,
                    "column": 29
                  },
                  "identifierName": "deprecatingAlias"
                },
                "name": "deprecatingAlias",
                "leadingComments": null
              },
              "init": {
                "type": "CallExpression",
                "start": 4118,
                "end": 4186,
                "loc": {
                  "start": {
                    "line": 135,
                    "column": 32
                  },
                  "end": {
                    "line": 135,
                    "column": 100
                  }
                },
                "callee": {
                  "type": "Identifier",
                  "start": 4118,
                  "end": 4153,
                  "loc": {
                    "start": {
                      "line": 135,
                      "column": 32
                    },
                    "end": {
                      "line": 135,
                      "column": 67
                    },
                    "identifierName": "decoratedPropertyWithRequiredParams"
                  },
                  "name": "decoratedPropertyWithRequiredParams"
                },
                "arguments": [
                  {
                    "type": "MemberExpression",
                    "start": 4154,
                    "end": 4185,
                    "loc": {
                      "start": {
                        "line": 135,
                        "column": 68
                      },
                      "end": {
                        "line": 135,
                        "column": 99
                      }
                    },
                    "object": {
                      "type": "MemberExpression",
                      "start": 4154,
                      "end": 4168,
                      "loc": {
                        "start": {
                          "line": 135,
                          "column": 68
                        },
                        "end": {
                          "line": 135,
                          "column": 82
                        }
                      },
                      "object": {
                        "type": "Identifier",
                        "start": 4154,
                        "end": 4159,
                        "loc": {
                          "start": {
                            "line": 135,
                            "column": 68
                          },
                          "end": {
                            "line": 135,
                            "column": 73
                          },
                          "identifierName": "Ember"
                        },
                        "name": "Ember"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 4160,
                        "end": 4168,
                        "loc": {
                          "start": {
                            "line": 135,
                            "column": 74
                          },
                          "end": {
                            "line": 135,
                            "column": 82
                          },
                          "identifierName": "computed"
                        },
                        "name": "computed"
                      },
                      "computed": false
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 4169,
                      "end": 4185,
                      "loc": {
                        "start": {
                          "line": 135,
                          "column": 83
                        },
                        "end": {
                          "line": 135,
                          "column": 99
                        },
                        "identifierName": "deprecatingAlias"
                      },
                      "name": "deprecatingAlias"
                    },
                    "computed": false
                  }
                ]
              },
              "leadingComments": null
            }
          ],
          "kind": "const",
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.deprecatingAlias](http://emberjs.com/api/classes/Ember.computed.html#method_deprecatingAlias)\n *\n * Creates a new property that is an alias for another property on an object.\n * Calls to get or set this property behave as though they were called on\n * the original property, but will also trigger a deprecation warning.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { deprecatingAlias } from 'ember-decorators/object/computed';\n *\n * export default class UserProfileComponent extends {\n *   person = {\n *     first: 'Joe'\n *   };\n *\n *   @deprecatingAlias('person.first', {\n *     id: 'user-profile.firstName',\n *     until: '3.0.0',\n *     url: 'https://example.com/deprecations/user-profile.firstName'\n *   }) firstName;\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to alias\n * @param {Object} options\n ",
              "start": 3167,
              "end": 4085,
              "loc": {
                "start": {
                  "line": 107,
                  "column": 0
                },
                "end": {
                  "line": 134,
                  "column": 3
                }
              }
            }
          ],
          "trailingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.empty](http://emberjs.com/api/classes/Ember.computed.html#method_empty)\n *\n * A computed property that returns `true` if the value of the dependent\n * property is null, an empty string, empty array, or empty function.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { empty } from 'ember-decorators/object/computed';\n *\n * export default class FoodItemsComponent extends Component {\n *   items = A(['taco', 'burrito']);\n *\n *   @empty('items') isEmpty; // false\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key of the property to check emptiness of\n ",
              "start": 4189,
              "end": 4866,
              "loc": {
                "start": {
                  "line": 137,
                  "column": 0
                },
                "end": {
                  "line": 157,
                  "column": 3
                }
              }
            }
          ]
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.deprecatingAlias](http://emberjs.com/api/classes/Ember.computed.html#method_deprecatingAlias)\n *\n * Creates a new property that is an alias for another property on an object.\n * Calls to get or set this property behave as though they were called on\n * the original property, but will also trigger a deprecation warning.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { deprecatingAlias } from 'ember-decorators/object/computed';\n *\n * export default class UserProfileComponent extends {\n *   person = {\n *     first: 'Joe'\n *   };\n *\n *   @deprecatingAlias('person.first', {\n *     id: 'user-profile.firstName',\n *     until: '3.0.0',\n *     url: 'https://example.com/deprecations/user-profile.firstName'\n *   }) firstName;\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to alias\n * @param {Object} options\n ",
            "start": 3167,
            "end": 4085,
            "loc": {
              "start": {
                "line": 107,
                "column": 0
              },
              "end": {
                "line": 134,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.empty](http://emberjs.com/api/classes/Ember.computed.html#method_empty)\n *\n * A computed property that returns `true` if the value of the dependent\n * property is null, an empty string, empty array, or empty function.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { empty } from 'ember-decorators/object/computed';\n *\n * export default class FoodItemsComponent extends Component {\n *   items = A(['taco', 'burrito']);\n *\n *   @empty('items') isEmpty; // false\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key of the property to check emptiness of\n ",
            "start": 4189,
            "end": 4866,
            "loc": {
              "start": {
                "line": 137,
                "column": 0
              },
              "end": {
                "line": 157,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 4867,
        "end": 4946,
        "loc": {
          "start": {
            "line": 158,
            "column": 0
          },
          "end": {
            "line": 158,
            "column": 79
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "VariableDeclaration",
          "start": 4874,
          "end": 4946,
          "loc": {
            "start": {
              "line": 158,
              "column": 7
            },
            "end": {
              "line": 158,
              "column": 79
            }
          },
          "declarations": [
            {
              "type": "VariableDeclarator",
              "start": 4880,
              "end": 4945,
              "loc": {
                "start": {
                  "line": 158,
                  "column": 13
                },
                "end": {
                  "line": 158,
                  "column": 78
                }
              },
              "id": {
                "type": "Identifier",
                "start": 4880,
                "end": 4885,
                "loc": {
                  "start": {
                    "line": 158,
                    "column": 13
                  },
                  "end": {
                    "line": 158,
                    "column": 18
                  },
                  "identifierName": "empty"
                },
                "name": "empty",
                "leadingComments": null
              },
              "init": {
                "type": "CallExpression",
                "start": 4888,
                "end": 4945,
                "loc": {
                  "start": {
                    "line": 158,
                    "column": 21
                  },
                  "end": {
                    "line": 158,
                    "column": 78
                  }
                },
                "callee": {
                  "type": "Identifier",
                  "start": 4888,
                  "end": 4923,
                  "loc": {
                    "start": {
                      "line": 158,
                      "column": 21
                    },
                    "end": {
                      "line": 158,
                      "column": 56
                    },
                    "identifierName": "decoratedPropertyWithRequiredParams"
                  },
                  "name": "decoratedPropertyWithRequiredParams"
                },
                "arguments": [
                  {
                    "type": "MemberExpression",
                    "start": 4924,
                    "end": 4944,
                    "loc": {
                      "start": {
                        "line": 158,
                        "column": 57
                      },
                      "end": {
                        "line": 158,
                        "column": 77
                      }
                    },
                    "object": {
                      "type": "MemberExpression",
                      "start": 4924,
                      "end": 4938,
                      "loc": {
                        "start": {
                          "line": 158,
                          "column": 57
                        },
                        "end": {
                          "line": 158,
                          "column": 71
                        }
                      },
                      "object": {
                        "type": "Identifier",
                        "start": 4924,
                        "end": 4929,
                        "loc": {
                          "start": {
                            "line": 158,
                            "column": 57
                          },
                          "end": {
                            "line": 158,
                            "column": 62
                          },
                          "identifierName": "Ember"
                        },
                        "name": "Ember"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 4930,
                        "end": 4938,
                        "loc": {
                          "start": {
                            "line": 158,
                            "column": 63
                          },
                          "end": {
                            "line": 158,
                            "column": 71
                          },
                          "identifierName": "computed"
                        },
                        "name": "computed"
                      },
                      "computed": false
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 4939,
                      "end": 4944,
                      "loc": {
                        "start": {
                          "line": 158,
                          "column": 72
                        },
                        "end": {
                          "line": 158,
                          "column": 77
                        },
                        "identifierName": "empty"
                      },
                      "name": "empty"
                    },
                    "computed": false
                  }
                ]
              },
              "leadingComments": null
            }
          ],
          "kind": "const",
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.empty](http://emberjs.com/api/classes/Ember.computed.html#method_empty)\n *\n * A computed property that returns `true` if the value of the dependent\n * property is null, an empty string, empty array, or empty function.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { empty } from 'ember-decorators/object/computed';\n *\n * export default class FoodItemsComponent extends Component {\n *   items = A(['taco', 'burrito']);\n *\n *   @empty('items') isEmpty; // false\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key of the property to check emptiness of\n ",
              "start": 4189,
              "end": 4866,
              "loc": {
                "start": {
                  "line": 137,
                  "column": 0
                },
                "end": {
                  "line": 157,
                  "column": 3
                }
              }
            }
          ],
          "trailingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.equal](http://emberjs.com/api/classes/Ember.computed.html#method_equal)\n *\n * A computed property that returns true if the dependent properties are equal.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { equal } from 'ember-decorators/object/computed';\n *\n * export default class NapTimeComponent extends Component {\n *   state = 'sleepy';\n *\n *   @equal('state', 'sleepy') napTime; // true\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to check\n * @param {Any} value - Value to compare the dependent property to\n ",
              "start": 4948,
              "end": 5573,
              "loc": {
                "start": {
                  "line": 160,
                  "column": 0
                },
                "end": {
                  "line": 179,
                  "column": 3
                }
              }
            }
          ]
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.empty](http://emberjs.com/api/classes/Ember.computed.html#method_empty)\n *\n * A computed property that returns `true` if the value of the dependent\n * property is null, an empty string, empty array, or empty function.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { empty } from 'ember-decorators/object/computed';\n *\n * export default class FoodItemsComponent extends Component {\n *   items = A(['taco', 'burrito']);\n *\n *   @empty('items') isEmpty; // false\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key of the property to check emptiness of\n ",
            "start": 4189,
            "end": 4866,
            "loc": {
              "start": {
                "line": 137,
                "column": 0
              },
              "end": {
                "line": 157,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.equal](http://emberjs.com/api/classes/Ember.computed.html#method_equal)\n *\n * A computed property that returns true if the dependent properties are equal.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { equal } from 'ember-decorators/object/computed';\n *\n * export default class NapTimeComponent extends Component {\n *   state = 'sleepy';\n *\n *   @equal('state', 'sleepy') napTime; // true\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to check\n * @param {Any} value - Value to compare the dependent property to\n ",
            "start": 4948,
            "end": 5573,
            "loc": {
              "start": {
                "line": 160,
                "column": 0
              },
              "end": {
                "line": 179,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 5574,
        "end": 5653,
        "loc": {
          "start": {
            "line": 180,
            "column": 0
          },
          "end": {
            "line": 180,
            "column": 79
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "VariableDeclaration",
          "start": 5581,
          "end": 5653,
          "loc": {
            "start": {
              "line": 180,
              "column": 7
            },
            "end": {
              "line": 180,
              "column": 79
            }
          },
          "declarations": [
            {
              "type": "VariableDeclarator",
              "start": 5587,
              "end": 5652,
              "loc": {
                "start": {
                  "line": 180,
                  "column": 13
                },
                "end": {
                  "line": 180,
                  "column": 78
                }
              },
              "id": {
                "type": "Identifier",
                "start": 5587,
                "end": 5592,
                "loc": {
                  "start": {
                    "line": 180,
                    "column": 13
                  },
                  "end": {
                    "line": 180,
                    "column": 18
                  },
                  "identifierName": "equal"
                },
                "name": "equal",
                "leadingComments": null
              },
              "init": {
                "type": "CallExpression",
                "start": 5595,
                "end": 5652,
                "loc": {
                  "start": {
                    "line": 180,
                    "column": 21
                  },
                  "end": {
                    "line": 180,
                    "column": 78
                  }
                },
                "callee": {
                  "type": "Identifier",
                  "start": 5595,
                  "end": 5630,
                  "loc": {
                    "start": {
                      "line": 180,
                      "column": 21
                    },
                    "end": {
                      "line": 180,
                      "column": 56
                    },
                    "identifierName": "decoratedPropertyWithRequiredParams"
                  },
                  "name": "decoratedPropertyWithRequiredParams"
                },
                "arguments": [
                  {
                    "type": "MemberExpression",
                    "start": 5631,
                    "end": 5651,
                    "loc": {
                      "start": {
                        "line": 180,
                        "column": 57
                      },
                      "end": {
                        "line": 180,
                        "column": 77
                      }
                    },
                    "object": {
                      "type": "MemberExpression",
                      "start": 5631,
                      "end": 5645,
                      "loc": {
                        "start": {
                          "line": 180,
                          "column": 57
                        },
                        "end": {
                          "line": 180,
                          "column": 71
                        }
                      },
                      "object": {
                        "type": "Identifier",
                        "start": 5631,
                        "end": 5636,
                        "loc": {
                          "start": {
                            "line": 180,
                            "column": 57
                          },
                          "end": {
                            "line": 180,
                            "column": 62
                          },
                          "identifierName": "Ember"
                        },
                        "name": "Ember"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 5637,
                        "end": 5645,
                        "loc": {
                          "start": {
                            "line": 180,
                            "column": 63
                          },
                          "end": {
                            "line": 180,
                            "column": 71
                          },
                          "identifierName": "computed"
                        },
                        "name": "computed"
                      },
                      "computed": false
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 5646,
                      "end": 5651,
                      "loc": {
                        "start": {
                          "line": 180,
                          "column": 72
                        },
                        "end": {
                          "line": 180,
                          "column": 77
                        },
                        "identifierName": "equal"
                      },
                      "name": "equal"
                    },
                    "computed": false
                  }
                ]
              },
              "leadingComments": null
            }
          ],
          "kind": "const",
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.equal](http://emberjs.com/api/classes/Ember.computed.html#method_equal)\n *\n * A computed property that returns true if the dependent properties are equal.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { equal } from 'ember-decorators/object/computed';\n *\n * export default class NapTimeComponent extends Component {\n *   state = 'sleepy';\n *\n *   @equal('state', 'sleepy') napTime; // true\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to check\n * @param {Any} value - Value to compare the dependent property to\n ",
              "start": 4948,
              "end": 5573,
              "loc": {
                "start": {
                  "line": 160,
                  "column": 0
                },
                "end": {
                  "line": 179,
                  "column": 3
                }
              }
            }
          ],
          "trailingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.filter](http://emberjs.com/api/classes/Ember.computed.html#method_filter)\n *\n * Filters the items in the array by the provided callback.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { filter } from 'ember-decorators/object/computed';\n *\n * export default class ChoresListComponent extends Component {\n *   chores = A([\n *     { name: 'cook', done: true },\n *     { name: 'clean', done: true },\n *     { name: 'write more unit tests', done: false }\n *   ]);\n *\n *   @filter('chores')\n *   remainingChores(chore, index, array) {\n *     return !chore.done;\n *   } // [{name: 'write more unit tests', done: false}]\n *\n *   // alternative syntax:\n *\n *   @filter('chores', function(chore, index, array) {\n *     return !chore.done;\n *   }) remainingChores; // [{name: 'write more unit tests', done: false}]\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the array to filter\n * @param {Function(item: Any, index: Number, array: Array<Any>): Boolean} callback - The function to filter with\n ",
              "start": 5655,
              "end": 6775,
              "loc": {
                "start": {
                  "line": 182,
                  "column": 0
                },
                "end": {
                  "line": 215,
                  "column": 3
                }
              }
            }
          ]
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.equal](http://emberjs.com/api/classes/Ember.computed.html#method_equal)\n *\n * A computed property that returns true if the dependent properties are equal.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { equal } from 'ember-decorators/object/computed';\n *\n * export default class NapTimeComponent extends Component {\n *   state = 'sleepy';\n *\n *   @equal('state', 'sleepy') napTime; // true\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to check\n * @param {Any} value - Value to compare the dependent property to\n ",
            "start": 4948,
            "end": 5573,
            "loc": {
              "start": {
                "line": 160,
                "column": 0
              },
              "end": {
                "line": 179,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.filter](http://emberjs.com/api/classes/Ember.computed.html#method_filter)\n *\n * Filters the items in the array by the provided callback.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { filter } from 'ember-decorators/object/computed';\n *\n * export default class ChoresListComponent extends Component {\n *   chores = A([\n *     { name: 'cook', done: true },\n *     { name: 'clean', done: true },\n *     { name: 'write more unit tests', done: false }\n *   ]);\n *\n *   @filter('chores')\n *   remainingChores(chore, index, array) {\n *     return !chore.done;\n *   } // [{name: 'write more unit tests', done: false}]\n *\n *   // alternative syntax:\n *\n *   @filter('chores', function(chore, index, array) {\n *     return !chore.done;\n *   }) remainingChores; // [{name: 'write more unit tests', done: false}]\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the array to filter\n * @param {Function(item: Any, index: Number, array: Array<Any>): Boolean} callback - The function to filter with\n ",
            "start": 5655,
            "end": 6775,
            "loc": {
              "start": {
                "line": 182,
                "column": 0
              },
              "end": {
                "line": 215,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 6776,
        "end": 6859,
        "loc": {
          "start": {
            "line": 216,
            "column": 0
          },
          "end": {
            "line": 216,
            "column": 83
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "VariableDeclaration",
          "start": 6783,
          "end": 6859,
          "loc": {
            "start": {
              "line": 216,
              "column": 7
            },
            "end": {
              "line": 216,
              "column": 83
            }
          },
          "declarations": [
            {
              "type": "VariableDeclarator",
              "start": 6789,
              "end": 6858,
              "loc": {
                "start": {
                  "line": 216,
                  "column": 13
                },
                "end": {
                  "line": 216,
                  "column": 82
                }
              },
              "id": {
                "type": "Identifier",
                "start": 6789,
                "end": 6795,
                "loc": {
                  "start": {
                    "line": 216,
                    "column": 13
                  },
                  "end": {
                    "line": 216,
                    "column": 19
                  },
                  "identifierName": "filter"
                },
                "name": "filter",
                "leadingComments": null
              },
              "init": {
                "type": "CallExpression",
                "start": 6798,
                "end": 6858,
                "loc": {
                  "start": {
                    "line": 216,
                    "column": 22
                  },
                  "end": {
                    "line": 216,
                    "column": 82
                  }
                },
                "callee": {
                  "type": "Identifier",
                  "start": 6798,
                  "end": 6835,
                  "loc": {
                    "start": {
                      "line": 216,
                      "column": 22
                    },
                    "end": {
                      "line": 216,
                      "column": 59
                    },
                    "identifierName": "decoratedPropertyWithOptionalCallback"
                  },
                  "name": "decoratedPropertyWithOptionalCallback"
                },
                "arguments": [
                  {
                    "type": "MemberExpression",
                    "start": 6836,
                    "end": 6857,
                    "loc": {
                      "start": {
                        "line": 216,
                        "column": 60
                      },
                      "end": {
                        "line": 216,
                        "column": 81
                      }
                    },
                    "object": {
                      "type": "MemberExpression",
                      "start": 6836,
                      "end": 6850,
                      "loc": {
                        "start": {
                          "line": 216,
                          "column": 60
                        },
                        "end": {
                          "line": 216,
                          "column": 74
                        }
                      },
                      "object": {
                        "type": "Identifier",
                        "start": 6836,
                        "end": 6841,
                        "loc": {
                          "start": {
                            "line": 216,
                            "column": 60
                          },
                          "end": {
                            "line": 216,
                            "column": 65
                          },
                          "identifierName": "Ember"
                        },
                        "name": "Ember"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 6842,
                        "end": 6850,
                        "loc": {
                          "start": {
                            "line": 216,
                            "column": 66
                          },
                          "end": {
                            "line": 216,
                            "column": 74
                          },
                          "identifierName": "computed"
                        },
                        "name": "computed"
                      },
                      "computed": false
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 6851,
                      "end": 6857,
                      "loc": {
                        "start": {
                          "line": 216,
                          "column": 75
                        },
                        "end": {
                          "line": 216,
                          "column": 81
                        },
                        "identifierName": "filter"
                      },
                      "name": "filter"
                    },
                    "computed": false
                  }
                ]
              },
              "leadingComments": null
            }
          ],
          "kind": "const",
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.filter](http://emberjs.com/api/classes/Ember.computed.html#method_filter)\n *\n * Filters the items in the array by the provided callback.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { filter } from 'ember-decorators/object/computed';\n *\n * export default class ChoresListComponent extends Component {\n *   chores = A([\n *     { name: 'cook', done: true },\n *     { name: 'clean', done: true },\n *     { name: 'write more unit tests', done: false }\n *   ]);\n *\n *   @filter('chores')\n *   remainingChores(chore, index, array) {\n *     return !chore.done;\n *   } // [{name: 'write more unit tests', done: false}]\n *\n *   // alternative syntax:\n *\n *   @filter('chores', function(chore, index, array) {\n *     return !chore.done;\n *   }) remainingChores; // [{name: 'write more unit tests', done: false}]\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the array to filter\n * @param {Function(item: Any, index: Number, array: Array<Any>): Boolean} callback - The function to filter with\n ",
              "start": 5655,
              "end": 6775,
              "loc": {
                "start": {
                  "line": 182,
                  "column": 0
                },
                "end": {
                  "line": 215,
                  "column": 3
                }
              }
            }
          ],
          "trailingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.filterBy](http://emberjs.com/api/classes/Ember.computed.html#method_filterBy)\n *\n * Filters the array by the property and value.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { filterBy } from 'ember-decorators/object/computed';\n *\n * export default class ChoresListComponent extends Component {\n *   chores = A([\n *     { name: 'cook', done: true },\n *     { name: 'clean', done: true },\n *     { name: 'write more unit tests', done: false }\n *   ]);\n *\n *   @filterBy('chores', 'done', false) remainingChores; // [{name: 'write more unit tests', done: false}]\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the array to filter\n * @param {String} propertyKey - Property of the array items to filter by\n * @param {Any} value - Value to filter by\n ",
              "start": 6861,
              "end": 7743,
              "loc": {
                "start": {
                  "line": 218,
                  "column": 0
                },
                "end": {
                  "line": 243,
                  "column": 3
                }
              }
            }
          ]
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.filter](http://emberjs.com/api/classes/Ember.computed.html#method_filter)\n *\n * Filters the items in the array by the provided callback.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { filter } from 'ember-decorators/object/computed';\n *\n * export default class ChoresListComponent extends Component {\n *   chores = A([\n *     { name: 'cook', done: true },\n *     { name: 'clean', done: true },\n *     { name: 'write more unit tests', done: false }\n *   ]);\n *\n *   @filter('chores')\n *   remainingChores(chore, index, array) {\n *     return !chore.done;\n *   } // [{name: 'write more unit tests', done: false}]\n *\n *   // alternative syntax:\n *\n *   @filter('chores', function(chore, index, array) {\n *     return !chore.done;\n *   }) remainingChores; // [{name: 'write more unit tests', done: false}]\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the array to filter\n * @param {Function(item: Any, index: Number, array: Array<Any>): Boolean} callback - The function to filter with\n ",
            "start": 5655,
            "end": 6775,
            "loc": {
              "start": {
                "line": 182,
                "column": 0
              },
              "end": {
                "line": 215,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.filterBy](http://emberjs.com/api/classes/Ember.computed.html#method_filterBy)\n *\n * Filters the array by the property and value.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { filterBy } from 'ember-decorators/object/computed';\n *\n * export default class ChoresListComponent extends Component {\n *   chores = A([\n *     { name: 'cook', done: true },\n *     { name: 'clean', done: true },\n *     { name: 'write more unit tests', done: false }\n *   ]);\n *\n *   @filterBy('chores', 'done', false) remainingChores; // [{name: 'write more unit tests', done: false}]\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the array to filter\n * @param {String} propertyKey - Property of the array items to filter by\n * @param {Any} value - Value to filter by\n ",
            "start": 6861,
            "end": 7743,
            "loc": {
              "start": {
                "line": 218,
                "column": 0
              },
              "end": {
                "line": 243,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 7744,
        "end": 7829,
        "loc": {
          "start": {
            "line": 244,
            "column": 0
          },
          "end": {
            "line": 244,
            "column": 85
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "VariableDeclaration",
          "start": 7751,
          "end": 7829,
          "loc": {
            "start": {
              "line": 244,
              "column": 7
            },
            "end": {
              "line": 244,
              "column": 85
            }
          },
          "declarations": [
            {
              "type": "VariableDeclarator",
              "start": 7757,
              "end": 7828,
              "loc": {
                "start": {
                  "line": 244,
                  "column": 13
                },
                "end": {
                  "line": 244,
                  "column": 84
                }
              },
              "id": {
                "type": "Identifier",
                "start": 7757,
                "end": 7765,
                "loc": {
                  "start": {
                    "line": 244,
                    "column": 13
                  },
                  "end": {
                    "line": 244,
                    "column": 21
                  },
                  "identifierName": "filterBy"
                },
                "name": "filterBy",
                "leadingComments": null
              },
              "init": {
                "type": "CallExpression",
                "start": 7768,
                "end": 7828,
                "loc": {
                  "start": {
                    "line": 244,
                    "column": 24
                  },
                  "end": {
                    "line": 244,
                    "column": 84
                  }
                },
                "callee": {
                  "type": "Identifier",
                  "start": 7768,
                  "end": 7803,
                  "loc": {
                    "start": {
                      "line": 244,
                      "column": 24
                    },
                    "end": {
                      "line": 244,
                      "column": 59
                    },
                    "identifierName": "decoratedPropertyWithRequiredParams"
                  },
                  "name": "decoratedPropertyWithRequiredParams"
                },
                "arguments": [
                  {
                    "type": "MemberExpression",
                    "start": 7804,
                    "end": 7827,
                    "loc": {
                      "start": {
                        "line": 244,
                        "column": 60
                      },
                      "end": {
                        "line": 244,
                        "column": 83
                      }
                    },
                    "object": {
                      "type": "MemberExpression",
                      "start": 7804,
                      "end": 7818,
                      "loc": {
                        "start": {
                          "line": 244,
                          "column": 60
                        },
                        "end": {
                          "line": 244,
                          "column": 74
                        }
                      },
                      "object": {
                        "type": "Identifier",
                        "start": 7804,
                        "end": 7809,
                        "loc": {
                          "start": {
                            "line": 244,
                            "column": 60
                          },
                          "end": {
                            "line": 244,
                            "column": 65
                          },
                          "identifierName": "Ember"
                        },
                        "name": "Ember"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 7810,
                        "end": 7818,
                        "loc": {
                          "start": {
                            "line": 244,
                            "column": 66
                          },
                          "end": {
                            "line": 244,
                            "column": 74
                          },
                          "identifierName": "computed"
                        },
                        "name": "computed"
                      },
                      "computed": false
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 7819,
                      "end": 7827,
                      "loc": {
                        "start": {
                          "line": 244,
                          "column": 75
                        },
                        "end": {
                          "line": 244,
                          "column": 83
                        },
                        "identifierName": "filterBy"
                      },
                      "name": "filterBy"
                    },
                    "computed": false
                  }
                ]
              },
              "leadingComments": null
            }
          ],
          "kind": "const",
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.filterBy](http://emberjs.com/api/classes/Ember.computed.html#method_filterBy)\n *\n * Filters the array by the property and value.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { filterBy } from 'ember-decorators/object/computed';\n *\n * export default class ChoresListComponent extends Component {\n *   chores = A([\n *     { name: 'cook', done: true },\n *     { name: 'clean', done: true },\n *     { name: 'write more unit tests', done: false }\n *   ]);\n *\n *   @filterBy('chores', 'done', false) remainingChores; // [{name: 'write more unit tests', done: false}]\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the array to filter\n * @param {String} propertyKey - Property of the array items to filter by\n * @param {Any} value - Value to filter by\n ",
              "start": 6861,
              "end": 7743,
              "loc": {
                "start": {
                  "line": 218,
                  "column": 0
                },
                "end": {
                  "line": 243,
                  "column": 3
                }
              }
            }
          ],
          "trailingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.gt](http://emberjs.com/api/classes/Ember.computed.html#method_gt)\n *\n * A computed property that returns `true` if the provided dependent property\n * is greater than the provided value.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { gt } from 'ember-decorators/object/computed';\n *\n * export default class CatPartyComponent extends Component {\n *   totalCats = 11;\n *\n *   @gt('totalCats', 10) isCatParty; // true\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to compare\n * @param {Number} value - Value to compare against\n ",
              "start": 7831,
              "end": 8468,
              "loc": {
                "start": {
                  "line": 246,
                  "column": 0
                },
                "end": {
                  "line": 266,
                  "column": 3
                }
              }
            }
          ]
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.filterBy](http://emberjs.com/api/classes/Ember.computed.html#method_filterBy)\n *\n * Filters the array by the property and value.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { filterBy } from 'ember-decorators/object/computed';\n *\n * export default class ChoresListComponent extends Component {\n *   chores = A([\n *     { name: 'cook', done: true },\n *     { name: 'clean', done: true },\n *     { name: 'write more unit tests', done: false }\n *   ]);\n *\n *   @filterBy('chores', 'done', false) remainingChores; // [{name: 'write more unit tests', done: false}]\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the array to filter\n * @param {String} propertyKey - Property of the array items to filter by\n * @param {Any} value - Value to filter by\n ",
            "start": 6861,
            "end": 7743,
            "loc": {
              "start": {
                "line": 218,
                "column": 0
              },
              "end": {
                "line": 243,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.gt](http://emberjs.com/api/classes/Ember.computed.html#method_gt)\n *\n * A computed property that returns `true` if the provided dependent property\n * is greater than the provided value.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { gt } from 'ember-decorators/object/computed';\n *\n * export default class CatPartyComponent extends Component {\n *   totalCats = 11;\n *\n *   @gt('totalCats', 10) isCatParty; // true\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to compare\n * @param {Number} value - Value to compare against\n ",
            "start": 7831,
            "end": 8468,
            "loc": {
              "start": {
                "line": 246,
                "column": 0
              },
              "end": {
                "line": 266,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 8469,
        "end": 8542,
        "loc": {
          "start": {
            "line": 267,
            "column": 0
          },
          "end": {
            "line": 267,
            "column": 73
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "VariableDeclaration",
          "start": 8476,
          "end": 8542,
          "loc": {
            "start": {
              "line": 267,
              "column": 7
            },
            "end": {
              "line": 267,
              "column": 73
            }
          },
          "declarations": [
            {
              "type": "VariableDeclarator",
              "start": 8482,
              "end": 8541,
              "loc": {
                "start": {
                  "line": 267,
                  "column": 13
                },
                "end": {
                  "line": 267,
                  "column": 72
                }
              },
              "id": {
                "type": "Identifier",
                "start": 8482,
                "end": 8484,
                "loc": {
                  "start": {
                    "line": 267,
                    "column": 13
                  },
                  "end": {
                    "line": 267,
                    "column": 15
                  },
                  "identifierName": "gt"
                },
                "name": "gt",
                "leadingComments": null
              },
              "init": {
                "type": "CallExpression",
                "start": 8487,
                "end": 8541,
                "loc": {
                  "start": {
                    "line": 267,
                    "column": 18
                  },
                  "end": {
                    "line": 267,
                    "column": 72
                  }
                },
                "callee": {
                  "type": "Identifier",
                  "start": 8487,
                  "end": 8522,
                  "loc": {
                    "start": {
                      "line": 267,
                      "column": 18
                    },
                    "end": {
                      "line": 267,
                      "column": 53
                    },
                    "identifierName": "decoratedPropertyWithRequiredParams"
                  },
                  "name": "decoratedPropertyWithRequiredParams"
                },
                "arguments": [
                  {
                    "type": "MemberExpression",
                    "start": 8523,
                    "end": 8540,
                    "loc": {
                      "start": {
                        "line": 267,
                        "column": 54
                      },
                      "end": {
                        "line": 267,
                        "column": 71
                      }
                    },
                    "object": {
                      "type": "MemberExpression",
                      "start": 8523,
                      "end": 8537,
                      "loc": {
                        "start": {
                          "line": 267,
                          "column": 54
                        },
                        "end": {
                          "line": 267,
                          "column": 68
                        }
                      },
                      "object": {
                        "type": "Identifier",
                        "start": 8523,
                        "end": 8528,
                        "loc": {
                          "start": {
                            "line": 267,
                            "column": 54
                          },
                          "end": {
                            "line": 267,
                            "column": 59
                          },
                          "identifierName": "Ember"
                        },
                        "name": "Ember"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 8529,
                        "end": 8537,
                        "loc": {
                          "start": {
                            "line": 267,
                            "column": 60
                          },
                          "end": {
                            "line": 267,
                            "column": 68
                          },
                          "identifierName": "computed"
                        },
                        "name": "computed"
                      },
                      "computed": false
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 8538,
                      "end": 8540,
                      "loc": {
                        "start": {
                          "line": 267,
                          "column": 69
                        },
                        "end": {
                          "line": 267,
                          "column": 71
                        },
                        "identifierName": "gt"
                      },
                      "name": "gt"
                    },
                    "computed": false
                  }
                ]
              },
              "leadingComments": null
            }
          ],
          "kind": "const",
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.gt](http://emberjs.com/api/classes/Ember.computed.html#method_gt)\n *\n * A computed property that returns `true` if the provided dependent property\n * is greater than the provided value.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { gt } from 'ember-decorators/object/computed';\n *\n * export default class CatPartyComponent extends Component {\n *   totalCats = 11;\n *\n *   @gt('totalCats', 10) isCatParty; // true\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to compare\n * @param {Number} value - Value to compare against\n ",
              "start": 7831,
              "end": 8468,
              "loc": {
                "start": {
                  "line": 246,
                  "column": 0
                },
                "end": {
                  "line": 266,
                  "column": 3
                }
              }
            }
          ],
          "trailingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.gte](http://emberjs.com/api/classes/Ember.computed.html#method_gte)\n *\n * A computed property that returns `true` if the provided dependent property\n * is greater than or equal to the provided value.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { gte } from 'ember-decorators/object/computed';\n *\n * export default class PlayerListComponent extends Component {\n *   totalPlayers = 14;\n *\n *   @gte('totalPlayers', 14) hasEnoughPlayers; // true\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to compare\n * @param {Number} value - Value to compare against\n ",
              "start": 8544,
              "end": 9211,
              "loc": {
                "start": {
                  "line": 269,
                  "column": 0
                },
                "end": {
                  "line": 289,
                  "column": 3
                }
              }
            }
          ]
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.gt](http://emberjs.com/api/classes/Ember.computed.html#method_gt)\n *\n * A computed property that returns `true` if the provided dependent property\n * is greater than the provided value.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { gt } from 'ember-decorators/object/computed';\n *\n * export default class CatPartyComponent extends Component {\n *   totalCats = 11;\n *\n *   @gt('totalCats', 10) isCatParty; // true\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to compare\n * @param {Number} value - Value to compare against\n ",
            "start": 7831,
            "end": 8468,
            "loc": {
              "start": {
                "line": 246,
                "column": 0
              },
              "end": {
                "line": 266,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.gte](http://emberjs.com/api/classes/Ember.computed.html#method_gte)\n *\n * A computed property that returns `true` if the provided dependent property\n * is greater than or equal to the provided value.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { gte } from 'ember-decorators/object/computed';\n *\n * export default class PlayerListComponent extends Component {\n *   totalPlayers = 14;\n *\n *   @gte('totalPlayers', 14) hasEnoughPlayers; // true\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to compare\n * @param {Number} value - Value to compare against\n ",
            "start": 8544,
            "end": 9211,
            "loc": {
              "start": {
                "line": 269,
                "column": 0
              },
              "end": {
                "line": 289,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 9212,
        "end": 9287,
        "loc": {
          "start": {
            "line": 290,
            "column": 0
          },
          "end": {
            "line": 290,
            "column": 75
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "VariableDeclaration",
          "start": 9219,
          "end": 9287,
          "loc": {
            "start": {
              "line": 290,
              "column": 7
            },
            "end": {
              "line": 290,
              "column": 75
            }
          },
          "declarations": [
            {
              "type": "VariableDeclarator",
              "start": 9225,
              "end": 9286,
              "loc": {
                "start": {
                  "line": 290,
                  "column": 13
                },
                "end": {
                  "line": 290,
                  "column": 74
                }
              },
              "id": {
                "type": "Identifier",
                "start": 9225,
                "end": 9228,
                "loc": {
                  "start": {
                    "line": 290,
                    "column": 13
                  },
                  "end": {
                    "line": 290,
                    "column": 16
                  },
                  "identifierName": "gte"
                },
                "name": "gte",
                "leadingComments": null
              },
              "init": {
                "type": "CallExpression",
                "start": 9231,
                "end": 9286,
                "loc": {
                  "start": {
                    "line": 290,
                    "column": 19
                  },
                  "end": {
                    "line": 290,
                    "column": 74
                  }
                },
                "callee": {
                  "type": "Identifier",
                  "start": 9231,
                  "end": 9266,
                  "loc": {
                    "start": {
                      "line": 290,
                      "column": 19
                    },
                    "end": {
                      "line": 290,
                      "column": 54
                    },
                    "identifierName": "decoratedPropertyWithRequiredParams"
                  },
                  "name": "decoratedPropertyWithRequiredParams"
                },
                "arguments": [
                  {
                    "type": "MemberExpression",
                    "start": 9267,
                    "end": 9285,
                    "loc": {
                      "start": {
                        "line": 290,
                        "column": 55
                      },
                      "end": {
                        "line": 290,
                        "column": 73
                      }
                    },
                    "object": {
                      "type": "MemberExpression",
                      "start": 9267,
                      "end": 9281,
                      "loc": {
                        "start": {
                          "line": 290,
                          "column": 55
                        },
                        "end": {
                          "line": 290,
                          "column": 69
                        }
                      },
                      "object": {
                        "type": "Identifier",
                        "start": 9267,
                        "end": 9272,
                        "loc": {
                          "start": {
                            "line": 290,
                            "column": 55
                          },
                          "end": {
                            "line": 290,
                            "column": 60
                          },
                          "identifierName": "Ember"
                        },
                        "name": "Ember"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 9273,
                        "end": 9281,
                        "loc": {
                          "start": {
                            "line": 290,
                            "column": 61
                          },
                          "end": {
                            "line": 290,
                            "column": 69
                          },
                          "identifierName": "computed"
                        },
                        "name": "computed"
                      },
                      "computed": false
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 9282,
                      "end": 9285,
                      "loc": {
                        "start": {
                          "line": 290,
                          "column": 70
                        },
                        "end": {
                          "line": 290,
                          "column": 73
                        },
                        "identifierName": "gte"
                      },
                      "name": "gte"
                    },
                    "computed": false
                  }
                ]
              },
              "leadingComments": null
            }
          ],
          "kind": "const",
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.gte](http://emberjs.com/api/classes/Ember.computed.html#method_gte)\n *\n * A computed property that returns `true` if the provided dependent property\n * is greater than or equal to the provided value.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { gte } from 'ember-decorators/object/computed';\n *\n * export default class PlayerListComponent extends Component {\n *   totalPlayers = 14;\n *\n *   @gte('totalPlayers', 14) hasEnoughPlayers; // true\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to compare\n * @param {Number} value - Value to compare against\n ",
              "start": 8544,
              "end": 9211,
              "loc": {
                "start": {
                  "line": 269,
                  "column": 0
                },
                "end": {
                  "line": 289,
                  "column": 3
                }
              }
            }
          ],
          "trailingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.intersect](http://emberjs.com/api/classes/Ember.computed.html#method_intersect)\n *\n * A computed property which returns a new array with all the duplicated\n * elements from two or more dependent arrays.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { intersect } from 'ember-decorators/object/computed';\n *\n * export default class FoodListComponent extends Component {\n *   likes = A([ 'tacos', 'puppies', 'pizza' ]);\n *   foods = A(['tacos', 'pizza']);\n *\n *   @intersect('likes', 'foods') favoriteFoods; // ['tacos', 'pizza']\n * }\n * ```\n *\n * @function\n * @param {...String} dependentKeys - Keys of the arrays to intersect\n ",
              "start": 9289,
              "end": 10028,
              "loc": {
                "start": {
                  "line": 292,
                  "column": 0
                },
                "end": {
                  "line": 313,
                  "column": 3
                }
              }
            }
          ]
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.gte](http://emberjs.com/api/classes/Ember.computed.html#method_gte)\n *\n * A computed property that returns `true` if the provided dependent property\n * is greater than or equal to the provided value.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { gte } from 'ember-decorators/object/computed';\n *\n * export default class PlayerListComponent extends Component {\n *   totalPlayers = 14;\n *\n *   @gte('totalPlayers', 14) hasEnoughPlayers; // true\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to compare\n * @param {Number} value - Value to compare against\n ",
            "start": 8544,
            "end": 9211,
            "loc": {
              "start": {
                "line": 269,
                "column": 0
              },
              "end": {
                "line": 289,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.intersect](http://emberjs.com/api/classes/Ember.computed.html#method_intersect)\n *\n * A computed property which returns a new array with all the duplicated\n * elements from two or more dependent arrays.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { intersect } from 'ember-decorators/object/computed';\n *\n * export default class FoodListComponent extends Component {\n *   likes = A([ 'tacos', 'puppies', 'pizza' ]);\n *   foods = A(['tacos', 'pizza']);\n *\n *   @intersect('likes', 'foods') favoriteFoods; // ['tacos', 'pizza']\n * }\n * ```\n *\n * @function\n * @param {...String} dependentKeys - Keys of the arrays to intersect\n ",
            "start": 9289,
            "end": 10028,
            "loc": {
              "start": {
                "line": 292,
                "column": 0
              },
              "end": {
                "line": 313,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 10029,
        "end": 10116,
        "loc": {
          "start": {
            "line": 314,
            "column": 0
          },
          "end": {
            "line": 314,
            "column": 87
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "VariableDeclaration",
          "start": 10036,
          "end": 10116,
          "loc": {
            "start": {
              "line": 314,
              "column": 7
            },
            "end": {
              "line": 314,
              "column": 87
            }
          },
          "declarations": [
            {
              "type": "VariableDeclarator",
              "start": 10042,
              "end": 10115,
              "loc": {
                "start": {
                  "line": 314,
                  "column": 13
                },
                "end": {
                  "line": 314,
                  "column": 86
                }
              },
              "id": {
                "type": "Identifier",
                "start": 10042,
                "end": 10051,
                "loc": {
                  "start": {
                    "line": 314,
                    "column": 13
                  },
                  "end": {
                    "line": 314,
                    "column": 22
                  },
                  "identifierName": "intersect"
                },
                "name": "intersect",
                "leadingComments": null
              },
              "init": {
                "type": "CallExpression",
                "start": 10054,
                "end": 10115,
                "loc": {
                  "start": {
                    "line": 314,
                    "column": 25
                  },
                  "end": {
                    "line": 314,
                    "column": 86
                  }
                },
                "callee": {
                  "type": "Identifier",
                  "start": 10054,
                  "end": 10089,
                  "loc": {
                    "start": {
                      "line": 314,
                      "column": 25
                    },
                    "end": {
                      "line": 314,
                      "column": 60
                    },
                    "identifierName": "decoratedPropertyWithRequiredParams"
                  },
                  "name": "decoratedPropertyWithRequiredParams"
                },
                "arguments": [
                  {
                    "type": "MemberExpression",
                    "start": 10090,
                    "end": 10114,
                    "loc": {
                      "start": {
                        "line": 314,
                        "column": 61
                      },
                      "end": {
                        "line": 314,
                        "column": 85
                      }
                    },
                    "object": {
                      "type": "MemberExpression",
                      "start": 10090,
                      "end": 10104,
                      "loc": {
                        "start": {
                          "line": 314,
                          "column": 61
                        },
                        "end": {
                          "line": 314,
                          "column": 75
                        }
                      },
                      "object": {
                        "type": "Identifier",
                        "start": 10090,
                        "end": 10095,
                        "loc": {
                          "start": {
                            "line": 314,
                            "column": 61
                          },
                          "end": {
                            "line": 314,
                            "column": 66
                          },
                          "identifierName": "Ember"
                        },
                        "name": "Ember"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 10096,
                        "end": 10104,
                        "loc": {
                          "start": {
                            "line": 314,
                            "column": 67
                          },
                          "end": {
                            "line": 314,
                            "column": 75
                          },
                          "identifierName": "computed"
                        },
                        "name": "computed"
                      },
                      "computed": false
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 10105,
                      "end": 10114,
                      "loc": {
                        "start": {
                          "line": 314,
                          "column": 76
                        },
                        "end": {
                          "line": 314,
                          "column": 85
                        },
                        "identifierName": "intersect"
                      },
                      "name": "intersect"
                    },
                    "computed": false
                  }
                ]
              },
              "leadingComments": null
            }
          ],
          "kind": "const",
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.intersect](http://emberjs.com/api/classes/Ember.computed.html#method_intersect)\n *\n * A computed property which returns a new array with all the duplicated\n * elements from two or more dependent arrays.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { intersect } from 'ember-decorators/object/computed';\n *\n * export default class FoodListComponent extends Component {\n *   likes = A([ 'tacos', 'puppies', 'pizza' ]);\n *   foods = A(['tacos', 'pizza']);\n *\n *   @intersect('likes', 'foods') favoriteFoods; // ['tacos', 'pizza']\n * }\n * ```\n *\n * @function\n * @param {...String} dependentKeys - Keys of the arrays to intersect\n ",
              "start": 9289,
              "end": 10028,
              "loc": {
                "start": {
                  "line": 292,
                  "column": 0
                },
                "end": {
                  "line": 313,
                  "column": 3
                }
              }
            }
          ],
          "trailingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.lt](http://emberjs.com/api/classes/Ember.computed.html#method_lt)\n *\n * A computed property that returns `true` if the provided dependent property\n * is less than the provided value.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { lt } from 'ember-decorators/object/computed';\n *\n * export default class DogPartyComponent extends Component {\n *   totalDogs = 3;\n *\n *   @lt('totalDogs', 10) isDogParty; // true\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to compare\n * @param {Number} value - Value to compare against\n ",
              "start": 10118,
              "end": 10751,
              "loc": {
                "start": {
                  "line": 316,
                  "column": 0
                },
                "end": {
                  "line": 336,
                  "column": 3
                }
              }
            }
          ]
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.intersect](http://emberjs.com/api/classes/Ember.computed.html#method_intersect)\n *\n * A computed property which returns a new array with all the duplicated\n * elements from two or more dependent arrays.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { intersect } from 'ember-decorators/object/computed';\n *\n * export default class FoodListComponent extends Component {\n *   likes = A([ 'tacos', 'puppies', 'pizza' ]);\n *   foods = A(['tacos', 'pizza']);\n *\n *   @intersect('likes', 'foods') favoriteFoods; // ['tacos', 'pizza']\n * }\n * ```\n *\n * @function\n * @param {...String} dependentKeys - Keys of the arrays to intersect\n ",
            "start": 9289,
            "end": 10028,
            "loc": {
              "start": {
                "line": 292,
                "column": 0
              },
              "end": {
                "line": 313,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.lt](http://emberjs.com/api/classes/Ember.computed.html#method_lt)\n *\n * A computed property that returns `true` if the provided dependent property\n * is less than the provided value.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { lt } from 'ember-decorators/object/computed';\n *\n * export default class DogPartyComponent extends Component {\n *   totalDogs = 3;\n *\n *   @lt('totalDogs', 10) isDogParty; // true\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to compare\n * @param {Number} value - Value to compare against\n ",
            "start": 10118,
            "end": 10751,
            "loc": {
              "start": {
                "line": 316,
                "column": 0
              },
              "end": {
                "line": 336,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 10752,
        "end": 10825,
        "loc": {
          "start": {
            "line": 337,
            "column": 0
          },
          "end": {
            "line": 337,
            "column": 73
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "VariableDeclaration",
          "start": 10759,
          "end": 10825,
          "loc": {
            "start": {
              "line": 337,
              "column": 7
            },
            "end": {
              "line": 337,
              "column": 73
            }
          },
          "declarations": [
            {
              "type": "VariableDeclarator",
              "start": 10765,
              "end": 10824,
              "loc": {
                "start": {
                  "line": 337,
                  "column": 13
                },
                "end": {
                  "line": 337,
                  "column": 72
                }
              },
              "id": {
                "type": "Identifier",
                "start": 10765,
                "end": 10767,
                "loc": {
                  "start": {
                    "line": 337,
                    "column": 13
                  },
                  "end": {
                    "line": 337,
                    "column": 15
                  },
                  "identifierName": "lt"
                },
                "name": "lt",
                "leadingComments": null
              },
              "init": {
                "type": "CallExpression",
                "start": 10770,
                "end": 10824,
                "loc": {
                  "start": {
                    "line": 337,
                    "column": 18
                  },
                  "end": {
                    "line": 337,
                    "column": 72
                  }
                },
                "callee": {
                  "type": "Identifier",
                  "start": 10770,
                  "end": 10805,
                  "loc": {
                    "start": {
                      "line": 337,
                      "column": 18
                    },
                    "end": {
                      "line": 337,
                      "column": 53
                    },
                    "identifierName": "decoratedPropertyWithRequiredParams"
                  },
                  "name": "decoratedPropertyWithRequiredParams"
                },
                "arguments": [
                  {
                    "type": "MemberExpression",
                    "start": 10806,
                    "end": 10823,
                    "loc": {
                      "start": {
                        "line": 337,
                        "column": 54
                      },
                      "end": {
                        "line": 337,
                        "column": 71
                      }
                    },
                    "object": {
                      "type": "MemberExpression",
                      "start": 10806,
                      "end": 10820,
                      "loc": {
                        "start": {
                          "line": 337,
                          "column": 54
                        },
                        "end": {
                          "line": 337,
                          "column": 68
                        }
                      },
                      "object": {
                        "type": "Identifier",
                        "start": 10806,
                        "end": 10811,
                        "loc": {
                          "start": {
                            "line": 337,
                            "column": 54
                          },
                          "end": {
                            "line": 337,
                            "column": 59
                          },
                          "identifierName": "Ember"
                        },
                        "name": "Ember"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 10812,
                        "end": 10820,
                        "loc": {
                          "start": {
                            "line": 337,
                            "column": 60
                          },
                          "end": {
                            "line": 337,
                            "column": 68
                          },
                          "identifierName": "computed"
                        },
                        "name": "computed"
                      },
                      "computed": false
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 10821,
                      "end": 10823,
                      "loc": {
                        "start": {
                          "line": 337,
                          "column": 69
                        },
                        "end": {
                          "line": 337,
                          "column": 71
                        },
                        "identifierName": "lt"
                      },
                      "name": "lt"
                    },
                    "computed": false
                  }
                ]
              },
              "leadingComments": null
            }
          ],
          "kind": "const",
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.lt](http://emberjs.com/api/classes/Ember.computed.html#method_lt)\n *\n * A computed property that returns `true` if the provided dependent property\n * is less than the provided value.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { lt } from 'ember-decorators/object/computed';\n *\n * export default class DogPartyComponent extends Component {\n *   totalDogs = 3;\n *\n *   @lt('totalDogs', 10) isDogParty; // true\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to compare\n * @param {Number} value - Value to compare against\n ",
              "start": 10118,
              "end": 10751,
              "loc": {
                "start": {
                  "line": 316,
                  "column": 0
                },
                "end": {
                  "line": 336,
                  "column": 3
                }
              }
            }
          ],
          "trailingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.lte](http://emberjs.com/api/classes/Ember.computed.html#method_lte)\n *\n * A computed property that returns `true` if the provided dependent property\n * is less than or equal to the provided value.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { lte } from 'ember-decorators/object/computed';\n *\n * export default class PlayerListComponent extends Component {\n *   totalPlayers = 14;\n *\n *   @lte('totalPlayers', 14) hasEnoughPlayers; // true\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to compare\n * @param {Number} value - Value to compare against\n ",
              "start": 10827,
              "end": 11491,
              "loc": {
                "start": {
                  "line": 339,
                  "column": 0
                },
                "end": {
                  "line": 359,
                  "column": 3
                }
              }
            }
          ]
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.lt](http://emberjs.com/api/classes/Ember.computed.html#method_lt)\n *\n * A computed property that returns `true` if the provided dependent property\n * is less than the provided value.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { lt } from 'ember-decorators/object/computed';\n *\n * export default class DogPartyComponent extends Component {\n *   totalDogs = 3;\n *\n *   @lt('totalDogs', 10) isDogParty; // true\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to compare\n * @param {Number} value - Value to compare against\n ",
            "start": 10118,
            "end": 10751,
            "loc": {
              "start": {
                "line": 316,
                "column": 0
              },
              "end": {
                "line": 336,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.lte](http://emberjs.com/api/classes/Ember.computed.html#method_lte)\n *\n * A computed property that returns `true` if the provided dependent property\n * is less than or equal to the provided value.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { lte } from 'ember-decorators/object/computed';\n *\n * export default class PlayerListComponent extends Component {\n *   totalPlayers = 14;\n *\n *   @lte('totalPlayers', 14) hasEnoughPlayers; // true\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to compare\n * @param {Number} value - Value to compare against\n ",
            "start": 10827,
            "end": 11491,
            "loc": {
              "start": {
                "line": 339,
                "column": 0
              },
              "end": {
                "line": 359,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 11492,
        "end": 11567,
        "loc": {
          "start": {
            "line": 360,
            "column": 0
          },
          "end": {
            "line": 360,
            "column": 75
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "VariableDeclaration",
          "start": 11499,
          "end": 11567,
          "loc": {
            "start": {
              "line": 360,
              "column": 7
            },
            "end": {
              "line": 360,
              "column": 75
            }
          },
          "declarations": [
            {
              "type": "VariableDeclarator",
              "start": 11505,
              "end": 11566,
              "loc": {
                "start": {
                  "line": 360,
                  "column": 13
                },
                "end": {
                  "line": 360,
                  "column": 74
                }
              },
              "id": {
                "type": "Identifier",
                "start": 11505,
                "end": 11508,
                "loc": {
                  "start": {
                    "line": 360,
                    "column": 13
                  },
                  "end": {
                    "line": 360,
                    "column": 16
                  },
                  "identifierName": "lte"
                },
                "name": "lte",
                "leadingComments": null
              },
              "init": {
                "type": "CallExpression",
                "start": 11511,
                "end": 11566,
                "loc": {
                  "start": {
                    "line": 360,
                    "column": 19
                  },
                  "end": {
                    "line": 360,
                    "column": 74
                  }
                },
                "callee": {
                  "type": "Identifier",
                  "start": 11511,
                  "end": 11546,
                  "loc": {
                    "start": {
                      "line": 360,
                      "column": 19
                    },
                    "end": {
                      "line": 360,
                      "column": 54
                    },
                    "identifierName": "decoratedPropertyWithRequiredParams"
                  },
                  "name": "decoratedPropertyWithRequiredParams"
                },
                "arguments": [
                  {
                    "type": "MemberExpression",
                    "start": 11547,
                    "end": 11565,
                    "loc": {
                      "start": {
                        "line": 360,
                        "column": 55
                      },
                      "end": {
                        "line": 360,
                        "column": 73
                      }
                    },
                    "object": {
                      "type": "MemberExpression",
                      "start": 11547,
                      "end": 11561,
                      "loc": {
                        "start": {
                          "line": 360,
                          "column": 55
                        },
                        "end": {
                          "line": 360,
                          "column": 69
                        }
                      },
                      "object": {
                        "type": "Identifier",
                        "start": 11547,
                        "end": 11552,
                        "loc": {
                          "start": {
                            "line": 360,
                            "column": 55
                          },
                          "end": {
                            "line": 360,
                            "column": 60
                          },
                          "identifierName": "Ember"
                        },
                        "name": "Ember"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 11553,
                        "end": 11561,
                        "loc": {
                          "start": {
                            "line": 360,
                            "column": 61
                          },
                          "end": {
                            "line": 360,
                            "column": 69
                          },
                          "identifierName": "computed"
                        },
                        "name": "computed"
                      },
                      "computed": false
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 11562,
                      "end": 11565,
                      "loc": {
                        "start": {
                          "line": 360,
                          "column": 70
                        },
                        "end": {
                          "line": 360,
                          "column": 73
                        },
                        "identifierName": "lte"
                      },
                      "name": "lte"
                    },
                    "computed": false
                  }
                ]
              },
              "leadingComments": null
            }
          ],
          "kind": "const",
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.lte](http://emberjs.com/api/classes/Ember.computed.html#method_lte)\n *\n * A computed property that returns `true` if the provided dependent property\n * is less than or equal to the provided value.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { lte } from 'ember-decorators/object/computed';\n *\n * export default class PlayerListComponent extends Component {\n *   totalPlayers = 14;\n *\n *   @lte('totalPlayers', 14) hasEnoughPlayers; // true\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to compare\n * @param {Number} value - Value to compare against\n ",
              "start": 10827,
              "end": 11491,
              "loc": {
                "start": {
                  "line": 339,
                  "column": 0
                },
                "end": {
                  "line": 359,
                  "column": 3
                }
              }
            }
          ],
          "trailingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.map](http://emberjs.com/api/classes/Ember.computed.html#method_map)\n *\n * Returns an array mapped via the callback\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { map } from 'ember-decorators/object/computed';\n *\n * export default class ChoresListComponent extends Component {\n *   chores = A(['clean', 'write more unit tests']);\n *\n *   @map('chores')\n *   loudChores(chore, index) {\n *     return chore.toUpperCase() + '!';\n *   } // ['CLEAN!', 'WRITE MORE UNIT TESTS!']\n *\n *   // alternative syntax:\n *\n *   @map('chores', function(chore, index) {\n *     return chore.toUpperCase() + '!';\n *   }) loudChores; // ['CLEAN!', 'WRITE MORE UNIT TESTS!']\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the array to map over\n * @param {Function(item: Any, index: Number): Any} callback - Function to map over the array\n ",
              "start": 11569,
              "end": 12521,
              "loc": {
                "start": {
                  "line": 362,
                  "column": 0
                },
                "end": {
                  "line": 391,
                  "column": 3
                }
              }
            }
          ]
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.lte](http://emberjs.com/api/classes/Ember.computed.html#method_lte)\n *\n * A computed property that returns `true` if the provided dependent property\n * is less than or equal to the provided value.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { lte } from 'ember-decorators/object/computed';\n *\n * export default class PlayerListComponent extends Component {\n *   totalPlayers = 14;\n *\n *   @lte('totalPlayers', 14) hasEnoughPlayers; // true\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to compare\n * @param {Number} value - Value to compare against\n ",
            "start": 10827,
            "end": 11491,
            "loc": {
              "start": {
                "line": 339,
                "column": 0
              },
              "end": {
                "line": 359,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.map](http://emberjs.com/api/classes/Ember.computed.html#method_map)\n *\n * Returns an array mapped via the callback\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { map } from 'ember-decorators/object/computed';\n *\n * export default class ChoresListComponent extends Component {\n *   chores = A(['clean', 'write more unit tests']);\n *\n *   @map('chores')\n *   loudChores(chore, index) {\n *     return chore.toUpperCase() + '!';\n *   } // ['CLEAN!', 'WRITE MORE UNIT TESTS!']\n *\n *   // alternative syntax:\n *\n *   @map('chores', function(chore, index) {\n *     return chore.toUpperCase() + '!';\n *   }) loudChores; // ['CLEAN!', 'WRITE MORE UNIT TESTS!']\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the array to map over\n * @param {Function(item: Any, index: Number): Any} callback - Function to map over the array\n ",
            "start": 11569,
            "end": 12521,
            "loc": {
              "start": {
                "line": 362,
                "column": 0
              },
              "end": {
                "line": 391,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 12522,
        "end": 12599,
        "loc": {
          "start": {
            "line": 392,
            "column": 0
          },
          "end": {
            "line": 392,
            "column": 77
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "VariableDeclaration",
          "start": 12529,
          "end": 12599,
          "loc": {
            "start": {
              "line": 392,
              "column": 7
            },
            "end": {
              "line": 392,
              "column": 77
            }
          },
          "declarations": [
            {
              "type": "VariableDeclarator",
              "start": 12535,
              "end": 12598,
              "loc": {
                "start": {
                  "line": 392,
                  "column": 13
                },
                "end": {
                  "line": 392,
                  "column": 76
                }
              },
              "id": {
                "type": "Identifier",
                "start": 12535,
                "end": 12538,
                "loc": {
                  "start": {
                    "line": 392,
                    "column": 13
                  },
                  "end": {
                    "line": 392,
                    "column": 16
                  },
                  "identifierName": "map"
                },
                "name": "map",
                "leadingComments": null
              },
              "init": {
                "type": "CallExpression",
                "start": 12541,
                "end": 12598,
                "loc": {
                  "start": {
                    "line": 392,
                    "column": 19
                  },
                  "end": {
                    "line": 392,
                    "column": 76
                  }
                },
                "callee": {
                  "type": "Identifier",
                  "start": 12541,
                  "end": 12578,
                  "loc": {
                    "start": {
                      "line": 392,
                      "column": 19
                    },
                    "end": {
                      "line": 392,
                      "column": 56
                    },
                    "identifierName": "decoratedPropertyWithOptionalCallback"
                  },
                  "name": "decoratedPropertyWithOptionalCallback"
                },
                "arguments": [
                  {
                    "type": "MemberExpression",
                    "start": 12579,
                    "end": 12597,
                    "loc": {
                      "start": {
                        "line": 392,
                        "column": 57
                      },
                      "end": {
                        "line": 392,
                        "column": 75
                      }
                    },
                    "object": {
                      "type": "MemberExpression",
                      "start": 12579,
                      "end": 12593,
                      "loc": {
                        "start": {
                          "line": 392,
                          "column": 57
                        },
                        "end": {
                          "line": 392,
                          "column": 71
                        }
                      },
                      "object": {
                        "type": "Identifier",
                        "start": 12579,
                        "end": 12584,
                        "loc": {
                          "start": {
                            "line": 392,
                            "column": 57
                          },
                          "end": {
                            "line": 392,
                            "column": 62
                          },
                          "identifierName": "Ember"
                        },
                        "name": "Ember"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 12585,
                        "end": 12593,
                        "loc": {
                          "start": {
                            "line": 392,
                            "column": 63
                          },
                          "end": {
                            "line": 392,
                            "column": 71
                          },
                          "identifierName": "computed"
                        },
                        "name": "computed"
                      },
                      "computed": false
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 12594,
                      "end": 12597,
                      "loc": {
                        "start": {
                          "line": 392,
                          "column": 72
                        },
                        "end": {
                          "line": 392,
                          "column": 75
                        },
                        "identifierName": "map"
                      },
                      "name": "map"
                    },
                    "computed": false
                  }
                ]
              },
              "leadingComments": null
            }
          ],
          "kind": "const",
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.map](http://emberjs.com/api/classes/Ember.computed.html#method_map)\n *\n * Returns an array mapped via the callback\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { map } from 'ember-decorators/object/computed';\n *\n * export default class ChoresListComponent extends Component {\n *   chores = A(['clean', 'write more unit tests']);\n *\n *   @map('chores')\n *   loudChores(chore, index) {\n *     return chore.toUpperCase() + '!';\n *   } // ['CLEAN!', 'WRITE MORE UNIT TESTS!']\n *\n *   // alternative syntax:\n *\n *   @map('chores', function(chore, index) {\n *     return chore.toUpperCase() + '!';\n *   }) loudChores; // ['CLEAN!', 'WRITE MORE UNIT TESTS!']\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the array to map over\n * @param {Function(item: Any, index: Number): Any} callback - Function to map over the array\n ",
              "start": 11569,
              "end": 12521,
              "loc": {
                "start": {
                  "line": 362,
                  "column": 0
                },
                "end": {
                  "line": 391,
                  "column": 3
                }
              }
            }
          ],
          "trailingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.mapBy](http://emberjs.com/api/classes/Ember.computed.html#method_mapBy)\n *\n * Returns an array mapped to the specified key.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { mapBy } from 'ember-decorators/object/computed';\n *\n * export default class PeopleListComponent extends Component {\n *   people = A([\n *     {name: \"George\", age: 5},\n *     {name: \"Stella\", age: 10},\n *     {name: \"Violet\", age: 7}\n *   ]);\n *\n *   @mapBy('people', 'age') ages; // [5, 10, 7]\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the array to map over\n * @param {String} propertyKey - Property of the array items to map by\n ",
              "start": 12601,
              "end": 13343,
              "loc": {
                "start": {
                  "line": 394,
                  "column": 0
                },
                "end": {
                  "line": 418,
                  "column": 3
                }
              }
            }
          ]
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.map](http://emberjs.com/api/classes/Ember.computed.html#method_map)\n *\n * Returns an array mapped via the callback\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { map } from 'ember-decorators/object/computed';\n *\n * export default class ChoresListComponent extends Component {\n *   chores = A(['clean', 'write more unit tests']);\n *\n *   @map('chores')\n *   loudChores(chore, index) {\n *     return chore.toUpperCase() + '!';\n *   } // ['CLEAN!', 'WRITE MORE UNIT TESTS!']\n *\n *   // alternative syntax:\n *\n *   @map('chores', function(chore, index) {\n *     return chore.toUpperCase() + '!';\n *   }) loudChores; // ['CLEAN!', 'WRITE MORE UNIT TESTS!']\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the array to map over\n * @param {Function(item: Any, index: Number): Any} callback - Function to map over the array\n ",
            "start": 11569,
            "end": 12521,
            "loc": {
              "start": {
                "line": 362,
                "column": 0
              },
              "end": {
                "line": 391,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.mapBy](http://emberjs.com/api/classes/Ember.computed.html#method_mapBy)\n *\n * Returns an array mapped to the specified key.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { mapBy } from 'ember-decorators/object/computed';\n *\n * export default class PeopleListComponent extends Component {\n *   people = A([\n *     {name: \"George\", age: 5},\n *     {name: \"Stella\", age: 10},\n *     {name: \"Violet\", age: 7}\n *   ]);\n *\n *   @mapBy('people', 'age') ages; // [5, 10, 7]\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the array to map over\n * @param {String} propertyKey - Property of the array items to map by\n ",
            "start": 12601,
            "end": 13343,
            "loc": {
              "start": {
                "line": 394,
                "column": 0
              },
              "end": {
                "line": 418,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 13344,
        "end": 13423,
        "loc": {
          "start": {
            "line": 419,
            "column": 0
          },
          "end": {
            "line": 419,
            "column": 79
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "VariableDeclaration",
          "start": 13351,
          "end": 13423,
          "loc": {
            "start": {
              "line": 419,
              "column": 7
            },
            "end": {
              "line": 419,
              "column": 79
            }
          },
          "declarations": [
            {
              "type": "VariableDeclarator",
              "start": 13357,
              "end": 13422,
              "loc": {
                "start": {
                  "line": 419,
                  "column": 13
                },
                "end": {
                  "line": 419,
                  "column": 78
                }
              },
              "id": {
                "type": "Identifier",
                "start": 13357,
                "end": 13362,
                "loc": {
                  "start": {
                    "line": 419,
                    "column": 13
                  },
                  "end": {
                    "line": 419,
                    "column": 18
                  },
                  "identifierName": "mapBy"
                },
                "name": "mapBy",
                "leadingComments": null
              },
              "init": {
                "type": "CallExpression",
                "start": 13365,
                "end": 13422,
                "loc": {
                  "start": {
                    "line": 419,
                    "column": 21
                  },
                  "end": {
                    "line": 419,
                    "column": 78
                  }
                },
                "callee": {
                  "type": "Identifier",
                  "start": 13365,
                  "end": 13400,
                  "loc": {
                    "start": {
                      "line": 419,
                      "column": 21
                    },
                    "end": {
                      "line": 419,
                      "column": 56
                    },
                    "identifierName": "decoratedPropertyWithRequiredParams"
                  },
                  "name": "decoratedPropertyWithRequiredParams"
                },
                "arguments": [
                  {
                    "type": "MemberExpression",
                    "start": 13401,
                    "end": 13421,
                    "loc": {
                      "start": {
                        "line": 419,
                        "column": 57
                      },
                      "end": {
                        "line": 419,
                        "column": 77
                      }
                    },
                    "object": {
                      "type": "MemberExpression",
                      "start": 13401,
                      "end": 13415,
                      "loc": {
                        "start": {
                          "line": 419,
                          "column": 57
                        },
                        "end": {
                          "line": 419,
                          "column": 71
                        }
                      },
                      "object": {
                        "type": "Identifier",
                        "start": 13401,
                        "end": 13406,
                        "loc": {
                          "start": {
                            "line": 419,
                            "column": 57
                          },
                          "end": {
                            "line": 419,
                            "column": 62
                          },
                          "identifierName": "Ember"
                        },
                        "name": "Ember"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 13407,
                        "end": 13415,
                        "loc": {
                          "start": {
                            "line": 419,
                            "column": 63
                          },
                          "end": {
                            "line": 419,
                            "column": 71
                          },
                          "identifierName": "computed"
                        },
                        "name": "computed"
                      },
                      "computed": false
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 13416,
                      "end": 13421,
                      "loc": {
                        "start": {
                          "line": 419,
                          "column": 72
                        },
                        "end": {
                          "line": 419,
                          "column": 77
                        },
                        "identifierName": "mapBy"
                      },
                      "name": "mapBy"
                    },
                    "computed": false
                  }
                ]
              },
              "leadingComments": null
            }
          ],
          "kind": "const",
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.mapBy](http://emberjs.com/api/classes/Ember.computed.html#method_mapBy)\n *\n * Returns an array mapped to the specified key.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { mapBy } from 'ember-decorators/object/computed';\n *\n * export default class PeopleListComponent extends Component {\n *   people = A([\n *     {name: \"George\", age: 5},\n *     {name: \"Stella\", age: 10},\n *     {name: \"Violet\", age: 7}\n *   ]);\n *\n *   @mapBy('people', 'age') ages; // [5, 10, 7]\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the array to map over\n * @param {String} propertyKey - Property of the array items to map by\n ",
              "start": 12601,
              "end": 13343,
              "loc": {
                "start": {
                  "line": 394,
                  "column": 0
                },
                "end": {
                  "line": 418,
                  "column": 3
                }
              }
            }
          ],
          "trailingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.match](http://emberjs.com/api/classes/Ember.computed.html#method_match)\n *\n * A computed property which matches the original value for the dependent\n * property against a given RegExp, returning `true` if they values matches\n * the RegExp and `false` if it does not.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { match } from 'ember-decorators/object/computed';\n *\n * export default class IsEmailValidComponent extends Component {\n *   email = 'tomster@emberjs.com';\n *\n *   @match('email', /^.+@.+\\..+$/) validEmail;\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - The property to match\n * @param {RegExp} pattern - The pattern to match against\n ",
              "start": 13425,
              "end": 14163,
              "loc": {
                "start": {
                  "line": 421,
                  "column": 0
                },
                "end": {
                  "line": 442,
                  "column": 3
                }
              }
            }
          ]
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.mapBy](http://emberjs.com/api/classes/Ember.computed.html#method_mapBy)\n *\n * Returns an array mapped to the specified key.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { mapBy } from 'ember-decorators/object/computed';\n *\n * export default class PeopleListComponent extends Component {\n *   people = A([\n *     {name: \"George\", age: 5},\n *     {name: \"Stella\", age: 10},\n *     {name: \"Violet\", age: 7}\n *   ]);\n *\n *   @mapBy('people', 'age') ages; // [5, 10, 7]\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the array to map over\n * @param {String} propertyKey - Property of the array items to map by\n ",
            "start": 12601,
            "end": 13343,
            "loc": {
              "start": {
                "line": 394,
                "column": 0
              },
              "end": {
                "line": 418,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.match](http://emberjs.com/api/classes/Ember.computed.html#method_match)\n *\n * A computed property which matches the original value for the dependent\n * property against a given RegExp, returning `true` if they values matches\n * the RegExp and `false` if it does not.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { match } from 'ember-decorators/object/computed';\n *\n * export default class IsEmailValidComponent extends Component {\n *   email = 'tomster@emberjs.com';\n *\n *   @match('email', /^.+@.+\\..+$/) validEmail;\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - The property to match\n * @param {RegExp} pattern - The pattern to match against\n ",
            "start": 13425,
            "end": 14163,
            "loc": {
              "start": {
                "line": 421,
                "column": 0
              },
              "end": {
                "line": 442,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 14164,
        "end": 14243,
        "loc": {
          "start": {
            "line": 443,
            "column": 0
          },
          "end": {
            "line": 443,
            "column": 79
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "VariableDeclaration",
          "start": 14171,
          "end": 14243,
          "loc": {
            "start": {
              "line": 443,
              "column": 7
            },
            "end": {
              "line": 443,
              "column": 79
            }
          },
          "declarations": [
            {
              "type": "VariableDeclarator",
              "start": 14177,
              "end": 14242,
              "loc": {
                "start": {
                  "line": 443,
                  "column": 13
                },
                "end": {
                  "line": 443,
                  "column": 78
                }
              },
              "id": {
                "type": "Identifier",
                "start": 14177,
                "end": 14182,
                "loc": {
                  "start": {
                    "line": 443,
                    "column": 13
                  },
                  "end": {
                    "line": 443,
                    "column": 18
                  },
                  "identifierName": "match"
                },
                "name": "match",
                "leadingComments": null
              },
              "init": {
                "type": "CallExpression",
                "start": 14185,
                "end": 14242,
                "loc": {
                  "start": {
                    "line": 443,
                    "column": 21
                  },
                  "end": {
                    "line": 443,
                    "column": 78
                  }
                },
                "callee": {
                  "type": "Identifier",
                  "start": 14185,
                  "end": 14220,
                  "loc": {
                    "start": {
                      "line": 443,
                      "column": 21
                    },
                    "end": {
                      "line": 443,
                      "column": 56
                    },
                    "identifierName": "decoratedPropertyWithRequiredParams"
                  },
                  "name": "decoratedPropertyWithRequiredParams"
                },
                "arguments": [
                  {
                    "type": "MemberExpression",
                    "start": 14221,
                    "end": 14241,
                    "loc": {
                      "start": {
                        "line": 443,
                        "column": 57
                      },
                      "end": {
                        "line": 443,
                        "column": 77
                      }
                    },
                    "object": {
                      "type": "MemberExpression",
                      "start": 14221,
                      "end": 14235,
                      "loc": {
                        "start": {
                          "line": 443,
                          "column": 57
                        },
                        "end": {
                          "line": 443,
                          "column": 71
                        }
                      },
                      "object": {
                        "type": "Identifier",
                        "start": 14221,
                        "end": 14226,
                        "loc": {
                          "start": {
                            "line": 443,
                            "column": 57
                          },
                          "end": {
                            "line": 443,
                            "column": 62
                          },
                          "identifierName": "Ember"
                        },
                        "name": "Ember"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 14227,
                        "end": 14235,
                        "loc": {
                          "start": {
                            "line": 443,
                            "column": 63
                          },
                          "end": {
                            "line": 443,
                            "column": 71
                          },
                          "identifierName": "computed"
                        },
                        "name": "computed"
                      },
                      "computed": false
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 14236,
                      "end": 14241,
                      "loc": {
                        "start": {
                          "line": 443,
                          "column": 72
                        },
                        "end": {
                          "line": 443,
                          "column": 77
                        },
                        "identifierName": "match"
                      },
                      "name": "match"
                    },
                    "computed": false
                  }
                ]
              },
              "leadingComments": null
            }
          ],
          "kind": "const",
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.match](http://emberjs.com/api/classes/Ember.computed.html#method_match)\n *\n * A computed property which matches the original value for the dependent\n * property against a given RegExp, returning `true` if they values matches\n * the RegExp and `false` if it does not.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { match } from 'ember-decorators/object/computed';\n *\n * export default class IsEmailValidComponent extends Component {\n *   email = 'tomster@emberjs.com';\n *\n *   @match('email', /^.+@.+\\..+$/) validEmail;\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - The property to match\n * @param {RegExp} pattern - The pattern to match against\n ",
              "start": 13425,
              "end": 14163,
              "loc": {
                "start": {
                  "line": 421,
                  "column": 0
                },
                "end": {
                  "line": 442,
                  "column": 3
                }
              }
            }
          ],
          "trailingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.max](http://emberjs.com/api/classes/Ember.computed.html#method_max)\n *\n * A computed property that calculates the maximum value in the dependent\n * array. This will return `-Infinity` when the dependent array is empty.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { max } from 'ember-decorators/object/computed';\n *\n * export default class MaxValueComponent extends Component {\n *   values = A([1, 2, 5, 10]);\n *\n *   @max('values') maxValue; // 10\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the array to find the max value of\n ",
              "start": 14245,
              "end": 14913,
              "loc": {
                "start": {
                  "line": 445,
                  "column": 0
                },
                "end": {
                  "line": 465,
                  "column": 3
                }
              }
            }
          ]
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.match](http://emberjs.com/api/classes/Ember.computed.html#method_match)\n *\n * A computed property which matches the original value for the dependent\n * property against a given RegExp, returning `true` if they values matches\n * the RegExp and `false` if it does not.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { match } from 'ember-decorators/object/computed';\n *\n * export default class IsEmailValidComponent extends Component {\n *   email = 'tomster@emberjs.com';\n *\n *   @match('email', /^.+@.+\\..+$/) validEmail;\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - The property to match\n * @param {RegExp} pattern - The pattern to match against\n ",
            "start": 13425,
            "end": 14163,
            "loc": {
              "start": {
                "line": 421,
                "column": 0
              },
              "end": {
                "line": 442,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.max](http://emberjs.com/api/classes/Ember.computed.html#method_max)\n *\n * A computed property that calculates the maximum value in the dependent\n * array. This will return `-Infinity` when the dependent array is empty.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { max } from 'ember-decorators/object/computed';\n *\n * export default class MaxValueComponent extends Component {\n *   values = A([1, 2, 5, 10]);\n *\n *   @max('values') maxValue; // 10\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the array to find the max value of\n ",
            "start": 14245,
            "end": 14913,
            "loc": {
              "start": {
                "line": 445,
                "column": 0
              },
              "end": {
                "line": 465,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 14914,
        "end": 14989,
        "loc": {
          "start": {
            "line": 466,
            "column": 0
          },
          "end": {
            "line": 466,
            "column": 75
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "VariableDeclaration",
          "start": 14921,
          "end": 14989,
          "loc": {
            "start": {
              "line": 466,
              "column": 7
            },
            "end": {
              "line": 466,
              "column": 75
            }
          },
          "declarations": [
            {
              "type": "VariableDeclarator",
              "start": 14927,
              "end": 14988,
              "loc": {
                "start": {
                  "line": 466,
                  "column": 13
                },
                "end": {
                  "line": 466,
                  "column": 74
                }
              },
              "id": {
                "type": "Identifier",
                "start": 14927,
                "end": 14930,
                "loc": {
                  "start": {
                    "line": 466,
                    "column": 13
                  },
                  "end": {
                    "line": 466,
                    "column": 16
                  },
                  "identifierName": "max"
                },
                "name": "max",
                "leadingComments": null
              },
              "init": {
                "type": "CallExpression",
                "start": 14933,
                "end": 14988,
                "loc": {
                  "start": {
                    "line": 466,
                    "column": 19
                  },
                  "end": {
                    "line": 466,
                    "column": 74
                  }
                },
                "callee": {
                  "type": "Identifier",
                  "start": 14933,
                  "end": 14968,
                  "loc": {
                    "start": {
                      "line": 466,
                      "column": 19
                    },
                    "end": {
                      "line": 466,
                      "column": 54
                    },
                    "identifierName": "decoratedPropertyWithRequiredParams"
                  },
                  "name": "decoratedPropertyWithRequiredParams"
                },
                "arguments": [
                  {
                    "type": "MemberExpression",
                    "start": 14969,
                    "end": 14987,
                    "loc": {
                      "start": {
                        "line": 466,
                        "column": 55
                      },
                      "end": {
                        "line": 466,
                        "column": 73
                      }
                    },
                    "object": {
                      "type": "MemberExpression",
                      "start": 14969,
                      "end": 14983,
                      "loc": {
                        "start": {
                          "line": 466,
                          "column": 55
                        },
                        "end": {
                          "line": 466,
                          "column": 69
                        }
                      },
                      "object": {
                        "type": "Identifier",
                        "start": 14969,
                        "end": 14974,
                        "loc": {
                          "start": {
                            "line": 466,
                            "column": 55
                          },
                          "end": {
                            "line": 466,
                            "column": 60
                          },
                          "identifierName": "Ember"
                        },
                        "name": "Ember"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 14975,
                        "end": 14983,
                        "loc": {
                          "start": {
                            "line": 466,
                            "column": 61
                          },
                          "end": {
                            "line": 466,
                            "column": 69
                          },
                          "identifierName": "computed"
                        },
                        "name": "computed"
                      },
                      "computed": false
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 14984,
                      "end": 14987,
                      "loc": {
                        "start": {
                          "line": 466,
                          "column": 70
                        },
                        "end": {
                          "line": 466,
                          "column": 73
                        },
                        "identifierName": "max"
                      },
                      "name": "max"
                    },
                    "computed": false
                  }
                ]
              },
              "leadingComments": null
            }
          ],
          "kind": "const",
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.max](http://emberjs.com/api/classes/Ember.computed.html#method_max)\n *\n * A computed property that calculates the maximum value in the dependent\n * array. This will return `-Infinity` when the dependent array is empty.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { max } from 'ember-decorators/object/computed';\n *\n * export default class MaxValueComponent extends Component {\n *   values = A([1, 2, 5, 10]);\n *\n *   @max('values') maxValue; // 10\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the array to find the max value of\n ",
              "start": 14245,
              "end": 14913,
              "loc": {
                "start": {
                  "line": 445,
                  "column": 0
                },
                "end": {
                  "line": 465,
                  "column": 3
                }
              }
            }
          ],
          "trailingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.min](http://emberjs.com/api/classes/Ember.computed.html#method_min)\n *\n * A computed property that calculates the minimum value in the dependent\n * array. This will return `Infinity` when the dependent array is empty.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { min } from 'ember-decorators/object/computed';\n *\n * export default class MinValueComponent extends Component {\n *   values = A([1, 2, 5, 10]);\n *\n *   @min('values') minValue; // 1\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the array to find the max value of\n ",
              "start": 14991,
              "end": 15657,
              "loc": {
                "start": {
                  "line": 468,
                  "column": 0
                },
                "end": {
                  "line": 488,
                  "column": 3
                }
              }
            }
          ]
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.max](http://emberjs.com/api/classes/Ember.computed.html#method_max)\n *\n * A computed property that calculates the maximum value in the dependent\n * array. This will return `-Infinity` when the dependent array is empty.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { max } from 'ember-decorators/object/computed';\n *\n * export default class MaxValueComponent extends Component {\n *   values = A([1, 2, 5, 10]);\n *\n *   @max('values') maxValue; // 10\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the array to find the max value of\n ",
            "start": 14245,
            "end": 14913,
            "loc": {
              "start": {
                "line": 445,
                "column": 0
              },
              "end": {
                "line": 465,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.min](http://emberjs.com/api/classes/Ember.computed.html#method_min)\n *\n * A computed property that calculates the minimum value in the dependent\n * array. This will return `Infinity` when the dependent array is empty.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { min } from 'ember-decorators/object/computed';\n *\n * export default class MinValueComponent extends Component {\n *   values = A([1, 2, 5, 10]);\n *\n *   @min('values') minValue; // 1\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the array to find the max value of\n ",
            "start": 14991,
            "end": 15657,
            "loc": {
              "start": {
                "line": 468,
                "column": 0
              },
              "end": {
                "line": 488,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 15658,
        "end": 15733,
        "loc": {
          "start": {
            "line": 489,
            "column": 0
          },
          "end": {
            "line": 489,
            "column": 75
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "VariableDeclaration",
          "start": 15665,
          "end": 15733,
          "loc": {
            "start": {
              "line": 489,
              "column": 7
            },
            "end": {
              "line": 489,
              "column": 75
            }
          },
          "declarations": [
            {
              "type": "VariableDeclarator",
              "start": 15671,
              "end": 15732,
              "loc": {
                "start": {
                  "line": 489,
                  "column": 13
                },
                "end": {
                  "line": 489,
                  "column": 74
                }
              },
              "id": {
                "type": "Identifier",
                "start": 15671,
                "end": 15674,
                "loc": {
                  "start": {
                    "line": 489,
                    "column": 13
                  },
                  "end": {
                    "line": 489,
                    "column": 16
                  },
                  "identifierName": "min"
                },
                "name": "min",
                "leadingComments": null
              },
              "init": {
                "type": "CallExpression",
                "start": 15677,
                "end": 15732,
                "loc": {
                  "start": {
                    "line": 489,
                    "column": 19
                  },
                  "end": {
                    "line": 489,
                    "column": 74
                  }
                },
                "callee": {
                  "type": "Identifier",
                  "start": 15677,
                  "end": 15712,
                  "loc": {
                    "start": {
                      "line": 489,
                      "column": 19
                    },
                    "end": {
                      "line": 489,
                      "column": 54
                    },
                    "identifierName": "decoratedPropertyWithRequiredParams"
                  },
                  "name": "decoratedPropertyWithRequiredParams"
                },
                "arguments": [
                  {
                    "type": "MemberExpression",
                    "start": 15713,
                    "end": 15731,
                    "loc": {
                      "start": {
                        "line": 489,
                        "column": 55
                      },
                      "end": {
                        "line": 489,
                        "column": 73
                      }
                    },
                    "object": {
                      "type": "MemberExpression",
                      "start": 15713,
                      "end": 15727,
                      "loc": {
                        "start": {
                          "line": 489,
                          "column": 55
                        },
                        "end": {
                          "line": 489,
                          "column": 69
                        }
                      },
                      "object": {
                        "type": "Identifier",
                        "start": 15713,
                        "end": 15718,
                        "loc": {
                          "start": {
                            "line": 489,
                            "column": 55
                          },
                          "end": {
                            "line": 489,
                            "column": 60
                          },
                          "identifierName": "Ember"
                        },
                        "name": "Ember"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 15719,
                        "end": 15727,
                        "loc": {
                          "start": {
                            "line": 489,
                            "column": 61
                          },
                          "end": {
                            "line": 489,
                            "column": 69
                          },
                          "identifierName": "computed"
                        },
                        "name": "computed"
                      },
                      "computed": false
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 15728,
                      "end": 15731,
                      "loc": {
                        "start": {
                          "line": 489,
                          "column": 70
                        },
                        "end": {
                          "line": 489,
                          "column": 73
                        },
                        "identifierName": "min"
                      },
                      "name": "min"
                    },
                    "computed": false
                  }
                ]
              },
              "leadingComments": null
            }
          ],
          "kind": "const",
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.min](http://emberjs.com/api/classes/Ember.computed.html#method_min)\n *\n * A computed property that calculates the minimum value in the dependent\n * array. This will return `Infinity` when the dependent array is empty.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { min } from 'ember-decorators/object/computed';\n *\n * export default class MinValueComponent extends Component {\n *   values = A([1, 2, 5, 10]);\n *\n *   @min('values') minValue; // 1\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the array to find the max value of\n ",
              "start": 14991,
              "end": 15657,
              "loc": {
                "start": {
                  "line": 468,
                  "column": 0
                },
                "end": {
                  "line": 488,
                  "column": 3
                }
              }
            }
          ],
          "trailingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.none](http://emberjs.com/api/classes/Ember.computed.html#method_none)\n *\n * A computed property that returns true if the value of the dependent property\n * is null or undefined. This avoids errors from JSLint complaining about use\n * of `==`, which can be technically confusing.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { none } from 'ember-decorators/object/computed';\n *\n * export default class NameDisplayComponent extends Component {\n *   firstName = null;\n *\n *   @none('firstName') isNameless; // true unless firstName is defined\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to check\n ",
              "start": 15735,
              "end": 16444,
              "loc": {
                "start": {
                  "line": 491,
                  "column": 0
                },
                "end": {
                  "line": 511,
                  "column": 3
                }
              }
            }
          ]
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.min](http://emberjs.com/api/classes/Ember.computed.html#method_min)\n *\n * A computed property that calculates the minimum value in the dependent\n * array. This will return `Infinity` when the dependent array is empty.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { min } from 'ember-decorators/object/computed';\n *\n * export default class MinValueComponent extends Component {\n *   values = A([1, 2, 5, 10]);\n *\n *   @min('values') minValue; // 1\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the array to find the max value of\n ",
            "start": 14991,
            "end": 15657,
            "loc": {
              "start": {
                "line": 468,
                "column": 0
              },
              "end": {
                "line": 488,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.none](http://emberjs.com/api/classes/Ember.computed.html#method_none)\n *\n * A computed property that returns true if the value of the dependent property\n * is null or undefined. This avoids errors from JSLint complaining about use\n * of `==`, which can be technically confusing.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { none } from 'ember-decorators/object/computed';\n *\n * export default class NameDisplayComponent extends Component {\n *   firstName = null;\n *\n *   @none('firstName') isNameless; // true unless firstName is defined\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to check\n ",
            "start": 15735,
            "end": 16444,
            "loc": {
              "start": {
                "line": 491,
                "column": 0
              },
              "end": {
                "line": 511,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 16445,
        "end": 16522,
        "loc": {
          "start": {
            "line": 512,
            "column": 0
          },
          "end": {
            "line": 512,
            "column": 77
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "VariableDeclaration",
          "start": 16452,
          "end": 16522,
          "loc": {
            "start": {
              "line": 512,
              "column": 7
            },
            "end": {
              "line": 512,
              "column": 77
            }
          },
          "declarations": [
            {
              "type": "VariableDeclarator",
              "start": 16458,
              "end": 16521,
              "loc": {
                "start": {
                  "line": 512,
                  "column": 13
                },
                "end": {
                  "line": 512,
                  "column": 76
                }
              },
              "id": {
                "type": "Identifier",
                "start": 16458,
                "end": 16462,
                "loc": {
                  "start": {
                    "line": 512,
                    "column": 13
                  },
                  "end": {
                    "line": 512,
                    "column": 17
                  },
                  "identifierName": "none"
                },
                "name": "none",
                "leadingComments": null
              },
              "init": {
                "type": "CallExpression",
                "start": 16465,
                "end": 16521,
                "loc": {
                  "start": {
                    "line": 512,
                    "column": 20
                  },
                  "end": {
                    "line": 512,
                    "column": 76
                  }
                },
                "callee": {
                  "type": "Identifier",
                  "start": 16465,
                  "end": 16500,
                  "loc": {
                    "start": {
                      "line": 512,
                      "column": 20
                    },
                    "end": {
                      "line": 512,
                      "column": 55
                    },
                    "identifierName": "decoratedPropertyWithRequiredParams"
                  },
                  "name": "decoratedPropertyWithRequiredParams"
                },
                "arguments": [
                  {
                    "type": "MemberExpression",
                    "start": 16501,
                    "end": 16520,
                    "loc": {
                      "start": {
                        "line": 512,
                        "column": 56
                      },
                      "end": {
                        "line": 512,
                        "column": 75
                      }
                    },
                    "object": {
                      "type": "MemberExpression",
                      "start": 16501,
                      "end": 16515,
                      "loc": {
                        "start": {
                          "line": 512,
                          "column": 56
                        },
                        "end": {
                          "line": 512,
                          "column": 70
                        }
                      },
                      "object": {
                        "type": "Identifier",
                        "start": 16501,
                        "end": 16506,
                        "loc": {
                          "start": {
                            "line": 512,
                            "column": 56
                          },
                          "end": {
                            "line": 512,
                            "column": 61
                          },
                          "identifierName": "Ember"
                        },
                        "name": "Ember"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 16507,
                        "end": 16515,
                        "loc": {
                          "start": {
                            "line": 512,
                            "column": 62
                          },
                          "end": {
                            "line": 512,
                            "column": 70
                          },
                          "identifierName": "computed"
                        },
                        "name": "computed"
                      },
                      "computed": false
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 16516,
                      "end": 16520,
                      "loc": {
                        "start": {
                          "line": 512,
                          "column": 71
                        },
                        "end": {
                          "line": 512,
                          "column": 75
                        },
                        "identifierName": "none"
                      },
                      "name": "none"
                    },
                    "computed": false
                  }
                ]
              },
              "leadingComments": null
            }
          ],
          "kind": "const",
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.none](http://emberjs.com/api/classes/Ember.computed.html#method_none)\n *\n * A computed property that returns true if the value of the dependent property\n * is null or undefined. This avoids errors from JSLint complaining about use\n * of `==`, which can be technically confusing.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { none } from 'ember-decorators/object/computed';\n *\n * export default class NameDisplayComponent extends Component {\n *   firstName = null;\n *\n *   @none('firstName') isNameless; // true unless firstName is defined\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to check\n ",
              "start": 15735,
              "end": 16444,
              "loc": {
                "start": {
                  "line": 491,
                  "column": 0
                },
                "end": {
                  "line": 511,
                  "column": 3
                }
              }
            }
          ],
          "trailingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.not](http://emberjs.com/api/classes/Ember.computed.html#method_not)\n *\n * A computed property that returns the inverse boolean value of the original\n * value for the dependent property.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { not } from 'ember-decorators/object/computed';\n *\n * export default class UserInfoComponent extends Component {\n *   loggedIn = false;\n *\n *   @not('loggedIn') isAnonymous; // true\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to `not`\n ",
              "start": 16524,
              "end": 17107,
              "loc": {
                "start": {
                  "line": 514,
                  "column": 0
                },
                "end": {
                  "line": 533,
                  "column": 3
                }
              }
            }
          ]
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.none](http://emberjs.com/api/classes/Ember.computed.html#method_none)\n *\n * A computed property that returns true if the value of the dependent property\n * is null or undefined. This avoids errors from JSLint complaining about use\n * of `==`, which can be technically confusing.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { none } from 'ember-decorators/object/computed';\n *\n * export default class NameDisplayComponent extends Component {\n *   firstName = null;\n *\n *   @none('firstName') isNameless; // true unless firstName is defined\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to check\n ",
            "start": 15735,
            "end": 16444,
            "loc": {
              "start": {
                "line": 491,
                "column": 0
              },
              "end": {
                "line": 511,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.not](http://emberjs.com/api/classes/Ember.computed.html#method_not)\n *\n * A computed property that returns the inverse boolean value of the original\n * value for the dependent property.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { not } from 'ember-decorators/object/computed';\n *\n * export default class UserInfoComponent extends Component {\n *   loggedIn = false;\n *\n *   @not('loggedIn') isAnonymous; // true\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to `not`\n ",
            "start": 16524,
            "end": 17107,
            "loc": {
              "start": {
                "line": 514,
                "column": 0
              },
              "end": {
                "line": 533,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 17108,
        "end": 17183,
        "loc": {
          "start": {
            "line": 534,
            "column": 0
          },
          "end": {
            "line": 534,
            "column": 75
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "VariableDeclaration",
          "start": 17115,
          "end": 17183,
          "loc": {
            "start": {
              "line": 534,
              "column": 7
            },
            "end": {
              "line": 534,
              "column": 75
            }
          },
          "declarations": [
            {
              "type": "VariableDeclarator",
              "start": 17121,
              "end": 17182,
              "loc": {
                "start": {
                  "line": 534,
                  "column": 13
                },
                "end": {
                  "line": 534,
                  "column": 74
                }
              },
              "id": {
                "type": "Identifier",
                "start": 17121,
                "end": 17124,
                "loc": {
                  "start": {
                    "line": 534,
                    "column": 13
                  },
                  "end": {
                    "line": 534,
                    "column": 16
                  },
                  "identifierName": "not"
                },
                "name": "not",
                "leadingComments": null
              },
              "init": {
                "type": "CallExpression",
                "start": 17127,
                "end": 17182,
                "loc": {
                  "start": {
                    "line": 534,
                    "column": 19
                  },
                  "end": {
                    "line": 534,
                    "column": 74
                  }
                },
                "callee": {
                  "type": "Identifier",
                  "start": 17127,
                  "end": 17162,
                  "loc": {
                    "start": {
                      "line": 534,
                      "column": 19
                    },
                    "end": {
                      "line": 534,
                      "column": 54
                    },
                    "identifierName": "decoratedPropertyWithRequiredParams"
                  },
                  "name": "decoratedPropertyWithRequiredParams"
                },
                "arguments": [
                  {
                    "type": "MemberExpression",
                    "start": 17163,
                    "end": 17181,
                    "loc": {
                      "start": {
                        "line": 534,
                        "column": 55
                      },
                      "end": {
                        "line": 534,
                        "column": 73
                      }
                    },
                    "object": {
                      "type": "MemberExpression",
                      "start": 17163,
                      "end": 17177,
                      "loc": {
                        "start": {
                          "line": 534,
                          "column": 55
                        },
                        "end": {
                          "line": 534,
                          "column": 69
                        }
                      },
                      "object": {
                        "type": "Identifier",
                        "start": 17163,
                        "end": 17168,
                        "loc": {
                          "start": {
                            "line": 534,
                            "column": 55
                          },
                          "end": {
                            "line": 534,
                            "column": 60
                          },
                          "identifierName": "Ember"
                        },
                        "name": "Ember"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 17169,
                        "end": 17177,
                        "loc": {
                          "start": {
                            "line": 534,
                            "column": 61
                          },
                          "end": {
                            "line": 534,
                            "column": 69
                          },
                          "identifierName": "computed"
                        },
                        "name": "computed"
                      },
                      "computed": false
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 17178,
                      "end": 17181,
                      "loc": {
                        "start": {
                          "line": 534,
                          "column": 70
                        },
                        "end": {
                          "line": 534,
                          "column": 73
                        },
                        "identifierName": "not"
                      },
                      "name": "not"
                    },
                    "computed": false
                  }
                ]
              },
              "leadingComments": null
            }
          ],
          "kind": "const",
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.not](http://emberjs.com/api/classes/Ember.computed.html#method_not)\n *\n * A computed property that returns the inverse boolean value of the original\n * value for the dependent property.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { not } from 'ember-decorators/object/computed';\n *\n * export default class UserInfoComponent extends Component {\n *   loggedIn = false;\n *\n *   @not('loggedIn') isAnonymous; // true\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to `not`\n ",
              "start": 16524,
              "end": 17107,
              "loc": {
                "start": {
                  "line": 514,
                  "column": 0
                },
                "end": {
                  "line": 533,
                  "column": 3
                }
              }
            }
          ],
          "trailingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.notEmpty](http://emberjs.com/api/classes/Ember.computed.html#method_notEmpty)\n *\n * A computed property that returns `true` if the value of the dependent\n * property is NOT null, an empty string, empty array, or empty function.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { notEmpty } from 'ember-decorators/object/computed';\n *\n * export default class GroceryBagComponent extends Component {\n *   groceryBag = A(['milk', 'eggs', 'apples']);\n *\n *   @notEmpty('groceryBag') hasGroceriesToPutAway; // true\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to check\n ",
              "start": 17185,
              "end": 17897,
              "loc": {
                "start": {
                  "line": 536,
                  "column": 0
                },
                "end": {
                  "line": 556,
                  "column": 3
                }
              }
            }
          ]
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.not](http://emberjs.com/api/classes/Ember.computed.html#method_not)\n *\n * A computed property that returns the inverse boolean value of the original\n * value for the dependent property.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { not } from 'ember-decorators/object/computed';\n *\n * export default class UserInfoComponent extends Component {\n *   loggedIn = false;\n *\n *   @not('loggedIn') isAnonymous; // true\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to `not`\n ",
            "start": 16524,
            "end": 17107,
            "loc": {
              "start": {
                "line": 514,
                "column": 0
              },
              "end": {
                "line": 533,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.notEmpty](http://emberjs.com/api/classes/Ember.computed.html#method_notEmpty)\n *\n * A computed property that returns `true` if the value of the dependent\n * property is NOT null, an empty string, empty array, or empty function.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { notEmpty } from 'ember-decorators/object/computed';\n *\n * export default class GroceryBagComponent extends Component {\n *   groceryBag = A(['milk', 'eggs', 'apples']);\n *\n *   @notEmpty('groceryBag') hasGroceriesToPutAway; // true\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to check\n ",
            "start": 17185,
            "end": 17897,
            "loc": {
              "start": {
                "line": 536,
                "column": 0
              },
              "end": {
                "line": 556,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 17898,
        "end": 17983,
        "loc": {
          "start": {
            "line": 557,
            "column": 0
          },
          "end": {
            "line": 557,
            "column": 85
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "VariableDeclaration",
          "start": 17905,
          "end": 17983,
          "loc": {
            "start": {
              "line": 557,
              "column": 7
            },
            "end": {
              "line": 557,
              "column": 85
            }
          },
          "declarations": [
            {
              "type": "VariableDeclarator",
              "start": 17911,
              "end": 17982,
              "loc": {
                "start": {
                  "line": 557,
                  "column": 13
                },
                "end": {
                  "line": 557,
                  "column": 84
                }
              },
              "id": {
                "type": "Identifier",
                "start": 17911,
                "end": 17919,
                "loc": {
                  "start": {
                    "line": 557,
                    "column": 13
                  },
                  "end": {
                    "line": 557,
                    "column": 21
                  },
                  "identifierName": "notEmpty"
                },
                "name": "notEmpty",
                "leadingComments": null
              },
              "init": {
                "type": "CallExpression",
                "start": 17922,
                "end": 17982,
                "loc": {
                  "start": {
                    "line": 557,
                    "column": 24
                  },
                  "end": {
                    "line": 557,
                    "column": 84
                  }
                },
                "callee": {
                  "type": "Identifier",
                  "start": 17922,
                  "end": 17957,
                  "loc": {
                    "start": {
                      "line": 557,
                      "column": 24
                    },
                    "end": {
                      "line": 557,
                      "column": 59
                    },
                    "identifierName": "decoratedPropertyWithRequiredParams"
                  },
                  "name": "decoratedPropertyWithRequiredParams"
                },
                "arguments": [
                  {
                    "type": "MemberExpression",
                    "start": 17958,
                    "end": 17981,
                    "loc": {
                      "start": {
                        "line": 557,
                        "column": 60
                      },
                      "end": {
                        "line": 557,
                        "column": 83
                      }
                    },
                    "object": {
                      "type": "MemberExpression",
                      "start": 17958,
                      "end": 17972,
                      "loc": {
                        "start": {
                          "line": 557,
                          "column": 60
                        },
                        "end": {
                          "line": 557,
                          "column": 74
                        }
                      },
                      "object": {
                        "type": "Identifier",
                        "start": 17958,
                        "end": 17963,
                        "loc": {
                          "start": {
                            "line": 557,
                            "column": 60
                          },
                          "end": {
                            "line": 557,
                            "column": 65
                          },
                          "identifierName": "Ember"
                        },
                        "name": "Ember"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 17964,
                        "end": 17972,
                        "loc": {
                          "start": {
                            "line": 557,
                            "column": 66
                          },
                          "end": {
                            "line": 557,
                            "column": 74
                          },
                          "identifierName": "computed"
                        },
                        "name": "computed"
                      },
                      "computed": false
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 17973,
                      "end": 17981,
                      "loc": {
                        "start": {
                          "line": 557,
                          "column": 75
                        },
                        "end": {
                          "line": 557,
                          "column": 83
                        },
                        "identifierName": "notEmpty"
                      },
                      "name": "notEmpty"
                    },
                    "computed": false
                  }
                ]
              },
              "leadingComments": null
            }
          ],
          "kind": "const",
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.notEmpty](http://emberjs.com/api/classes/Ember.computed.html#method_notEmpty)\n *\n * A computed property that returns `true` if the value of the dependent\n * property is NOT null, an empty string, empty array, or empty function.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { notEmpty } from 'ember-decorators/object/computed';\n *\n * export default class GroceryBagComponent extends Component {\n *   groceryBag = A(['milk', 'eggs', 'apples']);\n *\n *   @notEmpty('groceryBag') hasGroceriesToPutAway; // true\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to check\n ",
              "start": 17185,
              "end": 17897,
              "loc": {
                "start": {
                  "line": 536,
                  "column": 0
                },
                "end": {
                  "line": 556,
                  "column": 3
                }
              }
            }
          ],
          "trailingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.oneWay](http://emberjs.com/api/classes/Ember.computed.html#method_oneWay)\n *\n * Where `computed.alias` aliases `get` and `set`, and allows for bidirectional\n * data flow, `computed.oneWay` only provides an aliased `get`. The `set` will\n * not mutate the upstream property, rather causes the current property to\n * become the value set. This causes the downstream property to permanently\n * diverge from the upstream property.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { oneWay } from 'ember-decorators/object/computed';\n *\n * export default class UserProfileComponent extends Component {\n *   firstName = 'Joe';\n *\n *   @oneWay('firstName') originalName; // will always be 'Joe'\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to alias\n ",
              "start": 17985,
              "end": 18836,
              "loc": {
                "start": {
                  "line": 559,
                  "column": 0
                },
                "end": {
                  "line": 581,
                  "column": 3
                }
              }
            }
          ]
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.notEmpty](http://emberjs.com/api/classes/Ember.computed.html#method_notEmpty)\n *\n * A computed property that returns `true` if the value of the dependent\n * property is NOT null, an empty string, empty array, or empty function.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { notEmpty } from 'ember-decorators/object/computed';\n *\n * export default class GroceryBagComponent extends Component {\n *   groceryBag = A(['milk', 'eggs', 'apples']);\n *\n *   @notEmpty('groceryBag') hasGroceriesToPutAway; // true\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to check\n ",
            "start": 17185,
            "end": 17897,
            "loc": {
              "start": {
                "line": 536,
                "column": 0
              },
              "end": {
                "line": 556,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.oneWay](http://emberjs.com/api/classes/Ember.computed.html#method_oneWay)\n *\n * Where `computed.alias` aliases `get` and `set`, and allows for bidirectional\n * data flow, `computed.oneWay` only provides an aliased `get`. The `set` will\n * not mutate the upstream property, rather causes the current property to\n * become the value set. This causes the downstream property to permanently\n * diverge from the upstream property.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { oneWay } from 'ember-decorators/object/computed';\n *\n * export default class UserProfileComponent extends Component {\n *   firstName = 'Joe';\n *\n *   @oneWay('firstName') originalName; // will always be 'Joe'\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to alias\n ",
            "start": 17985,
            "end": 18836,
            "loc": {
              "start": {
                "line": 559,
                "column": 0
              },
              "end": {
                "line": 581,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 18837,
        "end": 18918,
        "loc": {
          "start": {
            "line": 582,
            "column": 0
          },
          "end": {
            "line": 582,
            "column": 81
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "VariableDeclaration",
          "start": 18844,
          "end": 18918,
          "loc": {
            "start": {
              "line": 582,
              "column": 7
            },
            "end": {
              "line": 582,
              "column": 81
            }
          },
          "declarations": [
            {
              "type": "VariableDeclarator",
              "start": 18850,
              "end": 18917,
              "loc": {
                "start": {
                  "line": 582,
                  "column": 13
                },
                "end": {
                  "line": 582,
                  "column": 80
                }
              },
              "id": {
                "type": "Identifier",
                "start": 18850,
                "end": 18856,
                "loc": {
                  "start": {
                    "line": 582,
                    "column": 13
                  },
                  "end": {
                    "line": 582,
                    "column": 19
                  },
                  "identifierName": "oneWay"
                },
                "name": "oneWay",
                "leadingComments": null
              },
              "init": {
                "type": "CallExpression",
                "start": 18859,
                "end": 18917,
                "loc": {
                  "start": {
                    "line": 582,
                    "column": 22
                  },
                  "end": {
                    "line": 582,
                    "column": 80
                  }
                },
                "callee": {
                  "type": "Identifier",
                  "start": 18859,
                  "end": 18894,
                  "loc": {
                    "start": {
                      "line": 582,
                      "column": 22
                    },
                    "end": {
                      "line": 582,
                      "column": 57
                    },
                    "identifierName": "decoratedPropertyWithRequiredParams"
                  },
                  "name": "decoratedPropertyWithRequiredParams"
                },
                "arguments": [
                  {
                    "type": "MemberExpression",
                    "start": 18895,
                    "end": 18916,
                    "loc": {
                      "start": {
                        "line": 582,
                        "column": 58
                      },
                      "end": {
                        "line": 582,
                        "column": 79
                      }
                    },
                    "object": {
                      "type": "MemberExpression",
                      "start": 18895,
                      "end": 18909,
                      "loc": {
                        "start": {
                          "line": 582,
                          "column": 58
                        },
                        "end": {
                          "line": 582,
                          "column": 72
                        }
                      },
                      "object": {
                        "type": "Identifier",
                        "start": 18895,
                        "end": 18900,
                        "loc": {
                          "start": {
                            "line": 582,
                            "column": 58
                          },
                          "end": {
                            "line": 582,
                            "column": 63
                          },
                          "identifierName": "Ember"
                        },
                        "name": "Ember"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 18901,
                        "end": 18909,
                        "loc": {
                          "start": {
                            "line": 582,
                            "column": 64
                          },
                          "end": {
                            "line": 582,
                            "column": 72
                          },
                          "identifierName": "computed"
                        },
                        "name": "computed"
                      },
                      "computed": false
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 18910,
                      "end": 18916,
                      "loc": {
                        "start": {
                          "line": 582,
                          "column": 73
                        },
                        "end": {
                          "line": 582,
                          "column": 79
                        },
                        "identifierName": "oneWay"
                      },
                      "name": "oneWay"
                    },
                    "computed": false
                  }
                ]
              },
              "leadingComments": null
            }
          ],
          "kind": "const",
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.oneWay](http://emberjs.com/api/classes/Ember.computed.html#method_oneWay)\n *\n * Where `computed.alias` aliases `get` and `set`, and allows for bidirectional\n * data flow, `computed.oneWay` only provides an aliased `get`. The `set` will\n * not mutate the upstream property, rather causes the current property to\n * become the value set. This causes the downstream property to permanently\n * diverge from the upstream property.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { oneWay } from 'ember-decorators/object/computed';\n *\n * export default class UserProfileComponent extends Component {\n *   firstName = 'Joe';\n *\n *   @oneWay('firstName') originalName; // will always be 'Joe'\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to alias\n ",
              "start": 17985,
              "end": 18836,
              "loc": {
                "start": {
                  "line": 559,
                  "column": 0
                },
                "end": {
                  "line": 581,
                  "column": 3
                }
              }
            }
          ],
          "trailingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.or](http://emberjs.com/api/classes/Ember.computed.html#method_or)\n *\n * A computed property which performs a logical or on the original values for\n * the provided dependent properties.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { or } from 'ember-decorators/object/computed';\n *\n * export default class OutfitFeaturesComponent extends Component {\n *   hasJacket = true;\n *   hasUmbrella = false;\n *\n *   @or('hasJacket', 'hasUmbrella') isReadyForRain; // true\n * }\n * ```\n *\n * @function\n * @param {...String} dependentKey - Key for the properties to `or`\n ",
              "start": 18920,
              "end": 19555,
              "loc": {
                "start": {
                  "line": 584,
                  "column": 0
                },
                "end": {
                  "line": 604,
                  "column": 3
                }
              }
            }
          ]
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.oneWay](http://emberjs.com/api/classes/Ember.computed.html#method_oneWay)\n *\n * Where `computed.alias` aliases `get` and `set`, and allows for bidirectional\n * data flow, `computed.oneWay` only provides an aliased `get`. The `set` will\n * not mutate the upstream property, rather causes the current property to\n * become the value set. This causes the downstream property to permanently\n * diverge from the upstream property.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { oneWay } from 'ember-decorators/object/computed';\n *\n * export default class UserProfileComponent extends Component {\n *   firstName = 'Joe';\n *\n *   @oneWay('firstName') originalName; // will always be 'Joe'\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to alias\n ",
            "start": 17985,
            "end": 18836,
            "loc": {
              "start": {
                "line": 559,
                "column": 0
              },
              "end": {
                "line": 581,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.or](http://emberjs.com/api/classes/Ember.computed.html#method_or)\n *\n * A computed property which performs a logical or on the original values for\n * the provided dependent properties.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { or } from 'ember-decorators/object/computed';\n *\n * export default class OutfitFeaturesComponent extends Component {\n *   hasJacket = true;\n *   hasUmbrella = false;\n *\n *   @or('hasJacket', 'hasUmbrella') isReadyForRain; // true\n * }\n * ```\n *\n * @function\n * @param {...String} dependentKey - Key for the properties to `or`\n ",
            "start": 18920,
            "end": 19555,
            "loc": {
              "start": {
                "line": 584,
                "column": 0
              },
              "end": {
                "line": 604,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 19556,
        "end": 19629,
        "loc": {
          "start": {
            "line": 605,
            "column": 0
          },
          "end": {
            "line": 605,
            "column": 73
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "VariableDeclaration",
          "start": 19563,
          "end": 19629,
          "loc": {
            "start": {
              "line": 605,
              "column": 7
            },
            "end": {
              "line": 605,
              "column": 73
            }
          },
          "declarations": [
            {
              "type": "VariableDeclarator",
              "start": 19569,
              "end": 19628,
              "loc": {
                "start": {
                  "line": 605,
                  "column": 13
                },
                "end": {
                  "line": 605,
                  "column": 72
                }
              },
              "id": {
                "type": "Identifier",
                "start": 19569,
                "end": 19571,
                "loc": {
                  "start": {
                    "line": 605,
                    "column": 13
                  },
                  "end": {
                    "line": 605,
                    "column": 15
                  },
                  "identifierName": "or"
                },
                "name": "or",
                "leadingComments": null
              },
              "init": {
                "type": "CallExpression",
                "start": 19574,
                "end": 19628,
                "loc": {
                  "start": {
                    "line": 605,
                    "column": 18
                  },
                  "end": {
                    "line": 605,
                    "column": 72
                  }
                },
                "callee": {
                  "type": "Identifier",
                  "start": 19574,
                  "end": 19609,
                  "loc": {
                    "start": {
                      "line": 605,
                      "column": 18
                    },
                    "end": {
                      "line": 605,
                      "column": 53
                    },
                    "identifierName": "decoratedPropertyWithRequiredParams"
                  },
                  "name": "decoratedPropertyWithRequiredParams"
                },
                "arguments": [
                  {
                    "type": "MemberExpression",
                    "start": 19610,
                    "end": 19627,
                    "loc": {
                      "start": {
                        "line": 605,
                        "column": 54
                      },
                      "end": {
                        "line": 605,
                        "column": 71
                      }
                    },
                    "object": {
                      "type": "MemberExpression",
                      "start": 19610,
                      "end": 19624,
                      "loc": {
                        "start": {
                          "line": 605,
                          "column": 54
                        },
                        "end": {
                          "line": 605,
                          "column": 68
                        }
                      },
                      "object": {
                        "type": "Identifier",
                        "start": 19610,
                        "end": 19615,
                        "loc": {
                          "start": {
                            "line": 605,
                            "column": 54
                          },
                          "end": {
                            "line": 605,
                            "column": 59
                          },
                          "identifierName": "Ember"
                        },
                        "name": "Ember"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 19616,
                        "end": 19624,
                        "loc": {
                          "start": {
                            "line": 605,
                            "column": 60
                          },
                          "end": {
                            "line": 605,
                            "column": 68
                          },
                          "identifierName": "computed"
                        },
                        "name": "computed"
                      },
                      "computed": false
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 19625,
                      "end": 19627,
                      "loc": {
                        "start": {
                          "line": 605,
                          "column": 69
                        },
                        "end": {
                          "line": 605,
                          "column": 71
                        },
                        "identifierName": "or"
                      },
                      "name": "or"
                    },
                    "computed": false
                  }
                ]
              },
              "leadingComments": null
            }
          ],
          "kind": "const",
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.or](http://emberjs.com/api/classes/Ember.computed.html#method_or)\n *\n * A computed property which performs a logical or on the original values for\n * the provided dependent properties.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { or } from 'ember-decorators/object/computed';\n *\n * export default class OutfitFeaturesComponent extends Component {\n *   hasJacket = true;\n *   hasUmbrella = false;\n *\n *   @or('hasJacket', 'hasUmbrella') isReadyForRain; // true\n * }\n * ```\n *\n * @function\n * @param {...String} dependentKey - Key for the properties to `or`\n ",
              "start": 18920,
              "end": 19555,
              "loc": {
                "start": {
                  "line": 584,
                  "column": 0
                },
                "end": {
                  "line": 604,
                  "column": 3
                }
              }
            }
          ],
          "trailingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.reads](http://emberjs.com/api/classes/Ember.computed.html#method_reads)\n *\n * This is a more semantically meaningful alias of `computed.oneWay`, whose\n * name is somewhat ambiguous as to which direction the data flows.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { reads } from 'ember-decorators/object/computed';\n *\n * export default class UserProfileComponent extends Component {\n *   first = 'Tomster';\n *\n *   @reads('first') firstName;\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to read\n ",
              "start": 19631,
              "end": 20278,
              "loc": {
                "start": {
                  "line": 607,
                  "column": 0
                },
                "end": {
                  "line": 627,
                  "column": 3
                }
              }
            }
          ]
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.or](http://emberjs.com/api/classes/Ember.computed.html#method_or)\n *\n * A computed property which performs a logical or on the original values for\n * the provided dependent properties.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { or } from 'ember-decorators/object/computed';\n *\n * export default class OutfitFeaturesComponent extends Component {\n *   hasJacket = true;\n *   hasUmbrella = false;\n *\n *   @or('hasJacket', 'hasUmbrella') isReadyForRain; // true\n * }\n * ```\n *\n * @function\n * @param {...String} dependentKey - Key for the properties to `or`\n ",
            "start": 18920,
            "end": 19555,
            "loc": {
              "start": {
                "line": 584,
                "column": 0
              },
              "end": {
                "line": 604,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.reads](http://emberjs.com/api/classes/Ember.computed.html#method_reads)\n *\n * This is a more semantically meaningful alias of `computed.oneWay`, whose\n * name is somewhat ambiguous as to which direction the data flows.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { reads } from 'ember-decorators/object/computed';\n *\n * export default class UserProfileComponent extends Component {\n *   first = 'Tomster';\n *\n *   @reads('first') firstName;\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to read\n ",
            "start": 19631,
            "end": 20278,
            "loc": {
              "start": {
                "line": 607,
                "column": 0
              },
              "end": {
                "line": 627,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 20279,
        "end": 20358,
        "loc": {
          "start": {
            "line": 628,
            "column": 0
          },
          "end": {
            "line": 628,
            "column": 79
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "VariableDeclaration",
          "start": 20286,
          "end": 20358,
          "loc": {
            "start": {
              "line": 628,
              "column": 7
            },
            "end": {
              "line": 628,
              "column": 79
            }
          },
          "declarations": [
            {
              "type": "VariableDeclarator",
              "start": 20292,
              "end": 20357,
              "loc": {
                "start": {
                  "line": 628,
                  "column": 13
                },
                "end": {
                  "line": 628,
                  "column": 78
                }
              },
              "id": {
                "type": "Identifier",
                "start": 20292,
                "end": 20297,
                "loc": {
                  "start": {
                    "line": 628,
                    "column": 13
                  },
                  "end": {
                    "line": 628,
                    "column": 18
                  },
                  "identifierName": "reads"
                },
                "name": "reads",
                "leadingComments": null
              },
              "init": {
                "type": "CallExpression",
                "start": 20300,
                "end": 20357,
                "loc": {
                  "start": {
                    "line": 628,
                    "column": 21
                  },
                  "end": {
                    "line": 628,
                    "column": 78
                  }
                },
                "callee": {
                  "type": "Identifier",
                  "start": 20300,
                  "end": 20335,
                  "loc": {
                    "start": {
                      "line": 628,
                      "column": 21
                    },
                    "end": {
                      "line": 628,
                      "column": 56
                    },
                    "identifierName": "decoratedPropertyWithRequiredParams"
                  },
                  "name": "decoratedPropertyWithRequiredParams"
                },
                "arguments": [
                  {
                    "type": "MemberExpression",
                    "start": 20336,
                    "end": 20356,
                    "loc": {
                      "start": {
                        "line": 628,
                        "column": 57
                      },
                      "end": {
                        "line": 628,
                        "column": 77
                      }
                    },
                    "object": {
                      "type": "MemberExpression",
                      "start": 20336,
                      "end": 20350,
                      "loc": {
                        "start": {
                          "line": 628,
                          "column": 57
                        },
                        "end": {
                          "line": 628,
                          "column": 71
                        }
                      },
                      "object": {
                        "type": "Identifier",
                        "start": 20336,
                        "end": 20341,
                        "loc": {
                          "start": {
                            "line": 628,
                            "column": 57
                          },
                          "end": {
                            "line": 628,
                            "column": 62
                          },
                          "identifierName": "Ember"
                        },
                        "name": "Ember"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 20342,
                        "end": 20350,
                        "loc": {
                          "start": {
                            "line": 628,
                            "column": 63
                          },
                          "end": {
                            "line": 628,
                            "column": 71
                          },
                          "identifierName": "computed"
                        },
                        "name": "computed"
                      },
                      "computed": false
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 20351,
                      "end": 20356,
                      "loc": {
                        "start": {
                          "line": 628,
                          "column": 72
                        },
                        "end": {
                          "line": 628,
                          "column": 77
                        },
                        "identifierName": "reads"
                      },
                      "name": "reads"
                    },
                    "computed": false
                  }
                ]
              },
              "leadingComments": null
            }
          ],
          "kind": "const",
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.reads](http://emberjs.com/api/classes/Ember.computed.html#method_reads)\n *\n * This is a more semantically meaningful alias of `computed.oneWay`, whose\n * name is somewhat ambiguous as to which direction the data flows.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { reads } from 'ember-decorators/object/computed';\n *\n * export default class UserProfileComponent extends Component {\n *   first = 'Tomster';\n *\n *   @reads('first') firstName;\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to read\n ",
              "start": 19631,
              "end": 20278,
              "loc": {
                "start": {
                  "line": 607,
                  "column": 0
                },
                "end": {
                  "line": 627,
                  "column": 3
                }
              }
            }
          ],
          "trailingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.setDiff](http://emberjs.com/api/classes/Ember.computed.html#method_setDiff)\n *\n * A computed property which returns a new array with all the properties from\n * the first dependent array that are not in the second dependent array.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { setDiff } from 'ember-decorators/object/computed';\n *\n * export default class FavoriteThingsComponent extends Component {\n *   likes = A([ 'tacos', 'puppies', 'pizza' ]);\n *   foods = A(['tacos', 'pizza']);\n *\n *   @setDiff('likes', 'foods') favoriteThingsThatArentFood; // ['puppies']\n * }\n * ```\n *\n * @function\n * @param {String} setAProperty - Keys for the first set\n * @param {String} setBProperty - Keys for the first set\n ",
              "start": 20360,
              "end": 21179,
              "loc": {
                "start": {
                  "line": 630,
                  "column": 0
                },
                "end": {
                  "line": 652,
                  "column": 3
                }
              }
            }
          ]
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.reads](http://emberjs.com/api/classes/Ember.computed.html#method_reads)\n *\n * This is a more semantically meaningful alias of `computed.oneWay`, whose\n * name is somewhat ambiguous as to which direction the data flows.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { reads } from 'ember-decorators/object/computed';\n *\n * export default class UserProfileComponent extends Component {\n *   first = 'Tomster';\n *\n *   @reads('first') firstName;\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to read\n ",
            "start": 19631,
            "end": 20278,
            "loc": {
              "start": {
                "line": 607,
                "column": 0
              },
              "end": {
                "line": 627,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.setDiff](http://emberjs.com/api/classes/Ember.computed.html#method_setDiff)\n *\n * A computed property which returns a new array with all the properties from\n * the first dependent array that are not in the second dependent array.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { setDiff } from 'ember-decorators/object/computed';\n *\n * export default class FavoriteThingsComponent extends Component {\n *   likes = A([ 'tacos', 'puppies', 'pizza' ]);\n *   foods = A(['tacos', 'pizza']);\n *\n *   @setDiff('likes', 'foods') favoriteThingsThatArentFood; // ['puppies']\n * }\n * ```\n *\n * @function\n * @param {String} setAProperty - Keys for the first set\n * @param {String} setBProperty - Keys for the first set\n ",
            "start": 20360,
            "end": 21179,
            "loc": {
              "start": {
                "line": 630,
                "column": 0
              },
              "end": {
                "line": 652,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 21180,
        "end": 21263,
        "loc": {
          "start": {
            "line": 653,
            "column": 0
          },
          "end": {
            "line": 653,
            "column": 83
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "VariableDeclaration",
          "start": 21187,
          "end": 21263,
          "loc": {
            "start": {
              "line": 653,
              "column": 7
            },
            "end": {
              "line": 653,
              "column": 83
            }
          },
          "declarations": [
            {
              "type": "VariableDeclarator",
              "start": 21193,
              "end": 21262,
              "loc": {
                "start": {
                  "line": 653,
                  "column": 13
                },
                "end": {
                  "line": 653,
                  "column": 82
                }
              },
              "id": {
                "type": "Identifier",
                "start": 21193,
                "end": 21200,
                "loc": {
                  "start": {
                    "line": 653,
                    "column": 13
                  },
                  "end": {
                    "line": 653,
                    "column": 20
                  },
                  "identifierName": "setDiff"
                },
                "name": "setDiff",
                "leadingComments": null
              },
              "init": {
                "type": "CallExpression",
                "start": 21203,
                "end": 21262,
                "loc": {
                  "start": {
                    "line": 653,
                    "column": 23
                  },
                  "end": {
                    "line": 653,
                    "column": 82
                  }
                },
                "callee": {
                  "type": "Identifier",
                  "start": 21203,
                  "end": 21238,
                  "loc": {
                    "start": {
                      "line": 653,
                      "column": 23
                    },
                    "end": {
                      "line": 653,
                      "column": 58
                    },
                    "identifierName": "decoratedPropertyWithRequiredParams"
                  },
                  "name": "decoratedPropertyWithRequiredParams"
                },
                "arguments": [
                  {
                    "type": "MemberExpression",
                    "start": 21239,
                    "end": 21261,
                    "loc": {
                      "start": {
                        "line": 653,
                        "column": 59
                      },
                      "end": {
                        "line": 653,
                        "column": 81
                      }
                    },
                    "object": {
                      "type": "MemberExpression",
                      "start": 21239,
                      "end": 21253,
                      "loc": {
                        "start": {
                          "line": 653,
                          "column": 59
                        },
                        "end": {
                          "line": 653,
                          "column": 73
                        }
                      },
                      "object": {
                        "type": "Identifier",
                        "start": 21239,
                        "end": 21244,
                        "loc": {
                          "start": {
                            "line": 653,
                            "column": 59
                          },
                          "end": {
                            "line": 653,
                            "column": 64
                          },
                          "identifierName": "Ember"
                        },
                        "name": "Ember"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 21245,
                        "end": 21253,
                        "loc": {
                          "start": {
                            "line": 653,
                            "column": 65
                          },
                          "end": {
                            "line": 653,
                            "column": 73
                          },
                          "identifierName": "computed"
                        },
                        "name": "computed"
                      },
                      "computed": false
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 21254,
                      "end": 21261,
                      "loc": {
                        "start": {
                          "line": 653,
                          "column": 74
                        },
                        "end": {
                          "line": 653,
                          "column": 81
                        },
                        "identifierName": "setDiff"
                      },
                      "name": "setDiff"
                    },
                    "computed": false
                  }
                ]
              },
              "leadingComments": null
            }
          ],
          "kind": "const",
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.setDiff](http://emberjs.com/api/classes/Ember.computed.html#method_setDiff)\n *\n * A computed property which returns a new array with all the properties from\n * the first dependent array that are not in the second dependent array.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { setDiff } from 'ember-decorators/object/computed';\n *\n * export default class FavoriteThingsComponent extends Component {\n *   likes = A([ 'tacos', 'puppies', 'pizza' ]);\n *   foods = A(['tacos', 'pizza']);\n *\n *   @setDiff('likes', 'foods') favoriteThingsThatArentFood; // ['puppies']\n * }\n * ```\n *\n * @function\n * @param {String} setAProperty - Keys for the first set\n * @param {String} setBProperty - Keys for the first set\n ",
              "start": 20360,
              "end": 21179,
              "loc": {
                "start": {
                  "line": 630,
                  "column": 0
                },
                "end": {
                  "line": 652,
                  "column": 3
                }
              }
            }
          ],
          "trailingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.sort](http://emberjs.com/api/classes/Ember.computed.html#method_sort)\n *\n * A computed property which returns a new array with all the properties from\n * the first dependent array sorted based on a property or sort function.\n *\n *\n * The callback method you provide should have the following signature:\n *\n * ```javascript\n * function(itemA, itemB);\n * ```\n * - `itemA` the first item to compare.\n * - `itemB` the second item to compare.\n *\n * This function should return negative number (e.g. `-1`) when `itemA` should\n * come before `itemB`. It should return positive number (e.g. `1`) when\n * `itemA` should come after `itemB`. If the `itemA` and `itemB` are equal this\n * function should return `0`.\n *\n * Therefore, if this function is comparing some numeric values, simple\n * `itemA - itemB` or `itemA.get( 'foo' ) - itemB.get( 'foo' )` can be used\n * instead of series of `if`.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { sort } from 'ember-decorators/object/computed';\n *\n * export default class SortNamesComponent extends Component {\n *   names = A([{name:'Link'},{name:'Zelda'},{name:'Ganon'},{name:'Navi'}]);\n *\n *   @sort('names')\n *   sortedNames(a, b){\n *     if (a.name > b.name) {\n *       return 1;\n *     } else if (a.name < b.name) {\n *       return -1;\n *     }\n *\n *     return 0;\n *   } // [{name:'Ganon'},{name:'Link'},{name:'Navi'},{name:'Zelda'}]\n *\n *   // alternative syntax:\n *\n *   @sort('names', function(a, b){\n *     if (a.name > b.name) {\n *       return 1;\n *     } else if (a.name < b.name) {\n *       return -1;\n *     }\n *\n *     return 0;\n *   }) sortedNames; // [{name:'Ganon'},{name:'Link'},{name:'Navi'},{name:'Zelda'}]\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - The key for the array that should be sorted\n * @param {Array<String>|Function(Any, Any): Number} sortDefinition - Sorting function or sort descriptor\n ",
              "start": 21265,
              "end": 23255,
              "loc": {
                "start": {
                  "line": 655,
                  "column": 0
                },
                "end": {
                  "line": 715,
                  "column": 3
                }
              }
            }
          ]
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.setDiff](http://emberjs.com/api/classes/Ember.computed.html#method_setDiff)\n *\n * A computed property which returns a new array with all the properties from\n * the first dependent array that are not in the second dependent array.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { setDiff } from 'ember-decorators/object/computed';\n *\n * export default class FavoriteThingsComponent extends Component {\n *   likes = A([ 'tacos', 'puppies', 'pizza' ]);\n *   foods = A(['tacos', 'pizza']);\n *\n *   @setDiff('likes', 'foods') favoriteThingsThatArentFood; // ['puppies']\n * }\n * ```\n *\n * @function\n * @param {String} setAProperty - Keys for the first set\n * @param {String} setBProperty - Keys for the first set\n ",
            "start": 20360,
            "end": 21179,
            "loc": {
              "start": {
                "line": 630,
                "column": 0
              },
              "end": {
                "line": 652,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.sort](http://emberjs.com/api/classes/Ember.computed.html#method_sort)\n *\n * A computed property which returns a new array with all the properties from\n * the first dependent array sorted based on a property or sort function.\n *\n *\n * The callback method you provide should have the following signature:\n *\n * ```javascript\n * function(itemA, itemB);\n * ```\n * - `itemA` the first item to compare.\n * - `itemB` the second item to compare.\n *\n * This function should return negative number (e.g. `-1`) when `itemA` should\n * come before `itemB`. It should return positive number (e.g. `1`) when\n * `itemA` should come after `itemB`. If the `itemA` and `itemB` are equal this\n * function should return `0`.\n *\n * Therefore, if this function is comparing some numeric values, simple\n * `itemA - itemB` or `itemA.get( 'foo' ) - itemB.get( 'foo' )` can be used\n * instead of series of `if`.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { sort } from 'ember-decorators/object/computed';\n *\n * export default class SortNamesComponent extends Component {\n *   names = A([{name:'Link'},{name:'Zelda'},{name:'Ganon'},{name:'Navi'}]);\n *\n *   @sort('names')\n *   sortedNames(a, b){\n *     if (a.name > b.name) {\n *       return 1;\n *     } else if (a.name < b.name) {\n *       return -1;\n *     }\n *\n *     return 0;\n *   } // [{name:'Ganon'},{name:'Link'},{name:'Navi'},{name:'Zelda'}]\n *\n *   // alternative syntax:\n *\n *   @sort('names', function(a, b){\n *     if (a.name > b.name) {\n *       return 1;\n *     } else if (a.name < b.name) {\n *       return -1;\n *     }\n *\n *     return 0;\n *   }) sortedNames; // [{name:'Ganon'},{name:'Link'},{name:'Navi'},{name:'Zelda'}]\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - The key for the array that should be sorted\n * @param {Array<String>|Function(Any, Any): Number} sortDefinition - Sorting function or sort descriptor\n ",
            "start": 21265,
            "end": 23255,
            "loc": {
              "start": {
                "line": 655,
                "column": 0
              },
              "end": {
                "line": 715,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 23256,
        "end": 23343,
        "loc": {
          "start": {
            "line": 716,
            "column": 0
          },
          "end": {
            "line": 716,
            "column": 87
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "VariableDeclaration",
          "start": 23263,
          "end": 23343,
          "loc": {
            "start": {
              "line": 716,
              "column": 7
            },
            "end": {
              "line": 716,
              "column": 87
            }
          },
          "declarations": [
            {
              "type": "VariableDeclarator",
              "start": 23269,
              "end": 23342,
              "loc": {
                "start": {
                  "line": 716,
                  "column": 13
                },
                "end": {
                  "line": 716,
                  "column": 86
                }
              },
              "id": {
                "type": "Identifier",
                "start": 23269,
                "end": 23273,
                "loc": {
                  "start": {
                    "line": 716,
                    "column": 13
                  },
                  "end": {
                    "line": 716,
                    "column": 17
                  },
                  "identifierName": "sort"
                },
                "name": "sort",
                "leadingComments": null
              },
              "init": {
                "type": "CallExpression",
                "start": 23276,
                "end": 23342,
                "loc": {
                  "start": {
                    "line": 716,
                    "column": 20
                  },
                  "end": {
                    "line": 716,
                    "column": 86
                  }
                },
                "callee": {
                  "type": "Identifier",
                  "start": 23276,
                  "end": 23321,
                  "loc": {
                    "start": {
                      "line": 716,
                      "column": 20
                    },
                    "end": {
                      "line": 716,
                      "column": 65
                    },
                    "identifierName": "decoratedPropertyWithEitherCallbackOrProperty"
                  },
                  "name": "decoratedPropertyWithEitherCallbackOrProperty"
                },
                "arguments": [
                  {
                    "type": "MemberExpression",
                    "start": 23322,
                    "end": 23341,
                    "loc": {
                      "start": {
                        "line": 716,
                        "column": 66
                      },
                      "end": {
                        "line": 716,
                        "column": 85
                      }
                    },
                    "object": {
                      "type": "MemberExpression",
                      "start": 23322,
                      "end": 23336,
                      "loc": {
                        "start": {
                          "line": 716,
                          "column": 66
                        },
                        "end": {
                          "line": 716,
                          "column": 80
                        }
                      },
                      "object": {
                        "type": "Identifier",
                        "start": 23322,
                        "end": 23327,
                        "loc": {
                          "start": {
                            "line": 716,
                            "column": 66
                          },
                          "end": {
                            "line": 716,
                            "column": 71
                          },
                          "identifierName": "Ember"
                        },
                        "name": "Ember"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 23328,
                        "end": 23336,
                        "loc": {
                          "start": {
                            "line": 716,
                            "column": 72
                          },
                          "end": {
                            "line": 716,
                            "column": 80
                          },
                          "identifierName": "computed"
                        },
                        "name": "computed"
                      },
                      "computed": false
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 23337,
                      "end": 23341,
                      "loc": {
                        "start": {
                          "line": 716,
                          "column": 81
                        },
                        "end": {
                          "line": 716,
                          "column": 85
                        },
                        "identifierName": "sort"
                      },
                      "name": "sort"
                    },
                    "computed": false
                  }
                ]
              },
              "leadingComments": null
            }
          ],
          "kind": "const",
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.sort](http://emberjs.com/api/classes/Ember.computed.html#method_sort)\n *\n * A computed property which returns a new array with all the properties from\n * the first dependent array sorted based on a property or sort function.\n *\n *\n * The callback method you provide should have the following signature:\n *\n * ```javascript\n * function(itemA, itemB);\n * ```\n * - `itemA` the first item to compare.\n * - `itemB` the second item to compare.\n *\n * This function should return negative number (e.g. `-1`) when `itemA` should\n * come before `itemB`. It should return positive number (e.g. `1`) when\n * `itemA` should come after `itemB`. If the `itemA` and `itemB` are equal this\n * function should return `0`.\n *\n * Therefore, if this function is comparing some numeric values, simple\n * `itemA - itemB` or `itemA.get( 'foo' ) - itemB.get( 'foo' )` can be used\n * instead of series of `if`.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { sort } from 'ember-decorators/object/computed';\n *\n * export default class SortNamesComponent extends Component {\n *   names = A([{name:'Link'},{name:'Zelda'},{name:'Ganon'},{name:'Navi'}]);\n *\n *   @sort('names')\n *   sortedNames(a, b){\n *     if (a.name > b.name) {\n *       return 1;\n *     } else if (a.name < b.name) {\n *       return -1;\n *     }\n *\n *     return 0;\n *   } // [{name:'Ganon'},{name:'Link'},{name:'Navi'},{name:'Zelda'}]\n *\n *   // alternative syntax:\n *\n *   @sort('names', function(a, b){\n *     if (a.name > b.name) {\n *       return 1;\n *     } else if (a.name < b.name) {\n *       return -1;\n *     }\n *\n *     return 0;\n *   }) sortedNames; // [{name:'Ganon'},{name:'Link'},{name:'Navi'},{name:'Zelda'}]\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - The key for the array that should be sorted\n * @param {Array<String>|Function(Any, Any): Number} sortDefinition - Sorting function or sort descriptor\n ",
              "start": 21265,
              "end": 23255,
              "loc": {
                "start": {
                  "line": 655,
                  "column": 0
                },
                "end": {
                  "line": 715,
                  "column": 3
                }
              }
            }
          ],
          "trailingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.sum](http://emberjs.com/api/classes/Ember.computed.html#method_sum)\n *\n * A computed property that returns the sum of the value in the dependent\n * array.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { sum } from 'ember-decorators/object/computed';\n *\n * export default class SumValuesComponent extends Component {\n *   values = A([1, 2, 3]);\n *\n *   @sum('values') total; // 6\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key of the array to sum up\n ",
              "start": 23345,
              "end": 23926,
              "loc": {
                "start": {
                  "line": 718,
                  "column": 0
                },
                "end": {
                  "line": 738,
                  "column": 3
                }
              }
            }
          ]
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.sort](http://emberjs.com/api/classes/Ember.computed.html#method_sort)\n *\n * A computed property which returns a new array with all the properties from\n * the first dependent array sorted based on a property or sort function.\n *\n *\n * The callback method you provide should have the following signature:\n *\n * ```javascript\n * function(itemA, itemB);\n * ```\n * - `itemA` the first item to compare.\n * - `itemB` the second item to compare.\n *\n * This function should return negative number (e.g. `-1`) when `itemA` should\n * come before `itemB`. It should return positive number (e.g. `1`) when\n * `itemA` should come after `itemB`. If the `itemA` and `itemB` are equal this\n * function should return `0`.\n *\n * Therefore, if this function is comparing some numeric values, simple\n * `itemA - itemB` or `itemA.get( 'foo' ) - itemB.get( 'foo' )` can be used\n * instead of series of `if`.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { sort } from 'ember-decorators/object/computed';\n *\n * export default class SortNamesComponent extends Component {\n *   names = A([{name:'Link'},{name:'Zelda'},{name:'Ganon'},{name:'Navi'}]);\n *\n *   @sort('names')\n *   sortedNames(a, b){\n *     if (a.name > b.name) {\n *       return 1;\n *     } else if (a.name < b.name) {\n *       return -1;\n *     }\n *\n *     return 0;\n *   } // [{name:'Ganon'},{name:'Link'},{name:'Navi'},{name:'Zelda'}]\n *\n *   // alternative syntax:\n *\n *   @sort('names', function(a, b){\n *     if (a.name > b.name) {\n *       return 1;\n *     } else if (a.name < b.name) {\n *       return -1;\n *     }\n *\n *     return 0;\n *   }) sortedNames; // [{name:'Ganon'},{name:'Link'},{name:'Navi'},{name:'Zelda'}]\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - The key for the array that should be sorted\n * @param {Array<String>|Function(Any, Any): Number} sortDefinition - Sorting function or sort descriptor\n ",
            "start": 21265,
            "end": 23255,
            "loc": {
              "start": {
                "line": 655,
                "column": 0
              },
              "end": {
                "line": 715,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.sum](http://emberjs.com/api/classes/Ember.computed.html#method_sum)\n *\n * A computed property that returns the sum of the value in the dependent\n * array.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { sum } from 'ember-decorators/object/computed';\n *\n * export default class SumValuesComponent extends Component {\n *   values = A([1, 2, 3]);\n *\n *   @sum('values') total; // 6\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key of the array to sum up\n ",
            "start": 23345,
            "end": 23926,
            "loc": {
              "start": {
                "line": 718,
                "column": 0
              },
              "end": {
                "line": 738,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 23927,
        "end": 24002,
        "loc": {
          "start": {
            "line": 739,
            "column": 0
          },
          "end": {
            "line": 739,
            "column": 75
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "VariableDeclaration",
          "start": 23934,
          "end": 24002,
          "loc": {
            "start": {
              "line": 739,
              "column": 7
            },
            "end": {
              "line": 739,
              "column": 75
            }
          },
          "declarations": [
            {
              "type": "VariableDeclarator",
              "start": 23940,
              "end": 24001,
              "loc": {
                "start": {
                  "line": 739,
                  "column": 13
                },
                "end": {
                  "line": 739,
                  "column": 74
                }
              },
              "id": {
                "type": "Identifier",
                "start": 23940,
                "end": 23943,
                "loc": {
                  "start": {
                    "line": 739,
                    "column": 13
                  },
                  "end": {
                    "line": 739,
                    "column": 16
                  },
                  "identifierName": "sum"
                },
                "name": "sum",
                "leadingComments": null
              },
              "init": {
                "type": "CallExpression",
                "start": 23946,
                "end": 24001,
                "loc": {
                  "start": {
                    "line": 739,
                    "column": 19
                  },
                  "end": {
                    "line": 739,
                    "column": 74
                  }
                },
                "callee": {
                  "type": "Identifier",
                  "start": 23946,
                  "end": 23981,
                  "loc": {
                    "start": {
                      "line": 739,
                      "column": 19
                    },
                    "end": {
                      "line": 739,
                      "column": 54
                    },
                    "identifierName": "decoratedPropertyWithRequiredParams"
                  },
                  "name": "decoratedPropertyWithRequiredParams"
                },
                "arguments": [
                  {
                    "type": "MemberExpression",
                    "start": 23982,
                    "end": 24000,
                    "loc": {
                      "start": {
                        "line": 739,
                        "column": 55
                      },
                      "end": {
                        "line": 739,
                        "column": 73
                      }
                    },
                    "object": {
                      "type": "MemberExpression",
                      "start": 23982,
                      "end": 23996,
                      "loc": {
                        "start": {
                          "line": 739,
                          "column": 55
                        },
                        "end": {
                          "line": 739,
                          "column": 69
                        }
                      },
                      "object": {
                        "type": "Identifier",
                        "start": 23982,
                        "end": 23987,
                        "loc": {
                          "start": {
                            "line": 739,
                            "column": 55
                          },
                          "end": {
                            "line": 739,
                            "column": 60
                          },
                          "identifierName": "Ember"
                        },
                        "name": "Ember"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 23988,
                        "end": 23996,
                        "loc": {
                          "start": {
                            "line": 739,
                            "column": 61
                          },
                          "end": {
                            "line": 739,
                            "column": 69
                          },
                          "identifierName": "computed"
                        },
                        "name": "computed"
                      },
                      "computed": false
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 23997,
                      "end": 24000,
                      "loc": {
                        "start": {
                          "line": 739,
                          "column": 70
                        },
                        "end": {
                          "line": 739,
                          "column": 73
                        },
                        "identifierName": "sum"
                      },
                      "name": "sum"
                    },
                    "computed": false
                  }
                ]
              },
              "leadingComments": null
            }
          ],
          "kind": "const",
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.sum](http://emberjs.com/api/classes/Ember.computed.html#method_sum)\n *\n * A computed property that returns the sum of the value in the dependent\n * array.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { sum } from 'ember-decorators/object/computed';\n *\n * export default class SumValuesComponent extends Component {\n *   values = A([1, 2, 3]);\n *\n *   @sum('values') total; // 6\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key of the array to sum up\n ",
              "start": 23345,
              "end": 23926,
              "loc": {
                "start": {
                  "line": 718,
                  "column": 0
                },
                "end": {
                  "line": 738,
                  "column": 3
                }
              }
            }
          ],
          "trailingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.union](http://emberjs.com/api/classes/Ember.computed.html#method_union)\n *\n * Alias for [union](http://emberjs.com/api/classes/Ember.computed.html#method_uniq).\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { union } from 'ember-decorators/object/computed';\n *\n * export default class LikesAndFoodsComponent extends Component {\n *   likes = A([ 'tacos', 'puppies', 'pizza' ]);\n *   foods = A(['tacos', 'pizza', 'ramen']);\n *\n *   @union('likes', 'foods') favorites; // ['tacos', 'puppies', 'pizza', 'ramen']\n * }\n * ```\n *\n * @function\n * @param {...String} dependentKeys - Keys of the arrays to union\n ",
              "start": 24004,
              "end": 24719,
              "loc": {
                "start": {
                  "line": 741,
                  "column": 0
                },
                "end": {
                  "line": 761,
                  "column": 3
                }
              }
            }
          ]
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.sum](http://emberjs.com/api/classes/Ember.computed.html#method_sum)\n *\n * A computed property that returns the sum of the value in the dependent\n * array.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { sum } from 'ember-decorators/object/computed';\n *\n * export default class SumValuesComponent extends Component {\n *   values = A([1, 2, 3]);\n *\n *   @sum('values') total; // 6\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key of the array to sum up\n ",
            "start": 23345,
            "end": 23926,
            "loc": {
              "start": {
                "line": 718,
                "column": 0
              },
              "end": {
                "line": 738,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.union](http://emberjs.com/api/classes/Ember.computed.html#method_union)\n *\n * Alias for [union](http://emberjs.com/api/classes/Ember.computed.html#method_uniq).\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { union } from 'ember-decorators/object/computed';\n *\n * export default class LikesAndFoodsComponent extends Component {\n *   likes = A([ 'tacos', 'puppies', 'pizza' ]);\n *   foods = A(['tacos', 'pizza', 'ramen']);\n *\n *   @union('likes', 'foods') favorites; // ['tacos', 'puppies', 'pizza', 'ramen']\n * }\n * ```\n *\n * @function\n * @param {...String} dependentKeys - Keys of the arrays to union\n ",
            "start": 24004,
            "end": 24719,
            "loc": {
              "start": {
                "line": 741,
                "column": 0
              },
              "end": {
                "line": 761,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 24720,
        "end": 24799,
        "loc": {
          "start": {
            "line": 762,
            "column": 0
          },
          "end": {
            "line": 762,
            "column": 79
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "VariableDeclaration",
          "start": 24727,
          "end": 24799,
          "loc": {
            "start": {
              "line": 762,
              "column": 7
            },
            "end": {
              "line": 762,
              "column": 79
            }
          },
          "declarations": [
            {
              "type": "VariableDeclarator",
              "start": 24733,
              "end": 24798,
              "loc": {
                "start": {
                  "line": 762,
                  "column": 13
                },
                "end": {
                  "line": 762,
                  "column": 78
                }
              },
              "id": {
                "type": "Identifier",
                "start": 24733,
                "end": 24738,
                "loc": {
                  "start": {
                    "line": 762,
                    "column": 13
                  },
                  "end": {
                    "line": 762,
                    "column": 18
                  },
                  "identifierName": "union"
                },
                "name": "union",
                "leadingComments": null
              },
              "init": {
                "type": "CallExpression",
                "start": 24741,
                "end": 24798,
                "loc": {
                  "start": {
                    "line": 762,
                    "column": 21
                  },
                  "end": {
                    "line": 762,
                    "column": 78
                  }
                },
                "callee": {
                  "type": "Identifier",
                  "start": 24741,
                  "end": 24776,
                  "loc": {
                    "start": {
                      "line": 762,
                      "column": 21
                    },
                    "end": {
                      "line": 762,
                      "column": 56
                    },
                    "identifierName": "decoratedPropertyWithRequiredParams"
                  },
                  "name": "decoratedPropertyWithRequiredParams"
                },
                "arguments": [
                  {
                    "type": "MemberExpression",
                    "start": 24777,
                    "end": 24797,
                    "loc": {
                      "start": {
                        "line": 762,
                        "column": 57
                      },
                      "end": {
                        "line": 762,
                        "column": 77
                      }
                    },
                    "object": {
                      "type": "MemberExpression",
                      "start": 24777,
                      "end": 24791,
                      "loc": {
                        "start": {
                          "line": 762,
                          "column": 57
                        },
                        "end": {
                          "line": 762,
                          "column": 71
                        }
                      },
                      "object": {
                        "type": "Identifier",
                        "start": 24777,
                        "end": 24782,
                        "loc": {
                          "start": {
                            "line": 762,
                            "column": 57
                          },
                          "end": {
                            "line": 762,
                            "column": 62
                          },
                          "identifierName": "Ember"
                        },
                        "name": "Ember"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 24783,
                        "end": 24791,
                        "loc": {
                          "start": {
                            "line": 762,
                            "column": 63
                          },
                          "end": {
                            "line": 762,
                            "column": 71
                          },
                          "identifierName": "computed"
                        },
                        "name": "computed"
                      },
                      "computed": false
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 24792,
                      "end": 24797,
                      "loc": {
                        "start": {
                          "line": 762,
                          "column": 72
                        },
                        "end": {
                          "line": 762,
                          "column": 77
                        },
                        "identifierName": "union"
                      },
                      "name": "union"
                    },
                    "computed": false
                  }
                ]
              },
              "leadingComments": null
            }
          ],
          "kind": "const",
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.union](http://emberjs.com/api/classes/Ember.computed.html#method_union)\n *\n * Alias for [union](http://emberjs.com/api/classes/Ember.computed.html#method_uniq).\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { union } from 'ember-decorators/object/computed';\n *\n * export default class LikesAndFoodsComponent extends Component {\n *   likes = A([ 'tacos', 'puppies', 'pizza' ]);\n *   foods = A(['tacos', 'pizza', 'ramen']);\n *\n *   @union('likes', 'foods') favorites; // ['tacos', 'puppies', 'pizza', 'ramen']\n * }\n * ```\n *\n * @function\n * @param {...String} dependentKeys - Keys of the arrays to union\n ",
              "start": 24004,
              "end": 24719,
              "loc": {
                "start": {
                  "line": 741,
                  "column": 0
                },
                "end": {
                  "line": 761,
                  "column": 3
                }
              }
            }
          ],
          "trailingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.uniq](http://emberjs.com/api/classes/Ember.computed.html#method_uniq)\n *\n * A computed property which returns a new array with all the unique elements from one or more dependent arrays.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { uniq } from 'ember-decorators/object/computed';\n *\n * export default class FavoriteThingsComponent extends Component {\n *   likes = A([ 'tacos', 'puppies', 'pizza' ]);\n *   foods = A(['tacos', 'pizza', 'ramen']);\n *\n *   @uniq('likes', 'foods') favorites; // ['tacos', 'puppies', 'pizza', 'ramen']\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key of the array to uniq\n ",
              "start": 24801,
              "end": 25533,
              "loc": {
                "start": {
                  "line": 764,
                  "column": 0
                },
                "end": {
                  "line": 784,
                  "column": 3
                }
              }
            }
          ]
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.union](http://emberjs.com/api/classes/Ember.computed.html#method_union)\n *\n * Alias for [union](http://emberjs.com/api/classes/Ember.computed.html#method_uniq).\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { union } from 'ember-decorators/object/computed';\n *\n * export default class LikesAndFoodsComponent extends Component {\n *   likes = A([ 'tacos', 'puppies', 'pizza' ]);\n *   foods = A(['tacos', 'pizza', 'ramen']);\n *\n *   @union('likes', 'foods') favorites; // ['tacos', 'puppies', 'pizza', 'ramen']\n * }\n * ```\n *\n * @function\n * @param {...String} dependentKeys - Keys of the arrays to union\n ",
            "start": 24004,
            "end": 24719,
            "loc": {
              "start": {
                "line": 741,
                "column": 0
              },
              "end": {
                "line": 761,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.uniq](http://emberjs.com/api/classes/Ember.computed.html#method_uniq)\n *\n * A computed property which returns a new array with all the unique elements from one or more dependent arrays.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { uniq } from 'ember-decorators/object/computed';\n *\n * export default class FavoriteThingsComponent extends Component {\n *   likes = A([ 'tacos', 'puppies', 'pizza' ]);\n *   foods = A(['tacos', 'pizza', 'ramen']);\n *\n *   @uniq('likes', 'foods') favorites; // ['tacos', 'puppies', 'pizza', 'ramen']\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key of the array to uniq\n ",
            "start": 24801,
            "end": 25533,
            "loc": {
              "start": {
                "line": 764,
                "column": 0
              },
              "end": {
                "line": 784,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 25534,
        "end": 25611,
        "loc": {
          "start": {
            "line": 785,
            "column": 0
          },
          "end": {
            "line": 785,
            "column": 77
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "VariableDeclaration",
          "start": 25541,
          "end": 25611,
          "loc": {
            "start": {
              "line": 785,
              "column": 7
            },
            "end": {
              "line": 785,
              "column": 77
            }
          },
          "declarations": [
            {
              "type": "VariableDeclarator",
              "start": 25547,
              "end": 25610,
              "loc": {
                "start": {
                  "line": 785,
                  "column": 13
                },
                "end": {
                  "line": 785,
                  "column": 76
                }
              },
              "id": {
                "type": "Identifier",
                "start": 25547,
                "end": 25551,
                "loc": {
                  "start": {
                    "line": 785,
                    "column": 13
                  },
                  "end": {
                    "line": 785,
                    "column": 17
                  },
                  "identifierName": "uniq"
                },
                "name": "uniq",
                "leadingComments": null
              },
              "init": {
                "type": "CallExpression",
                "start": 25554,
                "end": 25610,
                "loc": {
                  "start": {
                    "line": 785,
                    "column": 20
                  },
                  "end": {
                    "line": 785,
                    "column": 76
                  }
                },
                "callee": {
                  "type": "Identifier",
                  "start": 25554,
                  "end": 25589,
                  "loc": {
                    "start": {
                      "line": 785,
                      "column": 20
                    },
                    "end": {
                      "line": 785,
                      "column": 55
                    },
                    "identifierName": "decoratedPropertyWithRequiredParams"
                  },
                  "name": "decoratedPropertyWithRequiredParams"
                },
                "arguments": [
                  {
                    "type": "MemberExpression",
                    "start": 25590,
                    "end": 25609,
                    "loc": {
                      "start": {
                        "line": 785,
                        "column": 56
                      },
                      "end": {
                        "line": 785,
                        "column": 75
                      }
                    },
                    "object": {
                      "type": "MemberExpression",
                      "start": 25590,
                      "end": 25604,
                      "loc": {
                        "start": {
                          "line": 785,
                          "column": 56
                        },
                        "end": {
                          "line": 785,
                          "column": 70
                        }
                      },
                      "object": {
                        "type": "Identifier",
                        "start": 25590,
                        "end": 25595,
                        "loc": {
                          "start": {
                            "line": 785,
                            "column": 56
                          },
                          "end": {
                            "line": 785,
                            "column": 61
                          },
                          "identifierName": "Ember"
                        },
                        "name": "Ember"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 25596,
                        "end": 25604,
                        "loc": {
                          "start": {
                            "line": 785,
                            "column": 62
                          },
                          "end": {
                            "line": 785,
                            "column": 70
                          },
                          "identifierName": "computed"
                        },
                        "name": "computed"
                      },
                      "computed": false
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 25605,
                      "end": 25609,
                      "loc": {
                        "start": {
                          "line": 785,
                          "column": 71
                        },
                        "end": {
                          "line": 785,
                          "column": 75
                        },
                        "identifierName": "uniq"
                      },
                      "name": "uniq"
                    },
                    "computed": false
                  }
                ]
              },
              "leadingComments": null
            }
          ],
          "kind": "const",
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.uniq](http://emberjs.com/api/classes/Ember.computed.html#method_uniq)\n *\n * A computed property which returns a new array with all the unique elements from one or more dependent arrays.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { uniq } from 'ember-decorators/object/computed';\n *\n * export default class FavoriteThingsComponent extends Component {\n *   likes = A([ 'tacos', 'puppies', 'pizza' ]);\n *   foods = A(['tacos', 'pizza', 'ramen']);\n *\n *   @uniq('likes', 'foods') favorites; // ['tacos', 'puppies', 'pizza', 'ramen']\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key of the array to uniq\n ",
              "start": 24801,
              "end": 25533,
              "loc": {
                "start": {
                  "line": 764,
                  "column": 0
                },
                "end": {
                  "line": 784,
                  "column": 3
                }
              }
            }
          ],
          "trailingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.uniqBy](http://emberjs.com/api/classes/Ember.computed.html#method_uniqBy)\n *\n * A computed property which returns a new array with all the unique elements\n * from an array, with uniqueness determined by a specific key.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { uniqBy } from 'ember-decorators/object/computed';\n *\n * export default class FruitBowlComponent extends Component {\n *   fruits = A([\n *     { name: 'banana', color: 'yellow' },\n *     { name: 'apple',  color: 'red' },\n *     { name: 'kiwi',   color: 'brown' },\n *     { name: 'cherry', color: 'red' },\n *     { name: 'lemon',  color: 'yellow' }\n *   ]);\n *\n *   @uniqBy('fruits', 'color') oneOfEachColor;\n *   // [\n *   //  { name: 'banana', color: 'yellow'},\n *   //  { name: 'apple',  color: 'red'},\n *   //  { name: 'kiwi',   color: 'brown'}\n *   // ]\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key of the array to uniq\n * @param {String} propertyKey - Key of the property on the objects of the array to determine uniqueness by\n ",
              "start": 25613,
              "end": 26744,
              "loc": {
                "start": {
                  "line": 787,
                  "column": 0
                },
                "end": {
                  "line": 819,
                  "column": 3
                }
              }
            }
          ]
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.uniq](http://emberjs.com/api/classes/Ember.computed.html#method_uniq)\n *\n * A computed property which returns a new array with all the unique elements from one or more dependent arrays.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { uniq } from 'ember-decorators/object/computed';\n *\n * export default class FavoriteThingsComponent extends Component {\n *   likes = A([ 'tacos', 'puppies', 'pizza' ]);\n *   foods = A(['tacos', 'pizza', 'ramen']);\n *\n *   @uniq('likes', 'foods') favorites; // ['tacos', 'puppies', 'pizza', 'ramen']\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key of the array to uniq\n ",
            "start": 24801,
            "end": 25533,
            "loc": {
              "start": {
                "line": 764,
                "column": 0
              },
              "end": {
                "line": 784,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.uniqBy](http://emberjs.com/api/classes/Ember.computed.html#method_uniqBy)\n *\n * A computed property which returns a new array with all the unique elements\n * from an array, with uniqueness determined by a specific key.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { uniqBy } from 'ember-decorators/object/computed';\n *\n * export default class FruitBowlComponent extends Component {\n *   fruits = A([\n *     { name: 'banana', color: 'yellow' },\n *     { name: 'apple',  color: 'red' },\n *     { name: 'kiwi',   color: 'brown' },\n *     { name: 'cherry', color: 'red' },\n *     { name: 'lemon',  color: 'yellow' }\n *   ]);\n *\n *   @uniqBy('fruits', 'color') oneOfEachColor;\n *   // [\n *   //  { name: 'banana', color: 'yellow'},\n *   //  { name: 'apple',  color: 'red'},\n *   //  { name: 'kiwi',   color: 'brown'}\n *   // ]\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key of the array to uniq\n * @param {String} propertyKey - Key of the property on the objects of the array to determine uniqueness by\n ",
            "start": 25613,
            "end": 26744,
            "loc": {
              "start": {
                "line": 787,
                "column": 0
              },
              "end": {
                "line": 819,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 26745,
        "end": 26947,
        "loc": {
          "start": {
            "line": 820,
            "column": 0
          },
          "end": {
            "line": 824,
            "column": 4
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "VariableDeclaration",
          "start": 26752,
          "end": 26947,
          "loc": {
            "start": {
              "line": 820,
              "column": 7
            },
            "end": {
              "line": 824,
              "column": 4
            }
          },
          "declarations": [
            {
              "type": "VariableDeclarator",
              "start": 26758,
              "end": 26946,
              "loc": {
                "start": {
                  "line": 820,
                  "column": 13
                },
                "end": {
                  "line": 824,
                  "column": 3
                }
              },
              "id": {
                "type": "Identifier",
                "start": 26758,
                "end": 26764,
                "loc": {
                  "start": {
                    "line": 820,
                    "column": 13
                  },
                  "end": {
                    "line": 820,
                    "column": 19
                  },
                  "identifierName": "uniqBy"
                },
                "name": "uniqBy",
                "leadingComments": null
              },
              "init": {
                "type": "ConditionalExpression",
                "start": 26767,
                "end": 26946,
                "loc": {
                  "start": {
                    "line": 820,
                    "column": 22
                  },
                  "end": {
                    "line": 824,
                    "column": 3
                  }
                },
                "test": {
                  "type": "Identifier",
                  "start": 26767,
                  "end": 26792,
                  "loc": {
                    "start": {
                      "line": 820,
                      "column": 22
                    },
                    "end": {
                      "line": 820,
                      "column": 47
                    },
                    "identifierName": "SUPPORTS_UNIQ_BY_COMPUTED"
                  },
                  "name": "SUPPORTS_UNIQ_BY_COMPUTED"
                },
                "consequent": {
                  "type": "CallExpression",
                  "start": 26797,
                  "end": 26855,
                  "loc": {
                    "start": {
                      "line": 821,
                      "column": 2
                    },
                    "end": {
                      "line": 821,
                      "column": 60
                    }
                  },
                  "callee": {
                    "type": "Identifier",
                    "start": 26797,
                    "end": 26832,
                    "loc": {
                      "start": {
                        "line": 821,
                        "column": 2
                      },
                      "end": {
                        "line": 821,
                        "column": 37
                      },
                      "identifierName": "decoratedPropertyWithRequiredParams"
                    },
                    "name": "decoratedPropertyWithRequiredParams"
                  },
                  "arguments": [
                    {
                      "type": "MemberExpression",
                      "start": 26833,
                      "end": 26854,
                      "loc": {
                        "start": {
                          "line": 821,
                          "column": 38
                        },
                        "end": {
                          "line": 821,
                          "column": 59
                        }
                      },
                      "object": {
                        "type": "MemberExpression",
                        "start": 26833,
                        "end": 26847,
                        "loc": {
                          "start": {
                            "line": 821,
                            "column": 38
                          },
                          "end": {
                            "line": 821,
                            "column": 52
                          }
                        },
                        "object": {
                          "type": "Identifier",
                          "start": 26833,
                          "end": 26838,
                          "loc": {
                            "start": {
                              "line": 821,
                              "column": 38
                            },
                            "end": {
                              "line": 821,
                              "column": 43
                            },
                            "identifierName": "Ember"
                          },
                          "name": "Ember"
                        },
                        "property": {
                          "type": "Identifier",
                          "start": 26839,
                          "end": 26847,
                          "loc": {
                            "start": {
                              "line": 821,
                              "column": 44
                            },
                            "end": {
                              "line": 821,
                              "column": 52
                            },
                            "identifierName": "computed"
                          },
                          "name": "computed"
                        },
                        "computed": false
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 26848,
                        "end": 26854,
                        "loc": {
                          "start": {
                            "line": 821,
                            "column": 53
                          },
                          "end": {
                            "line": 821,
                            "column": 59
                          },
                          "identifierName": "uniqBy"
                        },
                        "name": "uniqBy"
                      },
                      "computed": false
                    }
                  ]
                },
                "alternate": {
                  "type": "ArrowFunctionExpression",
                  "start": 26860,
                  "end": 26946,
                  "loc": {
                    "start": {
                      "line": 822,
                      "column": 2
                    },
                    "end": {
                      "line": 824,
                      "column": 3
                    }
                  },
                  "id": null,
                  "generator": false,
                  "expression": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "BlockStatement",
                    "start": 26866,
                    "end": 26946,
                    "loc": {
                      "start": {
                        "line": 822,
                        "column": 8
                      },
                      "end": {
                        "line": 824,
                        "column": 3
                      }
                    },
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "start": 26872,
                        "end": 26942,
                        "loc": {
                          "start": {
                            "line": 823,
                            "column": 4
                          },
                          "end": {
                            "line": 823,
                            "column": 74
                          }
                        },
                        "expression": {
                          "type": "CallExpression",
                          "start": 26872,
                          "end": 26941,
                          "loc": {
                            "start": {
                              "line": 823,
                              "column": 4
                            },
                            "end": {
                              "line": 823,
                              "column": 73
                            }
                          },
                          "callee": {
                            "type": "Identifier",
                            "start": 26872,
                            "end": 26878,
                            "loc": {
                              "start": {
                                "line": 823,
                                "column": 4
                              },
                              "end": {
                                "line": 823,
                                "column": 10
                              },
                              "identifierName": "assert"
                            },
                            "name": "assert"
                          },
                          "arguments": [
                            {
                              "type": "StringLiteral",
                              "start": 26879,
                              "end": 26933,
                              "loc": {
                                "start": {
                                  "line": 823,
                                  "column": 11
                                },
                                "end": {
                                  "line": 823,
                                  "column": 65
                                }
                              },
                              "extra": {
                                "rawValue": "uniqBy is only available from Ember.js v2.7 onwards.",
                                "raw": "'uniqBy is only available from Ember.js v2.7 onwards.'"
                              },
                              "value": "uniqBy is only available from Ember.js v2.7 onwards."
                            },
                            {
                              "type": "BooleanLiteral",
                              "start": 26935,
                              "end": 26940,
                              "loc": {
                                "start": {
                                  "line": 823,
                                  "column": 67
                                },
                                "end": {
                                  "line": 823,
                                  "column": 72
                                }
                              },
                              "value": false
                            }
                          ]
                        }
                      }
                    ],
                    "directives": []
                  }
                }
              },
              "leadingComments": null
            }
          ],
          "kind": "const",
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.uniqBy](http://emberjs.com/api/classes/Ember.computed.html#method_uniqBy)\n *\n * A computed property which returns a new array with all the unique elements\n * from an array, with uniqueness determined by a specific key.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { uniqBy } from 'ember-decorators/object/computed';\n *\n * export default class FruitBowlComponent extends Component {\n *   fruits = A([\n *     { name: 'banana', color: 'yellow' },\n *     { name: 'apple',  color: 'red' },\n *     { name: 'kiwi',   color: 'brown' },\n *     { name: 'cherry', color: 'red' },\n *     { name: 'lemon',  color: 'yellow' }\n *   ]);\n *\n *   @uniqBy('fruits', 'color') oneOfEachColor;\n *   // [\n *   //  { name: 'banana', color: 'yellow'},\n *   //  { name: 'apple',  color: 'red'},\n *   //  { name: 'kiwi',   color: 'brown'}\n *   // ]\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key of the array to uniq\n * @param {String} propertyKey - Key of the property on the objects of the array to determine uniqueness by\n ",
              "start": 25613,
              "end": 26744,
              "loc": {
                "start": {
                  "line": 787,
                  "column": 0
                },
                "end": {
                  "line": 819,
                  "column": 3
                }
              }
            }
          ],
          "trailingComments": []
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.uniqBy](http://emberjs.com/api/classes/Ember.computed.html#method_uniqBy)\n *\n * A computed property which returns a new array with all the unique elements\n * from an array, with uniqueness determined by a specific key.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { uniqBy } from 'ember-decorators/object/computed';\n *\n * export default class FruitBowlComponent extends Component {\n *   fruits = A([\n *     { name: 'banana', color: 'yellow' },\n *     { name: 'apple',  color: 'red' },\n *     { name: 'kiwi',   color: 'brown' },\n *     { name: 'cherry', color: 'red' },\n *     { name: 'lemon',  color: 'yellow' }\n *   ]);\n *\n *   @uniqBy('fruits', 'color') oneOfEachColor;\n *   // [\n *   //  { name: 'banana', color: 'yellow'},\n *   //  { name: 'apple',  color: 'red'},\n *   //  { name: 'kiwi',   color: 'brown'}\n *   // ]\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key of the array to uniq\n * @param {String} propertyKey - Key of the property on the objects of the array to determine uniqueness by\n ",
            "start": 25613,
            "end": 26744,
            "loc": {
              "start": {
                "line": 787,
                "column": 0
              },
              "end": {
                "line": 819,
                "column": 3
              }
            }
          }
        ]
      }
    ],
    "directives": []
  },
  "comments": [
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.alias](http://emberjs.com/api/classes/Ember.computed.html#method_alias)\n *\n * Creates a new property that is an alias for another property on an object.\n * Calls to get or set this property behave as though they were called on\n * the original property.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { alias } from 'ember-decorators/object/computed';\n *\n * export default class UserProfileComponent extends Component {\n *   person = {\n *     first: 'Joe'\n *   };\n *\n *   @alias('person.first') firstName;\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the aliased property\n ",
      "start": 316,
      "end": 987,
      "loc": {
        "start": {
          "line": 13,
          "column": 0
        },
        "end": {
          "line": 35,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.and](http://emberjs.com/api/classes/Ember.computed.html#method_and)\n *\n * A computed property that performs a logical and on the original values\n * for the provided dependent properties.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { and } from 'ember-decorators/object/computed';\n *\n * export default class UserProfileComponent extends Component {\n *   person = {\n *     first: 'Joe'\n *   };\n *\n *   @and('person.{first,last}') hasFullName; // false\n * }\n * ```\n *\n * @function\n * @param {...String} dependentKeys - Keys for properties to `and`\n ",
      "start": 1069,
      "end": 1692,
      "loc": {
        "start": {
          "line": 38,
          "column": 0
        },
        "end": {
          "line": 59,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.bool](http://emberjs.com/api/classes/Ember.computed.html#method_bool)\n *\n * A computed property that converts the provided dependent property into a\n * boolean value.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { bool } from 'ember-decorators/object/computed';\n *\n * export default class MessagesNotificationComponent extends Component {\n *   messageCount = 1;\n *\n *   @bool('messageCount') hasMessages; // true\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to convert\n ",
      "start": 1770,
      "end": 2354,
      "loc": {
        "start": {
          "line": 62,
          "column": 0
        },
        "end": {
          "line": 81,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.collect](http://emberjs.com/api/classes/Ember.computed.html#method_collect)\n *\n * A computed property that returns the array of values for the provided\n * dependent properties.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { collect } from 'ember-decorators/object/computed';\n *\n * export default class CameraEquipmentComponent extends Component {\n *   light = 'strobe';\n *   lens = '35mm prime';\n *\n *   @collect('light', 'lens') equipment; // ['strobe', '35mm prime']\n * }\n * ```\n *\n * @function\n * @param {...String} dependentKeys - Keys for the properties to collect\n ",
      "start": 2434,
      "end": 3081,
      "loc": {
        "start": {
          "line": 84,
          "column": 0
        },
        "end": {
          "line": 104,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.deprecatingAlias](http://emberjs.com/api/classes/Ember.computed.html#method_deprecatingAlias)\n *\n * Creates a new property that is an alias for another property on an object.\n * Calls to get or set this property behave as though they were called on\n * the original property, but will also trigger a deprecation warning.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { deprecatingAlias } from 'ember-decorators/object/computed';\n *\n * export default class UserProfileComponent extends {\n *   person = {\n *     first: 'Joe'\n *   };\n *\n *   @deprecatingAlias('person.first', {\n *     id: 'user-profile.firstName',\n *     until: '3.0.0',\n *     url: 'https://example.com/deprecations/user-profile.firstName'\n *   }) firstName;\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to alias\n * @param {Object} options\n ",
      "start": 3167,
      "end": 4085,
      "loc": {
        "start": {
          "line": 107,
          "column": 0
        },
        "end": {
          "line": 134,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.empty](http://emberjs.com/api/classes/Ember.computed.html#method_empty)\n *\n * A computed property that returns `true` if the value of the dependent\n * property is null, an empty string, empty array, or empty function.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { empty } from 'ember-decorators/object/computed';\n *\n * export default class FoodItemsComponent extends Component {\n *   items = A(['taco', 'burrito']);\n *\n *   @empty('items') isEmpty; // false\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key of the property to check emptiness of\n ",
      "start": 4189,
      "end": 4866,
      "loc": {
        "start": {
          "line": 137,
          "column": 0
        },
        "end": {
          "line": 157,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.equal](http://emberjs.com/api/classes/Ember.computed.html#method_equal)\n *\n * A computed property that returns true if the dependent properties are equal.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { equal } from 'ember-decorators/object/computed';\n *\n * export default class NapTimeComponent extends Component {\n *   state = 'sleepy';\n *\n *   @equal('state', 'sleepy') napTime; // true\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to check\n * @param {Any} value - Value to compare the dependent property to\n ",
      "start": 4948,
      "end": 5573,
      "loc": {
        "start": {
          "line": 160,
          "column": 0
        },
        "end": {
          "line": 179,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.filter](http://emberjs.com/api/classes/Ember.computed.html#method_filter)\n *\n * Filters the items in the array by the provided callback.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { filter } from 'ember-decorators/object/computed';\n *\n * export default class ChoresListComponent extends Component {\n *   chores = A([\n *     { name: 'cook', done: true },\n *     { name: 'clean', done: true },\n *     { name: 'write more unit tests', done: false }\n *   ]);\n *\n *   @filter('chores')\n *   remainingChores(chore, index, array) {\n *     return !chore.done;\n *   } // [{name: 'write more unit tests', done: false}]\n *\n *   // alternative syntax:\n *\n *   @filter('chores', function(chore, index, array) {\n *     return !chore.done;\n *   }) remainingChores; // [{name: 'write more unit tests', done: false}]\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the array to filter\n * @param {Function(item: Any, index: Number, array: Array<Any>): Boolean} callback - The function to filter with\n ",
      "start": 5655,
      "end": 6775,
      "loc": {
        "start": {
          "line": 182,
          "column": 0
        },
        "end": {
          "line": 215,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.filterBy](http://emberjs.com/api/classes/Ember.computed.html#method_filterBy)\n *\n * Filters the array by the property and value.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { filterBy } from 'ember-decorators/object/computed';\n *\n * export default class ChoresListComponent extends Component {\n *   chores = A([\n *     { name: 'cook', done: true },\n *     { name: 'clean', done: true },\n *     { name: 'write more unit tests', done: false }\n *   ]);\n *\n *   @filterBy('chores', 'done', false) remainingChores; // [{name: 'write more unit tests', done: false}]\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the array to filter\n * @param {String} propertyKey - Property of the array items to filter by\n * @param {Any} value - Value to filter by\n ",
      "start": 6861,
      "end": 7743,
      "loc": {
        "start": {
          "line": 218,
          "column": 0
        },
        "end": {
          "line": 243,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.gt](http://emberjs.com/api/classes/Ember.computed.html#method_gt)\n *\n * A computed property that returns `true` if the provided dependent property\n * is greater than the provided value.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { gt } from 'ember-decorators/object/computed';\n *\n * export default class CatPartyComponent extends Component {\n *   totalCats = 11;\n *\n *   @gt('totalCats', 10) isCatParty; // true\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to compare\n * @param {Number} value - Value to compare against\n ",
      "start": 7831,
      "end": 8468,
      "loc": {
        "start": {
          "line": 246,
          "column": 0
        },
        "end": {
          "line": 266,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.gte](http://emberjs.com/api/classes/Ember.computed.html#method_gte)\n *\n * A computed property that returns `true` if the provided dependent property\n * is greater than or equal to the provided value.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { gte } from 'ember-decorators/object/computed';\n *\n * export default class PlayerListComponent extends Component {\n *   totalPlayers = 14;\n *\n *   @gte('totalPlayers', 14) hasEnoughPlayers; // true\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to compare\n * @param {Number} value - Value to compare against\n ",
      "start": 8544,
      "end": 9211,
      "loc": {
        "start": {
          "line": 269,
          "column": 0
        },
        "end": {
          "line": 289,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.intersect](http://emberjs.com/api/classes/Ember.computed.html#method_intersect)\n *\n * A computed property which returns a new array with all the duplicated\n * elements from two or more dependent arrays.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { intersect } from 'ember-decorators/object/computed';\n *\n * export default class FoodListComponent extends Component {\n *   likes = A([ 'tacos', 'puppies', 'pizza' ]);\n *   foods = A(['tacos', 'pizza']);\n *\n *   @intersect('likes', 'foods') favoriteFoods; // ['tacos', 'pizza']\n * }\n * ```\n *\n * @function\n * @param {...String} dependentKeys - Keys of the arrays to intersect\n ",
      "start": 9289,
      "end": 10028,
      "loc": {
        "start": {
          "line": 292,
          "column": 0
        },
        "end": {
          "line": 313,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.lt](http://emberjs.com/api/classes/Ember.computed.html#method_lt)\n *\n * A computed property that returns `true` if the provided dependent property\n * is less than the provided value.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { lt } from 'ember-decorators/object/computed';\n *\n * export default class DogPartyComponent extends Component {\n *   totalDogs = 3;\n *\n *   @lt('totalDogs', 10) isDogParty; // true\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to compare\n * @param {Number} value - Value to compare against\n ",
      "start": 10118,
      "end": 10751,
      "loc": {
        "start": {
          "line": 316,
          "column": 0
        },
        "end": {
          "line": 336,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.lte](http://emberjs.com/api/classes/Ember.computed.html#method_lte)\n *\n * A computed property that returns `true` if the provided dependent property\n * is less than or equal to the provided value.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { lte } from 'ember-decorators/object/computed';\n *\n * export default class PlayerListComponent extends Component {\n *   totalPlayers = 14;\n *\n *   @lte('totalPlayers', 14) hasEnoughPlayers; // true\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to compare\n * @param {Number} value - Value to compare against\n ",
      "start": 10827,
      "end": 11491,
      "loc": {
        "start": {
          "line": 339,
          "column": 0
        },
        "end": {
          "line": 359,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.map](http://emberjs.com/api/classes/Ember.computed.html#method_map)\n *\n * Returns an array mapped via the callback\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { map } from 'ember-decorators/object/computed';\n *\n * export default class ChoresListComponent extends Component {\n *   chores = A(['clean', 'write more unit tests']);\n *\n *   @map('chores')\n *   loudChores(chore, index) {\n *     return chore.toUpperCase() + '!';\n *   } // ['CLEAN!', 'WRITE MORE UNIT TESTS!']\n *\n *   // alternative syntax:\n *\n *   @map('chores', function(chore, index) {\n *     return chore.toUpperCase() + '!';\n *   }) loudChores; // ['CLEAN!', 'WRITE MORE UNIT TESTS!']\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the array to map over\n * @param {Function(item: Any, index: Number): Any} callback - Function to map over the array\n ",
      "start": 11569,
      "end": 12521,
      "loc": {
        "start": {
          "line": 362,
          "column": 0
        },
        "end": {
          "line": 391,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.mapBy](http://emberjs.com/api/classes/Ember.computed.html#method_mapBy)\n *\n * Returns an array mapped to the specified key.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { mapBy } from 'ember-decorators/object/computed';\n *\n * export default class PeopleListComponent extends Component {\n *   people = A([\n *     {name: \"George\", age: 5},\n *     {name: \"Stella\", age: 10},\n *     {name: \"Violet\", age: 7}\n *   ]);\n *\n *   @mapBy('people', 'age') ages; // [5, 10, 7]\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the array to map over\n * @param {String} propertyKey - Property of the array items to map by\n ",
      "start": 12601,
      "end": 13343,
      "loc": {
        "start": {
          "line": 394,
          "column": 0
        },
        "end": {
          "line": 418,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.match](http://emberjs.com/api/classes/Ember.computed.html#method_match)\n *\n * A computed property which matches the original value for the dependent\n * property against a given RegExp, returning `true` if they values matches\n * the RegExp and `false` if it does not.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { match } from 'ember-decorators/object/computed';\n *\n * export default class IsEmailValidComponent extends Component {\n *   email = 'tomster@emberjs.com';\n *\n *   @match('email', /^.+@.+\\..+$/) validEmail;\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - The property to match\n * @param {RegExp} pattern - The pattern to match against\n ",
      "start": 13425,
      "end": 14163,
      "loc": {
        "start": {
          "line": 421,
          "column": 0
        },
        "end": {
          "line": 442,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.max](http://emberjs.com/api/classes/Ember.computed.html#method_max)\n *\n * A computed property that calculates the maximum value in the dependent\n * array. This will return `-Infinity` when the dependent array is empty.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { max } from 'ember-decorators/object/computed';\n *\n * export default class MaxValueComponent extends Component {\n *   values = A([1, 2, 5, 10]);\n *\n *   @max('values') maxValue; // 10\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the array to find the max value of\n ",
      "start": 14245,
      "end": 14913,
      "loc": {
        "start": {
          "line": 445,
          "column": 0
        },
        "end": {
          "line": 465,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.min](http://emberjs.com/api/classes/Ember.computed.html#method_min)\n *\n * A computed property that calculates the minimum value in the dependent\n * array. This will return `Infinity` when the dependent array is empty.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { min } from 'ember-decorators/object/computed';\n *\n * export default class MinValueComponent extends Component {\n *   values = A([1, 2, 5, 10]);\n *\n *   @min('values') minValue; // 1\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the array to find the max value of\n ",
      "start": 14991,
      "end": 15657,
      "loc": {
        "start": {
          "line": 468,
          "column": 0
        },
        "end": {
          "line": 488,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.none](http://emberjs.com/api/classes/Ember.computed.html#method_none)\n *\n * A computed property that returns true if the value of the dependent property\n * is null or undefined. This avoids errors from JSLint complaining about use\n * of `==`, which can be technically confusing.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { none } from 'ember-decorators/object/computed';\n *\n * export default class NameDisplayComponent extends Component {\n *   firstName = null;\n *\n *   @none('firstName') isNameless; // true unless firstName is defined\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to check\n ",
      "start": 15735,
      "end": 16444,
      "loc": {
        "start": {
          "line": 491,
          "column": 0
        },
        "end": {
          "line": 511,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.not](http://emberjs.com/api/classes/Ember.computed.html#method_not)\n *\n * A computed property that returns the inverse boolean value of the original\n * value for the dependent property.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { not } from 'ember-decorators/object/computed';\n *\n * export default class UserInfoComponent extends Component {\n *   loggedIn = false;\n *\n *   @not('loggedIn') isAnonymous; // true\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to `not`\n ",
      "start": 16524,
      "end": 17107,
      "loc": {
        "start": {
          "line": 514,
          "column": 0
        },
        "end": {
          "line": 533,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.notEmpty](http://emberjs.com/api/classes/Ember.computed.html#method_notEmpty)\n *\n * A computed property that returns `true` if the value of the dependent\n * property is NOT null, an empty string, empty array, or empty function.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { notEmpty } from 'ember-decorators/object/computed';\n *\n * export default class GroceryBagComponent extends Component {\n *   groceryBag = A(['milk', 'eggs', 'apples']);\n *\n *   @notEmpty('groceryBag') hasGroceriesToPutAway; // true\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to check\n ",
      "start": 17185,
      "end": 17897,
      "loc": {
        "start": {
          "line": 536,
          "column": 0
        },
        "end": {
          "line": 556,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.oneWay](http://emberjs.com/api/classes/Ember.computed.html#method_oneWay)\n *\n * Where `computed.alias` aliases `get` and `set`, and allows for bidirectional\n * data flow, `computed.oneWay` only provides an aliased `get`. The `set` will\n * not mutate the upstream property, rather causes the current property to\n * become the value set. This causes the downstream property to permanently\n * diverge from the upstream property.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { oneWay } from 'ember-decorators/object/computed';\n *\n * export default class UserProfileComponent extends Component {\n *   firstName = 'Joe';\n *\n *   @oneWay('firstName') originalName; // will always be 'Joe'\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to alias\n ",
      "start": 17985,
      "end": 18836,
      "loc": {
        "start": {
          "line": 559,
          "column": 0
        },
        "end": {
          "line": 581,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.or](http://emberjs.com/api/classes/Ember.computed.html#method_or)\n *\n * A computed property which performs a logical or on the original values for\n * the provided dependent properties.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { or } from 'ember-decorators/object/computed';\n *\n * export default class OutfitFeaturesComponent extends Component {\n *   hasJacket = true;\n *   hasUmbrella = false;\n *\n *   @or('hasJacket', 'hasUmbrella') isReadyForRain; // true\n * }\n * ```\n *\n * @function\n * @param {...String} dependentKey - Key for the properties to `or`\n ",
      "start": 18920,
      "end": 19555,
      "loc": {
        "start": {
          "line": 584,
          "column": 0
        },
        "end": {
          "line": 604,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.reads](http://emberjs.com/api/classes/Ember.computed.html#method_reads)\n *\n * This is a more semantically meaningful alias of `computed.oneWay`, whose\n * name is somewhat ambiguous as to which direction the data flows.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { reads } from 'ember-decorators/object/computed';\n *\n * export default class UserProfileComponent extends Component {\n *   first = 'Tomster';\n *\n *   @reads('first') firstName;\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to read\n ",
      "start": 19631,
      "end": 20278,
      "loc": {
        "start": {
          "line": 607,
          "column": 0
        },
        "end": {
          "line": 627,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.setDiff](http://emberjs.com/api/classes/Ember.computed.html#method_setDiff)\n *\n * A computed property which returns a new array with all the properties from\n * the first dependent array that are not in the second dependent array.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { setDiff } from 'ember-decorators/object/computed';\n *\n * export default class FavoriteThingsComponent extends Component {\n *   likes = A([ 'tacos', 'puppies', 'pizza' ]);\n *   foods = A(['tacos', 'pizza']);\n *\n *   @setDiff('likes', 'foods') favoriteThingsThatArentFood; // ['puppies']\n * }\n * ```\n *\n * @function\n * @param {String} setAProperty - Keys for the first set\n * @param {String} setBProperty - Keys for the first set\n ",
      "start": 20360,
      "end": 21179,
      "loc": {
        "start": {
          "line": 630,
          "column": 0
        },
        "end": {
          "line": 652,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.sort](http://emberjs.com/api/classes/Ember.computed.html#method_sort)\n *\n * A computed property which returns a new array with all the properties from\n * the first dependent array sorted based on a property or sort function.\n *\n *\n * The callback method you provide should have the following signature:\n *\n * ```javascript\n * function(itemA, itemB);\n * ```\n * - `itemA` the first item to compare.\n * - `itemB` the second item to compare.\n *\n * This function should return negative number (e.g. `-1`) when `itemA` should\n * come before `itemB`. It should return positive number (e.g. `1`) when\n * `itemA` should come after `itemB`. If the `itemA` and `itemB` are equal this\n * function should return `0`.\n *\n * Therefore, if this function is comparing some numeric values, simple\n * `itemA - itemB` or `itemA.get( 'foo' ) - itemB.get( 'foo' )` can be used\n * instead of series of `if`.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { sort } from 'ember-decorators/object/computed';\n *\n * export default class SortNamesComponent extends Component {\n *   names = A([{name:'Link'},{name:'Zelda'},{name:'Ganon'},{name:'Navi'}]);\n *\n *   @sort('names')\n *   sortedNames(a, b){\n *     if (a.name > b.name) {\n *       return 1;\n *     } else if (a.name < b.name) {\n *       return -1;\n *     }\n *\n *     return 0;\n *   } // [{name:'Ganon'},{name:'Link'},{name:'Navi'},{name:'Zelda'}]\n *\n *   // alternative syntax:\n *\n *   @sort('names', function(a, b){\n *     if (a.name > b.name) {\n *       return 1;\n *     } else if (a.name < b.name) {\n *       return -1;\n *     }\n *\n *     return 0;\n *   }) sortedNames; // [{name:'Ganon'},{name:'Link'},{name:'Navi'},{name:'Zelda'}]\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - The key for the array that should be sorted\n * @param {Array<String>|Function(Any, Any): Number} sortDefinition - Sorting function or sort descriptor\n ",
      "start": 21265,
      "end": 23255,
      "loc": {
        "start": {
          "line": 655,
          "column": 0
        },
        "end": {
          "line": 715,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.sum](http://emberjs.com/api/classes/Ember.computed.html#method_sum)\n *\n * A computed property that returns the sum of the value in the dependent\n * array.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { sum } from 'ember-decorators/object/computed';\n *\n * export default class SumValuesComponent extends Component {\n *   values = A([1, 2, 3]);\n *\n *   @sum('values') total; // 6\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key of the array to sum up\n ",
      "start": 23345,
      "end": 23926,
      "loc": {
        "start": {
          "line": 718,
          "column": 0
        },
        "end": {
          "line": 738,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.union](http://emberjs.com/api/classes/Ember.computed.html#method_union)\n *\n * Alias for [union](http://emberjs.com/api/classes/Ember.computed.html#method_uniq).\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { union } from 'ember-decorators/object/computed';\n *\n * export default class LikesAndFoodsComponent extends Component {\n *   likes = A([ 'tacos', 'puppies', 'pizza' ]);\n *   foods = A(['tacos', 'pizza', 'ramen']);\n *\n *   @union('likes', 'foods') favorites; // ['tacos', 'puppies', 'pizza', 'ramen']\n * }\n * ```\n *\n * @function\n * @param {...String} dependentKeys - Keys of the arrays to union\n ",
      "start": 24004,
      "end": 24719,
      "loc": {
        "start": {
          "line": 741,
          "column": 0
        },
        "end": {
          "line": 761,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.uniq](http://emberjs.com/api/classes/Ember.computed.html#method_uniq)\n *\n * A computed property which returns a new array with all the unique elements from one or more dependent arrays.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { uniq } from 'ember-decorators/object/computed';\n *\n * export default class FavoriteThingsComponent extends Component {\n *   likes = A([ 'tacos', 'puppies', 'pizza' ]);\n *   foods = A(['tacos', 'pizza', 'ramen']);\n *\n *   @uniq('likes', 'foods') favorites; // ['tacos', 'puppies', 'pizza', 'ramen']\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key of the array to uniq\n ",
      "start": 24801,
      "end": 25533,
      "loc": {
        "start": {
          "line": 764,
          "column": 0
        },
        "end": {
          "line": 784,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.uniqBy](http://emberjs.com/api/classes/Ember.computed.html#method_uniqBy)\n *\n * A computed property which returns a new array with all the unique elements\n * from an array, with uniqueness determined by a specific key.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { uniqBy } from 'ember-decorators/object/computed';\n *\n * export default class FruitBowlComponent extends Component {\n *   fruits = A([\n *     { name: 'banana', color: 'yellow' },\n *     { name: 'apple',  color: 'red' },\n *     { name: 'kiwi',   color: 'brown' },\n *     { name: 'cherry', color: 'red' },\n *     { name: 'lemon',  color: 'yellow' }\n *   ]);\n *\n *   @uniqBy('fruits', 'color') oneOfEachColor;\n *   // [\n *   //  { name: 'banana', color: 'yellow'},\n *   //  { name: 'apple',  color: 'red'},\n *   //  { name: 'kiwi',   color: 'brown'}\n *   // ]\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key of the array to uniq\n * @param {String} propertyKey - Key of the property on the objects of the array to determine uniqueness by\n ",
      "start": 25613,
      "end": 26744,
      "loc": {
        "start": {
          "line": 787,
          "column": 0
        },
        "end": {
          "line": 819,
          "column": 3
        }
      }
    }
  ],
  "tokens": [
    {
      "type": {
        "label": "import",
        "keyword": "import",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "import",
      "start": 0,
      "end": 6,
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 1,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "Ember",
      "start": 7,
      "end": 12,
      "loc": {
        "start": {
          "line": 1,
          "column": 7
        },
        "end": {
          "line": 1,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "from",
      "start": 13,
      "end": 17,
      "loc": {
        "start": {
          "line": 1,
          "column": 13
        },
        "end": {
          "line": 1,
          "column": 17
        }
      }
    },
    {
      "type": {
        "label": "string",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "ember",
      "start": 18,
      "end": 25,
      "loc": {
        "start": {
          "line": 1,
          "column": 18
        },
        "end": {
          "line": 1,
          "column": 25
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 25,
      "end": 26,
      "loc": {
        "start": {
          "line": 1,
          "column": 25
        },
        "end": {
          "line": 1,
          "column": 26
        }
      }
    },
    {
      "type": {
        "label": "import",
        "keyword": "import",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "import",
      "start": 27,
      "end": 33,
      "loc": {
        "start": {
          "line": 2,
          "column": 0
        },
        "end": {
          "line": 2,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 34,
      "end": 35,
      "loc": {
        "start": {
          "line": 2,
          "column": 7
        },
        "end": {
          "line": 2,
          "column": 8
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "assert",
      "start": 36,
      "end": 42,
      "loc": {
        "start": {
          "line": 2,
          "column": 9
        },
        "end": {
          "line": 2,
          "column": 15
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 43,
      "end": 44,
      "loc": {
        "start": {
          "line": 2,
          "column": 16
        },
        "end": {
          "line": 2,
          "column": 17
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "from",
      "start": 45,
      "end": 49,
      "loc": {
        "start": {
          "line": 2,
          "column": 18
        },
        "end": {
          "line": 2,
          "column": 22
        }
      }
    },
    {
      "type": {
        "label": "string",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "@ember/debug",
      "start": 50,
      "end": 64,
      "loc": {
        "start": {
          "line": 2,
          "column": 23
        },
        "end": {
          "line": 2,
          "column": 37
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 64,
      "end": 65,
      "loc": {
        "start": {
          "line": 2,
          "column": 37
        },
        "end": {
          "line": 2,
          "column": 38
        }
      }
    },
    {
      "type": {
        "label": "import",
        "keyword": "import",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "import",
      "start": 66,
      "end": 72,
      "loc": {
        "start": {
          "line": 3,
          "column": 0
        },
        "end": {
          "line": 3,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 73,
      "end": 74,
      "loc": {
        "start": {
          "line": 3,
          "column": 7
        },
        "end": {
          "line": 3,
          "column": 8
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "decoratedPropertyWithRequiredParams",
      "start": 77,
      "end": 112,
      "loc": {
        "start": {
          "line": 4,
          "column": 2
        },
        "end": {
          "line": 4,
          "column": 37
        }
      }
    },
    {
      "type": {
        "label": ",",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 112,
      "end": 113,
      "loc": {
        "start": {
          "line": 4,
          "column": 37
        },
        "end": {
          "line": 4,
          "column": 38
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "decoratedPropertyWithOptionalCallback",
      "start": 116,
      "end": 153,
      "loc": {
        "start": {
          "line": 5,
          "column": 2
        },
        "end": {
          "line": 5,
          "column": 39
        }
      }
    },
    {
      "type": {
        "label": ",",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 153,
      "end": 154,
      "loc": {
        "start": {
          "line": 5,
          "column": 39
        },
        "end": {
          "line": 5,
          "column": 40
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "decoratedPropertyWithEitherCallbackOrProperty",
      "start": 157,
      "end": 202,
      "loc": {
        "start": {
          "line": 6,
          "column": 2
        },
        "end": {
          "line": 6,
          "column": 47
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 203,
      "end": 204,
      "loc": {
        "start": {
          "line": 7,
          "column": 0
        },
        "end": {
          "line": 7,
          "column": 1
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "from",
      "start": 205,
      "end": 209,
      "loc": {
        "start": {
          "line": 7,
          "column": 2
        },
        "end": {
          "line": 7,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "string",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "../utils/decorator-macros",
      "start": 210,
      "end": 237,
      "loc": {
        "start": {
          "line": 7,
          "column": 7
        },
        "end": {
          "line": 7,
          "column": 34
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 237,
      "end": 238,
      "loc": {
        "start": {
          "line": 7,
          "column": 34
        },
        "end": {
          "line": 7,
          "column": 35
        }
      }
    },
    {
      "type": {
        "label": "import",
        "keyword": "import",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "import",
      "start": 240,
      "end": 246,
      "loc": {
        "start": {
          "line": 9,
          "column": 0
        },
        "end": {
          "line": 9,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 247,
      "end": 248,
      "loc": {
        "start": {
          "line": 9,
          "column": 7
        },
        "end": {
          "line": 9,
          "column": 8
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "SUPPORTS_UNIQ_BY_COMPUTED",
      "start": 251,
      "end": 276,
      "loc": {
        "start": {
          "line": 10,
          "column": 2
        },
        "end": {
          "line": 10,
          "column": 27
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 277,
      "end": 278,
      "loc": {
        "start": {
          "line": 11,
          "column": 0
        },
        "end": {
          "line": 11,
          "column": 1
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "from",
      "start": 279,
      "end": 283,
      "loc": {
        "start": {
          "line": 11,
          "column": 2
        },
        "end": {
          "line": 11,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "string",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "ember-compatibility-helpers",
      "start": 284,
      "end": 313,
      "loc": {
        "start": {
          "line": 11,
          "column": 7
        },
        "end": {
          "line": 11,
          "column": 36
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 313,
      "end": 314,
      "loc": {
        "start": {
          "line": 11,
          "column": 36
        },
        "end": {
          "line": 11,
          "column": 37
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.alias](http://emberjs.com/api/classes/Ember.computed.html#method_alias)\n *\n * Creates a new property that is an alias for another property on an object.\n * Calls to get or set this property behave as though they were called on\n * the original property.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { alias } from 'ember-decorators/object/computed';\n *\n * export default class UserProfileComponent extends Component {\n *   person = {\n *     first: 'Joe'\n *   };\n *\n *   @alias('person.first') firstName;\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the aliased property\n ",
      "start": 316,
      "end": 987,
      "loc": {
        "start": {
          "line": 13,
          "column": 0
        },
        "end": {
          "line": 35,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 988,
      "end": 994,
      "loc": {
        "start": {
          "line": 36,
          "column": 0
        },
        "end": {
          "line": 36,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "const",
        "keyword": "const",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "const",
      "start": 995,
      "end": 1000,
      "loc": {
        "start": {
          "line": 36,
          "column": 7
        },
        "end": {
          "line": 36,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "alias",
      "start": 1001,
      "end": 1006,
      "loc": {
        "start": {
          "line": 36,
          "column": 13
        },
        "end": {
          "line": 36,
          "column": 18
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 1007,
      "end": 1008,
      "loc": {
        "start": {
          "line": 36,
          "column": 19
        },
        "end": {
          "line": 36,
          "column": 20
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "decoratedPropertyWithRequiredParams",
      "start": 1009,
      "end": 1044,
      "loc": {
        "start": {
          "line": 36,
          "column": 21
        },
        "end": {
          "line": 36,
          "column": 56
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1044,
      "end": 1045,
      "loc": {
        "start": {
          "line": 36,
          "column": 56
        },
        "end": {
          "line": 36,
          "column": 57
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "Ember",
      "start": 1045,
      "end": 1050,
      "loc": {
        "start": {
          "line": 36,
          "column": 57
        },
        "end": {
          "line": 36,
          "column": 62
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1050,
      "end": 1051,
      "loc": {
        "start": {
          "line": 36,
          "column": 62
        },
        "end": {
          "line": 36,
          "column": 63
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "computed",
      "start": 1051,
      "end": 1059,
      "loc": {
        "start": {
          "line": 36,
          "column": 63
        },
        "end": {
          "line": 36,
          "column": 71
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1059,
      "end": 1060,
      "loc": {
        "start": {
          "line": 36,
          "column": 71
        },
        "end": {
          "line": 36,
          "column": 72
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "alias",
      "start": 1060,
      "end": 1065,
      "loc": {
        "start": {
          "line": 36,
          "column": 72
        },
        "end": {
          "line": 36,
          "column": 77
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1065,
      "end": 1066,
      "loc": {
        "start": {
          "line": 36,
          "column": 77
        },
        "end": {
          "line": 36,
          "column": 78
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1066,
      "end": 1067,
      "loc": {
        "start": {
          "line": 36,
          "column": 78
        },
        "end": {
          "line": 36,
          "column": 79
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.and](http://emberjs.com/api/classes/Ember.computed.html#method_and)\n *\n * A computed property that performs a logical and on the original values\n * for the provided dependent properties.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { and } from 'ember-decorators/object/computed';\n *\n * export default class UserProfileComponent extends Component {\n *   person = {\n *     first: 'Joe'\n *   };\n *\n *   @and('person.{first,last}') hasFullName; // false\n * }\n * ```\n *\n * @function\n * @param {...String} dependentKeys - Keys for properties to `and`\n ",
      "start": 1069,
      "end": 1692,
      "loc": {
        "start": {
          "line": 38,
          "column": 0
        },
        "end": {
          "line": 59,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 1693,
      "end": 1699,
      "loc": {
        "start": {
          "line": 60,
          "column": 0
        },
        "end": {
          "line": 60,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "const",
        "keyword": "const",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "const",
      "start": 1700,
      "end": 1705,
      "loc": {
        "start": {
          "line": 60,
          "column": 7
        },
        "end": {
          "line": 60,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "and",
      "start": 1706,
      "end": 1709,
      "loc": {
        "start": {
          "line": 60,
          "column": 13
        },
        "end": {
          "line": 60,
          "column": 16
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 1710,
      "end": 1711,
      "loc": {
        "start": {
          "line": 60,
          "column": 17
        },
        "end": {
          "line": 60,
          "column": 18
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "decoratedPropertyWithRequiredParams",
      "start": 1712,
      "end": 1747,
      "loc": {
        "start": {
          "line": 60,
          "column": 19
        },
        "end": {
          "line": 60,
          "column": 54
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1747,
      "end": 1748,
      "loc": {
        "start": {
          "line": 60,
          "column": 54
        },
        "end": {
          "line": 60,
          "column": 55
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "Ember",
      "start": 1748,
      "end": 1753,
      "loc": {
        "start": {
          "line": 60,
          "column": 55
        },
        "end": {
          "line": 60,
          "column": 60
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1753,
      "end": 1754,
      "loc": {
        "start": {
          "line": 60,
          "column": 60
        },
        "end": {
          "line": 60,
          "column": 61
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "computed",
      "start": 1754,
      "end": 1762,
      "loc": {
        "start": {
          "line": 60,
          "column": 61
        },
        "end": {
          "line": 60,
          "column": 69
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1762,
      "end": 1763,
      "loc": {
        "start": {
          "line": 60,
          "column": 69
        },
        "end": {
          "line": 60,
          "column": 70
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "and",
      "start": 1763,
      "end": 1766,
      "loc": {
        "start": {
          "line": 60,
          "column": 70
        },
        "end": {
          "line": 60,
          "column": 73
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1766,
      "end": 1767,
      "loc": {
        "start": {
          "line": 60,
          "column": 73
        },
        "end": {
          "line": 60,
          "column": 74
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1767,
      "end": 1768,
      "loc": {
        "start": {
          "line": 60,
          "column": 74
        },
        "end": {
          "line": 60,
          "column": 75
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.bool](http://emberjs.com/api/classes/Ember.computed.html#method_bool)\n *\n * A computed property that converts the provided dependent property into a\n * boolean value.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { bool } from 'ember-decorators/object/computed';\n *\n * export default class MessagesNotificationComponent extends Component {\n *   messageCount = 1;\n *\n *   @bool('messageCount') hasMessages; // true\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to convert\n ",
      "start": 1770,
      "end": 2354,
      "loc": {
        "start": {
          "line": 62,
          "column": 0
        },
        "end": {
          "line": 81,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 2355,
      "end": 2361,
      "loc": {
        "start": {
          "line": 82,
          "column": 0
        },
        "end": {
          "line": 82,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "const",
        "keyword": "const",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "const",
      "start": 2362,
      "end": 2367,
      "loc": {
        "start": {
          "line": 82,
          "column": 7
        },
        "end": {
          "line": 82,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "bool",
      "start": 2368,
      "end": 2372,
      "loc": {
        "start": {
          "line": 82,
          "column": 13
        },
        "end": {
          "line": 82,
          "column": 17
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 2373,
      "end": 2374,
      "loc": {
        "start": {
          "line": 82,
          "column": 18
        },
        "end": {
          "line": 82,
          "column": 19
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "decoratedPropertyWithRequiredParams",
      "start": 2375,
      "end": 2410,
      "loc": {
        "start": {
          "line": 82,
          "column": 20
        },
        "end": {
          "line": 82,
          "column": 55
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 2410,
      "end": 2411,
      "loc": {
        "start": {
          "line": 82,
          "column": 55
        },
        "end": {
          "line": 82,
          "column": 56
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "Ember",
      "start": 2411,
      "end": 2416,
      "loc": {
        "start": {
          "line": 82,
          "column": 56
        },
        "end": {
          "line": 82,
          "column": 61
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 2416,
      "end": 2417,
      "loc": {
        "start": {
          "line": 82,
          "column": 61
        },
        "end": {
          "line": 82,
          "column": 62
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "computed",
      "start": 2417,
      "end": 2425,
      "loc": {
        "start": {
          "line": 82,
          "column": 62
        },
        "end": {
          "line": 82,
          "column": 70
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 2425,
      "end": 2426,
      "loc": {
        "start": {
          "line": 82,
          "column": 70
        },
        "end": {
          "line": 82,
          "column": 71
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "bool",
      "start": 2426,
      "end": 2430,
      "loc": {
        "start": {
          "line": 82,
          "column": 71
        },
        "end": {
          "line": 82,
          "column": 75
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 2430,
      "end": 2431,
      "loc": {
        "start": {
          "line": 82,
          "column": 75
        },
        "end": {
          "line": 82,
          "column": 76
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 2431,
      "end": 2432,
      "loc": {
        "start": {
          "line": 82,
          "column": 76
        },
        "end": {
          "line": 82,
          "column": 77
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.collect](http://emberjs.com/api/classes/Ember.computed.html#method_collect)\n *\n * A computed property that returns the array of values for the provided\n * dependent properties.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { collect } from 'ember-decorators/object/computed';\n *\n * export default class CameraEquipmentComponent extends Component {\n *   light = 'strobe';\n *   lens = '35mm prime';\n *\n *   @collect('light', 'lens') equipment; // ['strobe', '35mm prime']\n * }\n * ```\n *\n * @function\n * @param {...String} dependentKeys - Keys for the properties to collect\n ",
      "start": 2434,
      "end": 3081,
      "loc": {
        "start": {
          "line": 84,
          "column": 0
        },
        "end": {
          "line": 104,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 3082,
      "end": 3088,
      "loc": {
        "start": {
          "line": 105,
          "column": 0
        },
        "end": {
          "line": 105,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "const",
        "keyword": "const",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "const",
      "start": 3089,
      "end": 3094,
      "loc": {
        "start": {
          "line": 105,
          "column": 7
        },
        "end": {
          "line": 105,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "collect",
      "start": 3095,
      "end": 3102,
      "loc": {
        "start": {
          "line": 105,
          "column": 13
        },
        "end": {
          "line": 105,
          "column": 20
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 3103,
      "end": 3104,
      "loc": {
        "start": {
          "line": 105,
          "column": 21
        },
        "end": {
          "line": 105,
          "column": 22
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "decoratedPropertyWithRequiredParams",
      "start": 3105,
      "end": 3140,
      "loc": {
        "start": {
          "line": 105,
          "column": 23
        },
        "end": {
          "line": 105,
          "column": 58
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 3140,
      "end": 3141,
      "loc": {
        "start": {
          "line": 105,
          "column": 58
        },
        "end": {
          "line": 105,
          "column": 59
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "Ember",
      "start": 3141,
      "end": 3146,
      "loc": {
        "start": {
          "line": 105,
          "column": 59
        },
        "end": {
          "line": 105,
          "column": 64
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 3146,
      "end": 3147,
      "loc": {
        "start": {
          "line": 105,
          "column": 64
        },
        "end": {
          "line": 105,
          "column": 65
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "computed",
      "start": 3147,
      "end": 3155,
      "loc": {
        "start": {
          "line": 105,
          "column": 65
        },
        "end": {
          "line": 105,
          "column": 73
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 3155,
      "end": 3156,
      "loc": {
        "start": {
          "line": 105,
          "column": 73
        },
        "end": {
          "line": 105,
          "column": 74
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "collect",
      "start": 3156,
      "end": 3163,
      "loc": {
        "start": {
          "line": 105,
          "column": 74
        },
        "end": {
          "line": 105,
          "column": 81
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 3163,
      "end": 3164,
      "loc": {
        "start": {
          "line": 105,
          "column": 81
        },
        "end": {
          "line": 105,
          "column": 82
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 3164,
      "end": 3165,
      "loc": {
        "start": {
          "line": 105,
          "column": 82
        },
        "end": {
          "line": 105,
          "column": 83
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.deprecatingAlias](http://emberjs.com/api/classes/Ember.computed.html#method_deprecatingAlias)\n *\n * Creates a new property that is an alias for another property on an object.\n * Calls to get or set this property behave as though they were called on\n * the original property, but will also trigger a deprecation warning.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { deprecatingAlias } from 'ember-decorators/object/computed';\n *\n * export default class UserProfileComponent extends {\n *   person = {\n *     first: 'Joe'\n *   };\n *\n *   @deprecatingAlias('person.first', {\n *     id: 'user-profile.firstName',\n *     until: '3.0.0',\n *     url: 'https://example.com/deprecations/user-profile.firstName'\n *   }) firstName;\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to alias\n * @param {Object} options\n ",
      "start": 3167,
      "end": 4085,
      "loc": {
        "start": {
          "line": 107,
          "column": 0
        },
        "end": {
          "line": 134,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 4086,
      "end": 4092,
      "loc": {
        "start": {
          "line": 135,
          "column": 0
        },
        "end": {
          "line": 135,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "const",
        "keyword": "const",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "const",
      "start": 4093,
      "end": 4098,
      "loc": {
        "start": {
          "line": 135,
          "column": 7
        },
        "end": {
          "line": 135,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "deprecatingAlias",
      "start": 4099,
      "end": 4115,
      "loc": {
        "start": {
          "line": 135,
          "column": 13
        },
        "end": {
          "line": 135,
          "column": 29
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 4116,
      "end": 4117,
      "loc": {
        "start": {
          "line": 135,
          "column": 30
        },
        "end": {
          "line": 135,
          "column": 31
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "decoratedPropertyWithRequiredParams",
      "start": 4118,
      "end": 4153,
      "loc": {
        "start": {
          "line": 135,
          "column": 32
        },
        "end": {
          "line": 135,
          "column": 67
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 4153,
      "end": 4154,
      "loc": {
        "start": {
          "line": 135,
          "column": 67
        },
        "end": {
          "line": 135,
          "column": 68
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "Ember",
      "start": 4154,
      "end": 4159,
      "loc": {
        "start": {
          "line": 135,
          "column": 68
        },
        "end": {
          "line": 135,
          "column": 73
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 4159,
      "end": 4160,
      "loc": {
        "start": {
          "line": 135,
          "column": 73
        },
        "end": {
          "line": 135,
          "column": 74
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "computed",
      "start": 4160,
      "end": 4168,
      "loc": {
        "start": {
          "line": 135,
          "column": 74
        },
        "end": {
          "line": 135,
          "column": 82
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 4168,
      "end": 4169,
      "loc": {
        "start": {
          "line": 135,
          "column": 82
        },
        "end": {
          "line": 135,
          "column": 83
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "deprecatingAlias",
      "start": 4169,
      "end": 4185,
      "loc": {
        "start": {
          "line": 135,
          "column": 83
        },
        "end": {
          "line": 135,
          "column": 99
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 4185,
      "end": 4186,
      "loc": {
        "start": {
          "line": 135,
          "column": 99
        },
        "end": {
          "line": 135,
          "column": 100
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 4186,
      "end": 4187,
      "loc": {
        "start": {
          "line": 135,
          "column": 100
        },
        "end": {
          "line": 135,
          "column": 101
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.empty](http://emberjs.com/api/classes/Ember.computed.html#method_empty)\n *\n * A computed property that returns `true` if the value of the dependent\n * property is null, an empty string, empty array, or empty function.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { empty } from 'ember-decorators/object/computed';\n *\n * export default class FoodItemsComponent extends Component {\n *   items = A(['taco', 'burrito']);\n *\n *   @empty('items') isEmpty; // false\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key of the property to check emptiness of\n ",
      "start": 4189,
      "end": 4866,
      "loc": {
        "start": {
          "line": 137,
          "column": 0
        },
        "end": {
          "line": 157,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 4867,
      "end": 4873,
      "loc": {
        "start": {
          "line": 158,
          "column": 0
        },
        "end": {
          "line": 158,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "const",
        "keyword": "const",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "const",
      "start": 4874,
      "end": 4879,
      "loc": {
        "start": {
          "line": 158,
          "column": 7
        },
        "end": {
          "line": 158,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "empty",
      "start": 4880,
      "end": 4885,
      "loc": {
        "start": {
          "line": 158,
          "column": 13
        },
        "end": {
          "line": 158,
          "column": 18
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 4886,
      "end": 4887,
      "loc": {
        "start": {
          "line": 158,
          "column": 19
        },
        "end": {
          "line": 158,
          "column": 20
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "decoratedPropertyWithRequiredParams",
      "start": 4888,
      "end": 4923,
      "loc": {
        "start": {
          "line": 158,
          "column": 21
        },
        "end": {
          "line": 158,
          "column": 56
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 4923,
      "end": 4924,
      "loc": {
        "start": {
          "line": 158,
          "column": 56
        },
        "end": {
          "line": 158,
          "column": 57
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "Ember",
      "start": 4924,
      "end": 4929,
      "loc": {
        "start": {
          "line": 158,
          "column": 57
        },
        "end": {
          "line": 158,
          "column": 62
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 4929,
      "end": 4930,
      "loc": {
        "start": {
          "line": 158,
          "column": 62
        },
        "end": {
          "line": 158,
          "column": 63
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "computed",
      "start": 4930,
      "end": 4938,
      "loc": {
        "start": {
          "line": 158,
          "column": 63
        },
        "end": {
          "line": 158,
          "column": 71
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 4938,
      "end": 4939,
      "loc": {
        "start": {
          "line": 158,
          "column": 71
        },
        "end": {
          "line": 158,
          "column": 72
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "empty",
      "start": 4939,
      "end": 4944,
      "loc": {
        "start": {
          "line": 158,
          "column": 72
        },
        "end": {
          "line": 158,
          "column": 77
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 4944,
      "end": 4945,
      "loc": {
        "start": {
          "line": 158,
          "column": 77
        },
        "end": {
          "line": 158,
          "column": 78
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 4945,
      "end": 4946,
      "loc": {
        "start": {
          "line": 158,
          "column": 78
        },
        "end": {
          "line": 158,
          "column": 79
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.equal](http://emberjs.com/api/classes/Ember.computed.html#method_equal)\n *\n * A computed property that returns true if the dependent properties are equal.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { equal } from 'ember-decorators/object/computed';\n *\n * export default class NapTimeComponent extends Component {\n *   state = 'sleepy';\n *\n *   @equal('state', 'sleepy') napTime; // true\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to check\n * @param {Any} value - Value to compare the dependent property to\n ",
      "start": 4948,
      "end": 5573,
      "loc": {
        "start": {
          "line": 160,
          "column": 0
        },
        "end": {
          "line": 179,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 5574,
      "end": 5580,
      "loc": {
        "start": {
          "line": 180,
          "column": 0
        },
        "end": {
          "line": 180,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "const",
        "keyword": "const",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "const",
      "start": 5581,
      "end": 5586,
      "loc": {
        "start": {
          "line": 180,
          "column": 7
        },
        "end": {
          "line": 180,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "equal",
      "start": 5587,
      "end": 5592,
      "loc": {
        "start": {
          "line": 180,
          "column": 13
        },
        "end": {
          "line": 180,
          "column": 18
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 5593,
      "end": 5594,
      "loc": {
        "start": {
          "line": 180,
          "column": 19
        },
        "end": {
          "line": 180,
          "column": 20
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "decoratedPropertyWithRequiredParams",
      "start": 5595,
      "end": 5630,
      "loc": {
        "start": {
          "line": 180,
          "column": 21
        },
        "end": {
          "line": 180,
          "column": 56
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 5630,
      "end": 5631,
      "loc": {
        "start": {
          "line": 180,
          "column": 56
        },
        "end": {
          "line": 180,
          "column": 57
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "Ember",
      "start": 5631,
      "end": 5636,
      "loc": {
        "start": {
          "line": 180,
          "column": 57
        },
        "end": {
          "line": 180,
          "column": 62
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 5636,
      "end": 5637,
      "loc": {
        "start": {
          "line": 180,
          "column": 62
        },
        "end": {
          "line": 180,
          "column": 63
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "computed",
      "start": 5637,
      "end": 5645,
      "loc": {
        "start": {
          "line": 180,
          "column": 63
        },
        "end": {
          "line": 180,
          "column": 71
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 5645,
      "end": 5646,
      "loc": {
        "start": {
          "line": 180,
          "column": 71
        },
        "end": {
          "line": 180,
          "column": 72
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "equal",
      "start": 5646,
      "end": 5651,
      "loc": {
        "start": {
          "line": 180,
          "column": 72
        },
        "end": {
          "line": 180,
          "column": 77
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 5651,
      "end": 5652,
      "loc": {
        "start": {
          "line": 180,
          "column": 77
        },
        "end": {
          "line": 180,
          "column": 78
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 5652,
      "end": 5653,
      "loc": {
        "start": {
          "line": 180,
          "column": 78
        },
        "end": {
          "line": 180,
          "column": 79
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.filter](http://emberjs.com/api/classes/Ember.computed.html#method_filter)\n *\n * Filters the items in the array by the provided callback.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { filter } from 'ember-decorators/object/computed';\n *\n * export default class ChoresListComponent extends Component {\n *   chores = A([\n *     { name: 'cook', done: true },\n *     { name: 'clean', done: true },\n *     { name: 'write more unit tests', done: false }\n *   ]);\n *\n *   @filter('chores')\n *   remainingChores(chore, index, array) {\n *     return !chore.done;\n *   } // [{name: 'write more unit tests', done: false}]\n *\n *   // alternative syntax:\n *\n *   @filter('chores', function(chore, index, array) {\n *     return !chore.done;\n *   }) remainingChores; // [{name: 'write more unit tests', done: false}]\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the array to filter\n * @param {Function(item: Any, index: Number, array: Array<Any>): Boolean} callback - The function to filter with\n ",
      "start": 5655,
      "end": 6775,
      "loc": {
        "start": {
          "line": 182,
          "column": 0
        },
        "end": {
          "line": 215,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 6776,
      "end": 6782,
      "loc": {
        "start": {
          "line": 216,
          "column": 0
        },
        "end": {
          "line": 216,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "const",
        "keyword": "const",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "const",
      "start": 6783,
      "end": 6788,
      "loc": {
        "start": {
          "line": 216,
          "column": 7
        },
        "end": {
          "line": 216,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "filter",
      "start": 6789,
      "end": 6795,
      "loc": {
        "start": {
          "line": 216,
          "column": 13
        },
        "end": {
          "line": 216,
          "column": 19
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 6796,
      "end": 6797,
      "loc": {
        "start": {
          "line": 216,
          "column": 20
        },
        "end": {
          "line": 216,
          "column": 21
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "decoratedPropertyWithOptionalCallback",
      "start": 6798,
      "end": 6835,
      "loc": {
        "start": {
          "line": 216,
          "column": 22
        },
        "end": {
          "line": 216,
          "column": 59
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 6835,
      "end": 6836,
      "loc": {
        "start": {
          "line": 216,
          "column": 59
        },
        "end": {
          "line": 216,
          "column": 60
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "Ember",
      "start": 6836,
      "end": 6841,
      "loc": {
        "start": {
          "line": 216,
          "column": 60
        },
        "end": {
          "line": 216,
          "column": 65
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 6841,
      "end": 6842,
      "loc": {
        "start": {
          "line": 216,
          "column": 65
        },
        "end": {
          "line": 216,
          "column": 66
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "computed",
      "start": 6842,
      "end": 6850,
      "loc": {
        "start": {
          "line": 216,
          "column": 66
        },
        "end": {
          "line": 216,
          "column": 74
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 6850,
      "end": 6851,
      "loc": {
        "start": {
          "line": 216,
          "column": 74
        },
        "end": {
          "line": 216,
          "column": 75
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "filter",
      "start": 6851,
      "end": 6857,
      "loc": {
        "start": {
          "line": 216,
          "column": 75
        },
        "end": {
          "line": 216,
          "column": 81
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 6857,
      "end": 6858,
      "loc": {
        "start": {
          "line": 216,
          "column": 81
        },
        "end": {
          "line": 216,
          "column": 82
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 6858,
      "end": 6859,
      "loc": {
        "start": {
          "line": 216,
          "column": 82
        },
        "end": {
          "line": 216,
          "column": 83
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.filterBy](http://emberjs.com/api/classes/Ember.computed.html#method_filterBy)\n *\n * Filters the array by the property and value.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { filterBy } from 'ember-decorators/object/computed';\n *\n * export default class ChoresListComponent extends Component {\n *   chores = A([\n *     { name: 'cook', done: true },\n *     { name: 'clean', done: true },\n *     { name: 'write more unit tests', done: false }\n *   ]);\n *\n *   @filterBy('chores', 'done', false) remainingChores; // [{name: 'write more unit tests', done: false}]\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the array to filter\n * @param {String} propertyKey - Property of the array items to filter by\n * @param {Any} value - Value to filter by\n ",
      "start": 6861,
      "end": 7743,
      "loc": {
        "start": {
          "line": 218,
          "column": 0
        },
        "end": {
          "line": 243,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 7744,
      "end": 7750,
      "loc": {
        "start": {
          "line": 244,
          "column": 0
        },
        "end": {
          "line": 244,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "const",
        "keyword": "const",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "const",
      "start": 7751,
      "end": 7756,
      "loc": {
        "start": {
          "line": 244,
          "column": 7
        },
        "end": {
          "line": 244,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "filterBy",
      "start": 7757,
      "end": 7765,
      "loc": {
        "start": {
          "line": 244,
          "column": 13
        },
        "end": {
          "line": 244,
          "column": 21
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 7766,
      "end": 7767,
      "loc": {
        "start": {
          "line": 244,
          "column": 22
        },
        "end": {
          "line": 244,
          "column": 23
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "decoratedPropertyWithRequiredParams",
      "start": 7768,
      "end": 7803,
      "loc": {
        "start": {
          "line": 244,
          "column": 24
        },
        "end": {
          "line": 244,
          "column": 59
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 7803,
      "end": 7804,
      "loc": {
        "start": {
          "line": 244,
          "column": 59
        },
        "end": {
          "line": 244,
          "column": 60
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "Ember",
      "start": 7804,
      "end": 7809,
      "loc": {
        "start": {
          "line": 244,
          "column": 60
        },
        "end": {
          "line": 244,
          "column": 65
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 7809,
      "end": 7810,
      "loc": {
        "start": {
          "line": 244,
          "column": 65
        },
        "end": {
          "line": 244,
          "column": 66
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "computed",
      "start": 7810,
      "end": 7818,
      "loc": {
        "start": {
          "line": 244,
          "column": 66
        },
        "end": {
          "line": 244,
          "column": 74
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 7818,
      "end": 7819,
      "loc": {
        "start": {
          "line": 244,
          "column": 74
        },
        "end": {
          "line": 244,
          "column": 75
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "filterBy",
      "start": 7819,
      "end": 7827,
      "loc": {
        "start": {
          "line": 244,
          "column": 75
        },
        "end": {
          "line": 244,
          "column": 83
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 7827,
      "end": 7828,
      "loc": {
        "start": {
          "line": 244,
          "column": 83
        },
        "end": {
          "line": 244,
          "column": 84
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 7828,
      "end": 7829,
      "loc": {
        "start": {
          "line": 244,
          "column": 84
        },
        "end": {
          "line": 244,
          "column": 85
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.gt](http://emberjs.com/api/classes/Ember.computed.html#method_gt)\n *\n * A computed property that returns `true` if the provided dependent property\n * is greater than the provided value.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { gt } from 'ember-decorators/object/computed';\n *\n * export default class CatPartyComponent extends Component {\n *   totalCats = 11;\n *\n *   @gt('totalCats', 10) isCatParty; // true\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to compare\n * @param {Number} value - Value to compare against\n ",
      "start": 7831,
      "end": 8468,
      "loc": {
        "start": {
          "line": 246,
          "column": 0
        },
        "end": {
          "line": 266,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 8469,
      "end": 8475,
      "loc": {
        "start": {
          "line": 267,
          "column": 0
        },
        "end": {
          "line": 267,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "const",
        "keyword": "const",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "const",
      "start": 8476,
      "end": 8481,
      "loc": {
        "start": {
          "line": 267,
          "column": 7
        },
        "end": {
          "line": 267,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "gt",
      "start": 8482,
      "end": 8484,
      "loc": {
        "start": {
          "line": 267,
          "column": 13
        },
        "end": {
          "line": 267,
          "column": 15
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 8485,
      "end": 8486,
      "loc": {
        "start": {
          "line": 267,
          "column": 16
        },
        "end": {
          "line": 267,
          "column": 17
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "decoratedPropertyWithRequiredParams",
      "start": 8487,
      "end": 8522,
      "loc": {
        "start": {
          "line": 267,
          "column": 18
        },
        "end": {
          "line": 267,
          "column": 53
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 8522,
      "end": 8523,
      "loc": {
        "start": {
          "line": 267,
          "column": 53
        },
        "end": {
          "line": 267,
          "column": 54
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "Ember",
      "start": 8523,
      "end": 8528,
      "loc": {
        "start": {
          "line": 267,
          "column": 54
        },
        "end": {
          "line": 267,
          "column": 59
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 8528,
      "end": 8529,
      "loc": {
        "start": {
          "line": 267,
          "column": 59
        },
        "end": {
          "line": 267,
          "column": 60
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "computed",
      "start": 8529,
      "end": 8537,
      "loc": {
        "start": {
          "line": 267,
          "column": 60
        },
        "end": {
          "line": 267,
          "column": 68
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 8537,
      "end": 8538,
      "loc": {
        "start": {
          "line": 267,
          "column": 68
        },
        "end": {
          "line": 267,
          "column": 69
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "gt",
      "start": 8538,
      "end": 8540,
      "loc": {
        "start": {
          "line": 267,
          "column": 69
        },
        "end": {
          "line": 267,
          "column": 71
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 8540,
      "end": 8541,
      "loc": {
        "start": {
          "line": 267,
          "column": 71
        },
        "end": {
          "line": 267,
          "column": 72
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 8541,
      "end": 8542,
      "loc": {
        "start": {
          "line": 267,
          "column": 72
        },
        "end": {
          "line": 267,
          "column": 73
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.gte](http://emberjs.com/api/classes/Ember.computed.html#method_gte)\n *\n * A computed property that returns `true` if the provided dependent property\n * is greater than or equal to the provided value.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { gte } from 'ember-decorators/object/computed';\n *\n * export default class PlayerListComponent extends Component {\n *   totalPlayers = 14;\n *\n *   @gte('totalPlayers', 14) hasEnoughPlayers; // true\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to compare\n * @param {Number} value - Value to compare against\n ",
      "start": 8544,
      "end": 9211,
      "loc": {
        "start": {
          "line": 269,
          "column": 0
        },
        "end": {
          "line": 289,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 9212,
      "end": 9218,
      "loc": {
        "start": {
          "line": 290,
          "column": 0
        },
        "end": {
          "line": 290,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "const",
        "keyword": "const",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "const",
      "start": 9219,
      "end": 9224,
      "loc": {
        "start": {
          "line": 290,
          "column": 7
        },
        "end": {
          "line": 290,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "gte",
      "start": 9225,
      "end": 9228,
      "loc": {
        "start": {
          "line": 290,
          "column": 13
        },
        "end": {
          "line": 290,
          "column": 16
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 9229,
      "end": 9230,
      "loc": {
        "start": {
          "line": 290,
          "column": 17
        },
        "end": {
          "line": 290,
          "column": 18
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "decoratedPropertyWithRequiredParams",
      "start": 9231,
      "end": 9266,
      "loc": {
        "start": {
          "line": 290,
          "column": 19
        },
        "end": {
          "line": 290,
          "column": 54
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 9266,
      "end": 9267,
      "loc": {
        "start": {
          "line": 290,
          "column": 54
        },
        "end": {
          "line": 290,
          "column": 55
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "Ember",
      "start": 9267,
      "end": 9272,
      "loc": {
        "start": {
          "line": 290,
          "column": 55
        },
        "end": {
          "line": 290,
          "column": 60
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 9272,
      "end": 9273,
      "loc": {
        "start": {
          "line": 290,
          "column": 60
        },
        "end": {
          "line": 290,
          "column": 61
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "computed",
      "start": 9273,
      "end": 9281,
      "loc": {
        "start": {
          "line": 290,
          "column": 61
        },
        "end": {
          "line": 290,
          "column": 69
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 9281,
      "end": 9282,
      "loc": {
        "start": {
          "line": 290,
          "column": 69
        },
        "end": {
          "line": 290,
          "column": 70
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "gte",
      "start": 9282,
      "end": 9285,
      "loc": {
        "start": {
          "line": 290,
          "column": 70
        },
        "end": {
          "line": 290,
          "column": 73
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 9285,
      "end": 9286,
      "loc": {
        "start": {
          "line": 290,
          "column": 73
        },
        "end": {
          "line": 290,
          "column": 74
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 9286,
      "end": 9287,
      "loc": {
        "start": {
          "line": 290,
          "column": 74
        },
        "end": {
          "line": 290,
          "column": 75
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.intersect](http://emberjs.com/api/classes/Ember.computed.html#method_intersect)\n *\n * A computed property which returns a new array with all the duplicated\n * elements from two or more dependent arrays.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { intersect } from 'ember-decorators/object/computed';\n *\n * export default class FoodListComponent extends Component {\n *   likes = A([ 'tacos', 'puppies', 'pizza' ]);\n *   foods = A(['tacos', 'pizza']);\n *\n *   @intersect('likes', 'foods') favoriteFoods; // ['tacos', 'pizza']\n * }\n * ```\n *\n * @function\n * @param {...String} dependentKeys - Keys of the arrays to intersect\n ",
      "start": 9289,
      "end": 10028,
      "loc": {
        "start": {
          "line": 292,
          "column": 0
        },
        "end": {
          "line": 313,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 10029,
      "end": 10035,
      "loc": {
        "start": {
          "line": 314,
          "column": 0
        },
        "end": {
          "line": 314,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "const",
        "keyword": "const",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "const",
      "start": 10036,
      "end": 10041,
      "loc": {
        "start": {
          "line": 314,
          "column": 7
        },
        "end": {
          "line": 314,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "intersect",
      "start": 10042,
      "end": 10051,
      "loc": {
        "start": {
          "line": 314,
          "column": 13
        },
        "end": {
          "line": 314,
          "column": 22
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 10052,
      "end": 10053,
      "loc": {
        "start": {
          "line": 314,
          "column": 23
        },
        "end": {
          "line": 314,
          "column": 24
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "decoratedPropertyWithRequiredParams",
      "start": 10054,
      "end": 10089,
      "loc": {
        "start": {
          "line": 314,
          "column": 25
        },
        "end": {
          "line": 314,
          "column": 60
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 10089,
      "end": 10090,
      "loc": {
        "start": {
          "line": 314,
          "column": 60
        },
        "end": {
          "line": 314,
          "column": 61
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "Ember",
      "start": 10090,
      "end": 10095,
      "loc": {
        "start": {
          "line": 314,
          "column": 61
        },
        "end": {
          "line": 314,
          "column": 66
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 10095,
      "end": 10096,
      "loc": {
        "start": {
          "line": 314,
          "column": 66
        },
        "end": {
          "line": 314,
          "column": 67
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "computed",
      "start": 10096,
      "end": 10104,
      "loc": {
        "start": {
          "line": 314,
          "column": 67
        },
        "end": {
          "line": 314,
          "column": 75
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 10104,
      "end": 10105,
      "loc": {
        "start": {
          "line": 314,
          "column": 75
        },
        "end": {
          "line": 314,
          "column": 76
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "intersect",
      "start": 10105,
      "end": 10114,
      "loc": {
        "start": {
          "line": 314,
          "column": 76
        },
        "end": {
          "line": 314,
          "column": 85
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 10114,
      "end": 10115,
      "loc": {
        "start": {
          "line": 314,
          "column": 85
        },
        "end": {
          "line": 314,
          "column": 86
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 10115,
      "end": 10116,
      "loc": {
        "start": {
          "line": 314,
          "column": 86
        },
        "end": {
          "line": 314,
          "column": 87
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.lt](http://emberjs.com/api/classes/Ember.computed.html#method_lt)\n *\n * A computed property that returns `true` if the provided dependent property\n * is less than the provided value.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { lt } from 'ember-decorators/object/computed';\n *\n * export default class DogPartyComponent extends Component {\n *   totalDogs = 3;\n *\n *   @lt('totalDogs', 10) isDogParty; // true\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to compare\n * @param {Number} value - Value to compare against\n ",
      "start": 10118,
      "end": 10751,
      "loc": {
        "start": {
          "line": 316,
          "column": 0
        },
        "end": {
          "line": 336,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 10752,
      "end": 10758,
      "loc": {
        "start": {
          "line": 337,
          "column": 0
        },
        "end": {
          "line": 337,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "const",
        "keyword": "const",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "const",
      "start": 10759,
      "end": 10764,
      "loc": {
        "start": {
          "line": 337,
          "column": 7
        },
        "end": {
          "line": 337,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "lt",
      "start": 10765,
      "end": 10767,
      "loc": {
        "start": {
          "line": 337,
          "column": 13
        },
        "end": {
          "line": 337,
          "column": 15
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 10768,
      "end": 10769,
      "loc": {
        "start": {
          "line": 337,
          "column": 16
        },
        "end": {
          "line": 337,
          "column": 17
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "decoratedPropertyWithRequiredParams",
      "start": 10770,
      "end": 10805,
      "loc": {
        "start": {
          "line": 337,
          "column": 18
        },
        "end": {
          "line": 337,
          "column": 53
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 10805,
      "end": 10806,
      "loc": {
        "start": {
          "line": 337,
          "column": 53
        },
        "end": {
          "line": 337,
          "column": 54
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "Ember",
      "start": 10806,
      "end": 10811,
      "loc": {
        "start": {
          "line": 337,
          "column": 54
        },
        "end": {
          "line": 337,
          "column": 59
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 10811,
      "end": 10812,
      "loc": {
        "start": {
          "line": 337,
          "column": 59
        },
        "end": {
          "line": 337,
          "column": 60
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "computed",
      "start": 10812,
      "end": 10820,
      "loc": {
        "start": {
          "line": 337,
          "column": 60
        },
        "end": {
          "line": 337,
          "column": 68
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 10820,
      "end": 10821,
      "loc": {
        "start": {
          "line": 337,
          "column": 68
        },
        "end": {
          "line": 337,
          "column": 69
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "lt",
      "start": 10821,
      "end": 10823,
      "loc": {
        "start": {
          "line": 337,
          "column": 69
        },
        "end": {
          "line": 337,
          "column": 71
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 10823,
      "end": 10824,
      "loc": {
        "start": {
          "line": 337,
          "column": 71
        },
        "end": {
          "line": 337,
          "column": 72
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 10824,
      "end": 10825,
      "loc": {
        "start": {
          "line": 337,
          "column": 72
        },
        "end": {
          "line": 337,
          "column": 73
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.lte](http://emberjs.com/api/classes/Ember.computed.html#method_lte)\n *\n * A computed property that returns `true` if the provided dependent property\n * is less than or equal to the provided value.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { lte } from 'ember-decorators/object/computed';\n *\n * export default class PlayerListComponent extends Component {\n *   totalPlayers = 14;\n *\n *   @lte('totalPlayers', 14) hasEnoughPlayers; // true\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to compare\n * @param {Number} value - Value to compare against\n ",
      "start": 10827,
      "end": 11491,
      "loc": {
        "start": {
          "line": 339,
          "column": 0
        },
        "end": {
          "line": 359,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 11492,
      "end": 11498,
      "loc": {
        "start": {
          "line": 360,
          "column": 0
        },
        "end": {
          "line": 360,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "const",
        "keyword": "const",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "const",
      "start": 11499,
      "end": 11504,
      "loc": {
        "start": {
          "line": 360,
          "column": 7
        },
        "end": {
          "line": 360,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "lte",
      "start": 11505,
      "end": 11508,
      "loc": {
        "start": {
          "line": 360,
          "column": 13
        },
        "end": {
          "line": 360,
          "column": 16
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 11509,
      "end": 11510,
      "loc": {
        "start": {
          "line": 360,
          "column": 17
        },
        "end": {
          "line": 360,
          "column": 18
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "decoratedPropertyWithRequiredParams",
      "start": 11511,
      "end": 11546,
      "loc": {
        "start": {
          "line": 360,
          "column": 19
        },
        "end": {
          "line": 360,
          "column": 54
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 11546,
      "end": 11547,
      "loc": {
        "start": {
          "line": 360,
          "column": 54
        },
        "end": {
          "line": 360,
          "column": 55
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "Ember",
      "start": 11547,
      "end": 11552,
      "loc": {
        "start": {
          "line": 360,
          "column": 55
        },
        "end": {
          "line": 360,
          "column": 60
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 11552,
      "end": 11553,
      "loc": {
        "start": {
          "line": 360,
          "column": 60
        },
        "end": {
          "line": 360,
          "column": 61
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "computed",
      "start": 11553,
      "end": 11561,
      "loc": {
        "start": {
          "line": 360,
          "column": 61
        },
        "end": {
          "line": 360,
          "column": 69
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 11561,
      "end": 11562,
      "loc": {
        "start": {
          "line": 360,
          "column": 69
        },
        "end": {
          "line": 360,
          "column": 70
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "lte",
      "start": 11562,
      "end": 11565,
      "loc": {
        "start": {
          "line": 360,
          "column": 70
        },
        "end": {
          "line": 360,
          "column": 73
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 11565,
      "end": 11566,
      "loc": {
        "start": {
          "line": 360,
          "column": 73
        },
        "end": {
          "line": 360,
          "column": 74
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 11566,
      "end": 11567,
      "loc": {
        "start": {
          "line": 360,
          "column": 74
        },
        "end": {
          "line": 360,
          "column": 75
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.map](http://emberjs.com/api/classes/Ember.computed.html#method_map)\n *\n * Returns an array mapped via the callback\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { map } from 'ember-decorators/object/computed';\n *\n * export default class ChoresListComponent extends Component {\n *   chores = A(['clean', 'write more unit tests']);\n *\n *   @map('chores')\n *   loudChores(chore, index) {\n *     return chore.toUpperCase() + '!';\n *   } // ['CLEAN!', 'WRITE MORE UNIT TESTS!']\n *\n *   // alternative syntax:\n *\n *   @map('chores', function(chore, index) {\n *     return chore.toUpperCase() + '!';\n *   }) loudChores; // ['CLEAN!', 'WRITE MORE UNIT TESTS!']\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the array to map over\n * @param {Function(item: Any, index: Number): Any} callback - Function to map over the array\n ",
      "start": 11569,
      "end": 12521,
      "loc": {
        "start": {
          "line": 362,
          "column": 0
        },
        "end": {
          "line": 391,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 12522,
      "end": 12528,
      "loc": {
        "start": {
          "line": 392,
          "column": 0
        },
        "end": {
          "line": 392,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "const",
        "keyword": "const",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "const",
      "start": 12529,
      "end": 12534,
      "loc": {
        "start": {
          "line": 392,
          "column": 7
        },
        "end": {
          "line": 392,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "map",
      "start": 12535,
      "end": 12538,
      "loc": {
        "start": {
          "line": 392,
          "column": 13
        },
        "end": {
          "line": 392,
          "column": 16
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 12539,
      "end": 12540,
      "loc": {
        "start": {
          "line": 392,
          "column": 17
        },
        "end": {
          "line": 392,
          "column": 18
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "decoratedPropertyWithOptionalCallback",
      "start": 12541,
      "end": 12578,
      "loc": {
        "start": {
          "line": 392,
          "column": 19
        },
        "end": {
          "line": 392,
          "column": 56
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 12578,
      "end": 12579,
      "loc": {
        "start": {
          "line": 392,
          "column": 56
        },
        "end": {
          "line": 392,
          "column": 57
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "Ember",
      "start": 12579,
      "end": 12584,
      "loc": {
        "start": {
          "line": 392,
          "column": 57
        },
        "end": {
          "line": 392,
          "column": 62
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 12584,
      "end": 12585,
      "loc": {
        "start": {
          "line": 392,
          "column": 62
        },
        "end": {
          "line": 392,
          "column": 63
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "computed",
      "start": 12585,
      "end": 12593,
      "loc": {
        "start": {
          "line": 392,
          "column": 63
        },
        "end": {
          "line": 392,
          "column": 71
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 12593,
      "end": 12594,
      "loc": {
        "start": {
          "line": 392,
          "column": 71
        },
        "end": {
          "line": 392,
          "column": 72
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "map",
      "start": 12594,
      "end": 12597,
      "loc": {
        "start": {
          "line": 392,
          "column": 72
        },
        "end": {
          "line": 392,
          "column": 75
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 12597,
      "end": 12598,
      "loc": {
        "start": {
          "line": 392,
          "column": 75
        },
        "end": {
          "line": 392,
          "column": 76
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 12598,
      "end": 12599,
      "loc": {
        "start": {
          "line": 392,
          "column": 76
        },
        "end": {
          "line": 392,
          "column": 77
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.mapBy](http://emberjs.com/api/classes/Ember.computed.html#method_mapBy)\n *\n * Returns an array mapped to the specified key.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { mapBy } from 'ember-decorators/object/computed';\n *\n * export default class PeopleListComponent extends Component {\n *   people = A([\n *     {name: \"George\", age: 5},\n *     {name: \"Stella\", age: 10},\n *     {name: \"Violet\", age: 7}\n *   ]);\n *\n *   @mapBy('people', 'age') ages; // [5, 10, 7]\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the array to map over\n * @param {String} propertyKey - Property of the array items to map by\n ",
      "start": 12601,
      "end": 13343,
      "loc": {
        "start": {
          "line": 394,
          "column": 0
        },
        "end": {
          "line": 418,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 13344,
      "end": 13350,
      "loc": {
        "start": {
          "line": 419,
          "column": 0
        },
        "end": {
          "line": 419,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "const",
        "keyword": "const",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "const",
      "start": 13351,
      "end": 13356,
      "loc": {
        "start": {
          "line": 419,
          "column": 7
        },
        "end": {
          "line": 419,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "mapBy",
      "start": 13357,
      "end": 13362,
      "loc": {
        "start": {
          "line": 419,
          "column": 13
        },
        "end": {
          "line": 419,
          "column": 18
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 13363,
      "end": 13364,
      "loc": {
        "start": {
          "line": 419,
          "column": 19
        },
        "end": {
          "line": 419,
          "column": 20
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "decoratedPropertyWithRequiredParams",
      "start": 13365,
      "end": 13400,
      "loc": {
        "start": {
          "line": 419,
          "column": 21
        },
        "end": {
          "line": 419,
          "column": 56
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 13400,
      "end": 13401,
      "loc": {
        "start": {
          "line": 419,
          "column": 56
        },
        "end": {
          "line": 419,
          "column": 57
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "Ember",
      "start": 13401,
      "end": 13406,
      "loc": {
        "start": {
          "line": 419,
          "column": 57
        },
        "end": {
          "line": 419,
          "column": 62
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 13406,
      "end": 13407,
      "loc": {
        "start": {
          "line": 419,
          "column": 62
        },
        "end": {
          "line": 419,
          "column": 63
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "computed",
      "start": 13407,
      "end": 13415,
      "loc": {
        "start": {
          "line": 419,
          "column": 63
        },
        "end": {
          "line": 419,
          "column": 71
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 13415,
      "end": 13416,
      "loc": {
        "start": {
          "line": 419,
          "column": 71
        },
        "end": {
          "line": 419,
          "column": 72
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "mapBy",
      "start": 13416,
      "end": 13421,
      "loc": {
        "start": {
          "line": 419,
          "column": 72
        },
        "end": {
          "line": 419,
          "column": 77
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 13421,
      "end": 13422,
      "loc": {
        "start": {
          "line": 419,
          "column": 77
        },
        "end": {
          "line": 419,
          "column": 78
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 13422,
      "end": 13423,
      "loc": {
        "start": {
          "line": 419,
          "column": 78
        },
        "end": {
          "line": 419,
          "column": 79
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.match](http://emberjs.com/api/classes/Ember.computed.html#method_match)\n *\n * A computed property which matches the original value for the dependent\n * property against a given RegExp, returning `true` if they values matches\n * the RegExp and `false` if it does not.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { match } from 'ember-decorators/object/computed';\n *\n * export default class IsEmailValidComponent extends Component {\n *   email = 'tomster@emberjs.com';\n *\n *   @match('email', /^.+@.+\\..+$/) validEmail;\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - The property to match\n * @param {RegExp} pattern - The pattern to match against\n ",
      "start": 13425,
      "end": 14163,
      "loc": {
        "start": {
          "line": 421,
          "column": 0
        },
        "end": {
          "line": 442,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 14164,
      "end": 14170,
      "loc": {
        "start": {
          "line": 443,
          "column": 0
        },
        "end": {
          "line": 443,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "const",
        "keyword": "const",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "const",
      "start": 14171,
      "end": 14176,
      "loc": {
        "start": {
          "line": 443,
          "column": 7
        },
        "end": {
          "line": 443,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "match",
      "start": 14177,
      "end": 14182,
      "loc": {
        "start": {
          "line": 443,
          "column": 13
        },
        "end": {
          "line": 443,
          "column": 18
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 14183,
      "end": 14184,
      "loc": {
        "start": {
          "line": 443,
          "column": 19
        },
        "end": {
          "line": 443,
          "column": 20
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "decoratedPropertyWithRequiredParams",
      "start": 14185,
      "end": 14220,
      "loc": {
        "start": {
          "line": 443,
          "column": 21
        },
        "end": {
          "line": 443,
          "column": 56
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 14220,
      "end": 14221,
      "loc": {
        "start": {
          "line": 443,
          "column": 56
        },
        "end": {
          "line": 443,
          "column": 57
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "Ember",
      "start": 14221,
      "end": 14226,
      "loc": {
        "start": {
          "line": 443,
          "column": 57
        },
        "end": {
          "line": 443,
          "column": 62
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 14226,
      "end": 14227,
      "loc": {
        "start": {
          "line": 443,
          "column": 62
        },
        "end": {
          "line": 443,
          "column": 63
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "computed",
      "start": 14227,
      "end": 14235,
      "loc": {
        "start": {
          "line": 443,
          "column": 63
        },
        "end": {
          "line": 443,
          "column": 71
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 14235,
      "end": 14236,
      "loc": {
        "start": {
          "line": 443,
          "column": 71
        },
        "end": {
          "line": 443,
          "column": 72
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "match",
      "start": 14236,
      "end": 14241,
      "loc": {
        "start": {
          "line": 443,
          "column": 72
        },
        "end": {
          "line": 443,
          "column": 77
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 14241,
      "end": 14242,
      "loc": {
        "start": {
          "line": 443,
          "column": 77
        },
        "end": {
          "line": 443,
          "column": 78
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 14242,
      "end": 14243,
      "loc": {
        "start": {
          "line": 443,
          "column": 78
        },
        "end": {
          "line": 443,
          "column": 79
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.max](http://emberjs.com/api/classes/Ember.computed.html#method_max)\n *\n * A computed property that calculates the maximum value in the dependent\n * array. This will return `-Infinity` when the dependent array is empty.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { max } from 'ember-decorators/object/computed';\n *\n * export default class MaxValueComponent extends Component {\n *   values = A([1, 2, 5, 10]);\n *\n *   @max('values') maxValue; // 10\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the array to find the max value of\n ",
      "start": 14245,
      "end": 14913,
      "loc": {
        "start": {
          "line": 445,
          "column": 0
        },
        "end": {
          "line": 465,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 14914,
      "end": 14920,
      "loc": {
        "start": {
          "line": 466,
          "column": 0
        },
        "end": {
          "line": 466,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "const",
        "keyword": "const",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "const",
      "start": 14921,
      "end": 14926,
      "loc": {
        "start": {
          "line": 466,
          "column": 7
        },
        "end": {
          "line": 466,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "max",
      "start": 14927,
      "end": 14930,
      "loc": {
        "start": {
          "line": 466,
          "column": 13
        },
        "end": {
          "line": 466,
          "column": 16
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 14931,
      "end": 14932,
      "loc": {
        "start": {
          "line": 466,
          "column": 17
        },
        "end": {
          "line": 466,
          "column": 18
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "decoratedPropertyWithRequiredParams",
      "start": 14933,
      "end": 14968,
      "loc": {
        "start": {
          "line": 466,
          "column": 19
        },
        "end": {
          "line": 466,
          "column": 54
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 14968,
      "end": 14969,
      "loc": {
        "start": {
          "line": 466,
          "column": 54
        },
        "end": {
          "line": 466,
          "column": 55
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "Ember",
      "start": 14969,
      "end": 14974,
      "loc": {
        "start": {
          "line": 466,
          "column": 55
        },
        "end": {
          "line": 466,
          "column": 60
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 14974,
      "end": 14975,
      "loc": {
        "start": {
          "line": 466,
          "column": 60
        },
        "end": {
          "line": 466,
          "column": 61
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "computed",
      "start": 14975,
      "end": 14983,
      "loc": {
        "start": {
          "line": 466,
          "column": 61
        },
        "end": {
          "line": 466,
          "column": 69
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 14983,
      "end": 14984,
      "loc": {
        "start": {
          "line": 466,
          "column": 69
        },
        "end": {
          "line": 466,
          "column": 70
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "max",
      "start": 14984,
      "end": 14987,
      "loc": {
        "start": {
          "line": 466,
          "column": 70
        },
        "end": {
          "line": 466,
          "column": 73
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 14987,
      "end": 14988,
      "loc": {
        "start": {
          "line": 466,
          "column": 73
        },
        "end": {
          "line": 466,
          "column": 74
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 14988,
      "end": 14989,
      "loc": {
        "start": {
          "line": 466,
          "column": 74
        },
        "end": {
          "line": 466,
          "column": 75
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.min](http://emberjs.com/api/classes/Ember.computed.html#method_min)\n *\n * A computed property that calculates the minimum value in the dependent\n * array. This will return `Infinity` when the dependent array is empty.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { min } from 'ember-decorators/object/computed';\n *\n * export default class MinValueComponent extends Component {\n *   values = A([1, 2, 5, 10]);\n *\n *   @min('values') minValue; // 1\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the array to find the max value of\n ",
      "start": 14991,
      "end": 15657,
      "loc": {
        "start": {
          "line": 468,
          "column": 0
        },
        "end": {
          "line": 488,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 15658,
      "end": 15664,
      "loc": {
        "start": {
          "line": 489,
          "column": 0
        },
        "end": {
          "line": 489,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "const",
        "keyword": "const",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "const",
      "start": 15665,
      "end": 15670,
      "loc": {
        "start": {
          "line": 489,
          "column": 7
        },
        "end": {
          "line": 489,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "min",
      "start": 15671,
      "end": 15674,
      "loc": {
        "start": {
          "line": 489,
          "column": 13
        },
        "end": {
          "line": 489,
          "column": 16
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 15675,
      "end": 15676,
      "loc": {
        "start": {
          "line": 489,
          "column": 17
        },
        "end": {
          "line": 489,
          "column": 18
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "decoratedPropertyWithRequiredParams",
      "start": 15677,
      "end": 15712,
      "loc": {
        "start": {
          "line": 489,
          "column": 19
        },
        "end": {
          "line": 489,
          "column": 54
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 15712,
      "end": 15713,
      "loc": {
        "start": {
          "line": 489,
          "column": 54
        },
        "end": {
          "line": 489,
          "column": 55
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "Ember",
      "start": 15713,
      "end": 15718,
      "loc": {
        "start": {
          "line": 489,
          "column": 55
        },
        "end": {
          "line": 489,
          "column": 60
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 15718,
      "end": 15719,
      "loc": {
        "start": {
          "line": 489,
          "column": 60
        },
        "end": {
          "line": 489,
          "column": 61
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "computed",
      "start": 15719,
      "end": 15727,
      "loc": {
        "start": {
          "line": 489,
          "column": 61
        },
        "end": {
          "line": 489,
          "column": 69
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 15727,
      "end": 15728,
      "loc": {
        "start": {
          "line": 489,
          "column": 69
        },
        "end": {
          "line": 489,
          "column": 70
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "min",
      "start": 15728,
      "end": 15731,
      "loc": {
        "start": {
          "line": 489,
          "column": 70
        },
        "end": {
          "line": 489,
          "column": 73
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 15731,
      "end": 15732,
      "loc": {
        "start": {
          "line": 489,
          "column": 73
        },
        "end": {
          "line": 489,
          "column": 74
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 15732,
      "end": 15733,
      "loc": {
        "start": {
          "line": 489,
          "column": 74
        },
        "end": {
          "line": 489,
          "column": 75
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.none](http://emberjs.com/api/classes/Ember.computed.html#method_none)\n *\n * A computed property that returns true if the value of the dependent property\n * is null or undefined. This avoids errors from JSLint complaining about use\n * of `==`, which can be technically confusing.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { none } from 'ember-decorators/object/computed';\n *\n * export default class NameDisplayComponent extends Component {\n *   firstName = null;\n *\n *   @none('firstName') isNameless; // true unless firstName is defined\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to check\n ",
      "start": 15735,
      "end": 16444,
      "loc": {
        "start": {
          "line": 491,
          "column": 0
        },
        "end": {
          "line": 511,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 16445,
      "end": 16451,
      "loc": {
        "start": {
          "line": 512,
          "column": 0
        },
        "end": {
          "line": 512,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "const",
        "keyword": "const",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "const",
      "start": 16452,
      "end": 16457,
      "loc": {
        "start": {
          "line": 512,
          "column": 7
        },
        "end": {
          "line": 512,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "none",
      "start": 16458,
      "end": 16462,
      "loc": {
        "start": {
          "line": 512,
          "column": 13
        },
        "end": {
          "line": 512,
          "column": 17
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 16463,
      "end": 16464,
      "loc": {
        "start": {
          "line": 512,
          "column": 18
        },
        "end": {
          "line": 512,
          "column": 19
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "decoratedPropertyWithRequiredParams",
      "start": 16465,
      "end": 16500,
      "loc": {
        "start": {
          "line": 512,
          "column": 20
        },
        "end": {
          "line": 512,
          "column": 55
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 16500,
      "end": 16501,
      "loc": {
        "start": {
          "line": 512,
          "column": 55
        },
        "end": {
          "line": 512,
          "column": 56
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "Ember",
      "start": 16501,
      "end": 16506,
      "loc": {
        "start": {
          "line": 512,
          "column": 56
        },
        "end": {
          "line": 512,
          "column": 61
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 16506,
      "end": 16507,
      "loc": {
        "start": {
          "line": 512,
          "column": 61
        },
        "end": {
          "line": 512,
          "column": 62
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "computed",
      "start": 16507,
      "end": 16515,
      "loc": {
        "start": {
          "line": 512,
          "column": 62
        },
        "end": {
          "line": 512,
          "column": 70
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 16515,
      "end": 16516,
      "loc": {
        "start": {
          "line": 512,
          "column": 70
        },
        "end": {
          "line": 512,
          "column": 71
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "none",
      "start": 16516,
      "end": 16520,
      "loc": {
        "start": {
          "line": 512,
          "column": 71
        },
        "end": {
          "line": 512,
          "column": 75
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 16520,
      "end": 16521,
      "loc": {
        "start": {
          "line": 512,
          "column": 75
        },
        "end": {
          "line": 512,
          "column": 76
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 16521,
      "end": 16522,
      "loc": {
        "start": {
          "line": 512,
          "column": 76
        },
        "end": {
          "line": 512,
          "column": 77
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.not](http://emberjs.com/api/classes/Ember.computed.html#method_not)\n *\n * A computed property that returns the inverse boolean value of the original\n * value for the dependent property.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { not } from 'ember-decorators/object/computed';\n *\n * export default class UserInfoComponent extends Component {\n *   loggedIn = false;\n *\n *   @not('loggedIn') isAnonymous; // true\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to `not`\n ",
      "start": 16524,
      "end": 17107,
      "loc": {
        "start": {
          "line": 514,
          "column": 0
        },
        "end": {
          "line": 533,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 17108,
      "end": 17114,
      "loc": {
        "start": {
          "line": 534,
          "column": 0
        },
        "end": {
          "line": 534,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "const",
        "keyword": "const",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "const",
      "start": 17115,
      "end": 17120,
      "loc": {
        "start": {
          "line": 534,
          "column": 7
        },
        "end": {
          "line": 534,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "not",
      "start": 17121,
      "end": 17124,
      "loc": {
        "start": {
          "line": 534,
          "column": 13
        },
        "end": {
          "line": 534,
          "column": 16
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 17125,
      "end": 17126,
      "loc": {
        "start": {
          "line": 534,
          "column": 17
        },
        "end": {
          "line": 534,
          "column": 18
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "decoratedPropertyWithRequiredParams",
      "start": 17127,
      "end": 17162,
      "loc": {
        "start": {
          "line": 534,
          "column": 19
        },
        "end": {
          "line": 534,
          "column": 54
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 17162,
      "end": 17163,
      "loc": {
        "start": {
          "line": 534,
          "column": 54
        },
        "end": {
          "line": 534,
          "column": 55
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "Ember",
      "start": 17163,
      "end": 17168,
      "loc": {
        "start": {
          "line": 534,
          "column": 55
        },
        "end": {
          "line": 534,
          "column": 60
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 17168,
      "end": 17169,
      "loc": {
        "start": {
          "line": 534,
          "column": 60
        },
        "end": {
          "line": 534,
          "column": 61
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "computed",
      "start": 17169,
      "end": 17177,
      "loc": {
        "start": {
          "line": 534,
          "column": 61
        },
        "end": {
          "line": 534,
          "column": 69
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 17177,
      "end": 17178,
      "loc": {
        "start": {
          "line": 534,
          "column": 69
        },
        "end": {
          "line": 534,
          "column": 70
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "not",
      "start": 17178,
      "end": 17181,
      "loc": {
        "start": {
          "line": 534,
          "column": 70
        },
        "end": {
          "line": 534,
          "column": 73
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 17181,
      "end": 17182,
      "loc": {
        "start": {
          "line": 534,
          "column": 73
        },
        "end": {
          "line": 534,
          "column": 74
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 17182,
      "end": 17183,
      "loc": {
        "start": {
          "line": 534,
          "column": 74
        },
        "end": {
          "line": 534,
          "column": 75
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.notEmpty](http://emberjs.com/api/classes/Ember.computed.html#method_notEmpty)\n *\n * A computed property that returns `true` if the value of the dependent\n * property is NOT null, an empty string, empty array, or empty function.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { notEmpty } from 'ember-decorators/object/computed';\n *\n * export default class GroceryBagComponent extends Component {\n *   groceryBag = A(['milk', 'eggs', 'apples']);\n *\n *   @notEmpty('groceryBag') hasGroceriesToPutAway; // true\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to check\n ",
      "start": 17185,
      "end": 17897,
      "loc": {
        "start": {
          "line": 536,
          "column": 0
        },
        "end": {
          "line": 556,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 17898,
      "end": 17904,
      "loc": {
        "start": {
          "line": 557,
          "column": 0
        },
        "end": {
          "line": 557,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "const",
        "keyword": "const",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "const",
      "start": 17905,
      "end": 17910,
      "loc": {
        "start": {
          "line": 557,
          "column": 7
        },
        "end": {
          "line": 557,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "notEmpty",
      "start": 17911,
      "end": 17919,
      "loc": {
        "start": {
          "line": 557,
          "column": 13
        },
        "end": {
          "line": 557,
          "column": 21
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 17920,
      "end": 17921,
      "loc": {
        "start": {
          "line": 557,
          "column": 22
        },
        "end": {
          "line": 557,
          "column": 23
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "decoratedPropertyWithRequiredParams",
      "start": 17922,
      "end": 17957,
      "loc": {
        "start": {
          "line": 557,
          "column": 24
        },
        "end": {
          "line": 557,
          "column": 59
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 17957,
      "end": 17958,
      "loc": {
        "start": {
          "line": 557,
          "column": 59
        },
        "end": {
          "line": 557,
          "column": 60
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "Ember",
      "start": 17958,
      "end": 17963,
      "loc": {
        "start": {
          "line": 557,
          "column": 60
        },
        "end": {
          "line": 557,
          "column": 65
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 17963,
      "end": 17964,
      "loc": {
        "start": {
          "line": 557,
          "column": 65
        },
        "end": {
          "line": 557,
          "column": 66
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "computed",
      "start": 17964,
      "end": 17972,
      "loc": {
        "start": {
          "line": 557,
          "column": 66
        },
        "end": {
          "line": 557,
          "column": 74
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 17972,
      "end": 17973,
      "loc": {
        "start": {
          "line": 557,
          "column": 74
        },
        "end": {
          "line": 557,
          "column": 75
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "notEmpty",
      "start": 17973,
      "end": 17981,
      "loc": {
        "start": {
          "line": 557,
          "column": 75
        },
        "end": {
          "line": 557,
          "column": 83
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 17981,
      "end": 17982,
      "loc": {
        "start": {
          "line": 557,
          "column": 83
        },
        "end": {
          "line": 557,
          "column": 84
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 17982,
      "end": 17983,
      "loc": {
        "start": {
          "line": 557,
          "column": 84
        },
        "end": {
          "line": 557,
          "column": 85
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.oneWay](http://emberjs.com/api/classes/Ember.computed.html#method_oneWay)\n *\n * Where `computed.alias` aliases `get` and `set`, and allows for bidirectional\n * data flow, `computed.oneWay` only provides an aliased `get`. The `set` will\n * not mutate the upstream property, rather causes the current property to\n * become the value set. This causes the downstream property to permanently\n * diverge from the upstream property.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { oneWay } from 'ember-decorators/object/computed';\n *\n * export default class UserProfileComponent extends Component {\n *   firstName = 'Joe';\n *\n *   @oneWay('firstName') originalName; // will always be 'Joe'\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to alias\n ",
      "start": 17985,
      "end": 18836,
      "loc": {
        "start": {
          "line": 559,
          "column": 0
        },
        "end": {
          "line": 581,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 18837,
      "end": 18843,
      "loc": {
        "start": {
          "line": 582,
          "column": 0
        },
        "end": {
          "line": 582,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "const",
        "keyword": "const",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "const",
      "start": 18844,
      "end": 18849,
      "loc": {
        "start": {
          "line": 582,
          "column": 7
        },
        "end": {
          "line": 582,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "oneWay",
      "start": 18850,
      "end": 18856,
      "loc": {
        "start": {
          "line": 582,
          "column": 13
        },
        "end": {
          "line": 582,
          "column": 19
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 18857,
      "end": 18858,
      "loc": {
        "start": {
          "line": 582,
          "column": 20
        },
        "end": {
          "line": 582,
          "column": 21
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "decoratedPropertyWithRequiredParams",
      "start": 18859,
      "end": 18894,
      "loc": {
        "start": {
          "line": 582,
          "column": 22
        },
        "end": {
          "line": 582,
          "column": 57
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 18894,
      "end": 18895,
      "loc": {
        "start": {
          "line": 582,
          "column": 57
        },
        "end": {
          "line": 582,
          "column": 58
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "Ember",
      "start": 18895,
      "end": 18900,
      "loc": {
        "start": {
          "line": 582,
          "column": 58
        },
        "end": {
          "line": 582,
          "column": 63
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 18900,
      "end": 18901,
      "loc": {
        "start": {
          "line": 582,
          "column": 63
        },
        "end": {
          "line": 582,
          "column": 64
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "computed",
      "start": 18901,
      "end": 18909,
      "loc": {
        "start": {
          "line": 582,
          "column": 64
        },
        "end": {
          "line": 582,
          "column": 72
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 18909,
      "end": 18910,
      "loc": {
        "start": {
          "line": 582,
          "column": 72
        },
        "end": {
          "line": 582,
          "column": 73
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "oneWay",
      "start": 18910,
      "end": 18916,
      "loc": {
        "start": {
          "line": 582,
          "column": 73
        },
        "end": {
          "line": 582,
          "column": 79
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 18916,
      "end": 18917,
      "loc": {
        "start": {
          "line": 582,
          "column": 79
        },
        "end": {
          "line": 582,
          "column": 80
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 18917,
      "end": 18918,
      "loc": {
        "start": {
          "line": 582,
          "column": 80
        },
        "end": {
          "line": 582,
          "column": 81
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.or](http://emberjs.com/api/classes/Ember.computed.html#method_or)\n *\n * A computed property which performs a logical or on the original values for\n * the provided dependent properties.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { or } from 'ember-decorators/object/computed';\n *\n * export default class OutfitFeaturesComponent extends Component {\n *   hasJacket = true;\n *   hasUmbrella = false;\n *\n *   @or('hasJacket', 'hasUmbrella') isReadyForRain; // true\n * }\n * ```\n *\n * @function\n * @param {...String} dependentKey - Key for the properties to `or`\n ",
      "start": 18920,
      "end": 19555,
      "loc": {
        "start": {
          "line": 584,
          "column": 0
        },
        "end": {
          "line": 604,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 19556,
      "end": 19562,
      "loc": {
        "start": {
          "line": 605,
          "column": 0
        },
        "end": {
          "line": 605,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "const",
        "keyword": "const",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "const",
      "start": 19563,
      "end": 19568,
      "loc": {
        "start": {
          "line": 605,
          "column": 7
        },
        "end": {
          "line": 605,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "or",
      "start": 19569,
      "end": 19571,
      "loc": {
        "start": {
          "line": 605,
          "column": 13
        },
        "end": {
          "line": 605,
          "column": 15
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 19572,
      "end": 19573,
      "loc": {
        "start": {
          "line": 605,
          "column": 16
        },
        "end": {
          "line": 605,
          "column": 17
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "decoratedPropertyWithRequiredParams",
      "start": 19574,
      "end": 19609,
      "loc": {
        "start": {
          "line": 605,
          "column": 18
        },
        "end": {
          "line": 605,
          "column": 53
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 19609,
      "end": 19610,
      "loc": {
        "start": {
          "line": 605,
          "column": 53
        },
        "end": {
          "line": 605,
          "column": 54
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "Ember",
      "start": 19610,
      "end": 19615,
      "loc": {
        "start": {
          "line": 605,
          "column": 54
        },
        "end": {
          "line": 605,
          "column": 59
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 19615,
      "end": 19616,
      "loc": {
        "start": {
          "line": 605,
          "column": 59
        },
        "end": {
          "line": 605,
          "column": 60
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "computed",
      "start": 19616,
      "end": 19624,
      "loc": {
        "start": {
          "line": 605,
          "column": 60
        },
        "end": {
          "line": 605,
          "column": 68
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 19624,
      "end": 19625,
      "loc": {
        "start": {
          "line": 605,
          "column": 68
        },
        "end": {
          "line": 605,
          "column": 69
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "or",
      "start": 19625,
      "end": 19627,
      "loc": {
        "start": {
          "line": 605,
          "column": 69
        },
        "end": {
          "line": 605,
          "column": 71
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 19627,
      "end": 19628,
      "loc": {
        "start": {
          "line": 605,
          "column": 71
        },
        "end": {
          "line": 605,
          "column": 72
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 19628,
      "end": 19629,
      "loc": {
        "start": {
          "line": 605,
          "column": 72
        },
        "end": {
          "line": 605,
          "column": 73
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.reads](http://emberjs.com/api/classes/Ember.computed.html#method_reads)\n *\n * This is a more semantically meaningful alias of `computed.oneWay`, whose\n * name is somewhat ambiguous as to which direction the data flows.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { reads } from 'ember-decorators/object/computed';\n *\n * export default class UserProfileComponent extends Component {\n *   first = 'Tomster';\n *\n *   @reads('first') firstName;\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to read\n ",
      "start": 19631,
      "end": 20278,
      "loc": {
        "start": {
          "line": 607,
          "column": 0
        },
        "end": {
          "line": 627,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 20279,
      "end": 20285,
      "loc": {
        "start": {
          "line": 628,
          "column": 0
        },
        "end": {
          "line": 628,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "const",
        "keyword": "const",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "const",
      "start": 20286,
      "end": 20291,
      "loc": {
        "start": {
          "line": 628,
          "column": 7
        },
        "end": {
          "line": 628,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "reads",
      "start": 20292,
      "end": 20297,
      "loc": {
        "start": {
          "line": 628,
          "column": 13
        },
        "end": {
          "line": 628,
          "column": 18
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 20298,
      "end": 20299,
      "loc": {
        "start": {
          "line": 628,
          "column": 19
        },
        "end": {
          "line": 628,
          "column": 20
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "decoratedPropertyWithRequiredParams",
      "start": 20300,
      "end": 20335,
      "loc": {
        "start": {
          "line": 628,
          "column": 21
        },
        "end": {
          "line": 628,
          "column": 56
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 20335,
      "end": 20336,
      "loc": {
        "start": {
          "line": 628,
          "column": 56
        },
        "end": {
          "line": 628,
          "column": 57
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "Ember",
      "start": 20336,
      "end": 20341,
      "loc": {
        "start": {
          "line": 628,
          "column": 57
        },
        "end": {
          "line": 628,
          "column": 62
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 20341,
      "end": 20342,
      "loc": {
        "start": {
          "line": 628,
          "column": 62
        },
        "end": {
          "line": 628,
          "column": 63
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "computed",
      "start": 20342,
      "end": 20350,
      "loc": {
        "start": {
          "line": 628,
          "column": 63
        },
        "end": {
          "line": 628,
          "column": 71
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 20350,
      "end": 20351,
      "loc": {
        "start": {
          "line": 628,
          "column": 71
        },
        "end": {
          "line": 628,
          "column": 72
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "reads",
      "start": 20351,
      "end": 20356,
      "loc": {
        "start": {
          "line": 628,
          "column": 72
        },
        "end": {
          "line": 628,
          "column": 77
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 20356,
      "end": 20357,
      "loc": {
        "start": {
          "line": 628,
          "column": 77
        },
        "end": {
          "line": 628,
          "column": 78
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 20357,
      "end": 20358,
      "loc": {
        "start": {
          "line": 628,
          "column": 78
        },
        "end": {
          "line": 628,
          "column": 79
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.setDiff](http://emberjs.com/api/classes/Ember.computed.html#method_setDiff)\n *\n * A computed property which returns a new array with all the properties from\n * the first dependent array that are not in the second dependent array.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { setDiff } from 'ember-decorators/object/computed';\n *\n * export default class FavoriteThingsComponent extends Component {\n *   likes = A([ 'tacos', 'puppies', 'pizza' ]);\n *   foods = A(['tacos', 'pizza']);\n *\n *   @setDiff('likes', 'foods') favoriteThingsThatArentFood; // ['puppies']\n * }\n * ```\n *\n * @function\n * @param {String} setAProperty - Keys for the first set\n * @param {String} setBProperty - Keys for the first set\n ",
      "start": 20360,
      "end": 21179,
      "loc": {
        "start": {
          "line": 630,
          "column": 0
        },
        "end": {
          "line": 652,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 21180,
      "end": 21186,
      "loc": {
        "start": {
          "line": 653,
          "column": 0
        },
        "end": {
          "line": 653,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "const",
        "keyword": "const",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "const",
      "start": 21187,
      "end": 21192,
      "loc": {
        "start": {
          "line": 653,
          "column": 7
        },
        "end": {
          "line": 653,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "setDiff",
      "start": 21193,
      "end": 21200,
      "loc": {
        "start": {
          "line": 653,
          "column": 13
        },
        "end": {
          "line": 653,
          "column": 20
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 21201,
      "end": 21202,
      "loc": {
        "start": {
          "line": 653,
          "column": 21
        },
        "end": {
          "line": 653,
          "column": 22
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "decoratedPropertyWithRequiredParams",
      "start": 21203,
      "end": 21238,
      "loc": {
        "start": {
          "line": 653,
          "column": 23
        },
        "end": {
          "line": 653,
          "column": 58
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 21238,
      "end": 21239,
      "loc": {
        "start": {
          "line": 653,
          "column": 58
        },
        "end": {
          "line": 653,
          "column": 59
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "Ember",
      "start": 21239,
      "end": 21244,
      "loc": {
        "start": {
          "line": 653,
          "column": 59
        },
        "end": {
          "line": 653,
          "column": 64
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 21244,
      "end": 21245,
      "loc": {
        "start": {
          "line": 653,
          "column": 64
        },
        "end": {
          "line": 653,
          "column": 65
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "computed",
      "start": 21245,
      "end": 21253,
      "loc": {
        "start": {
          "line": 653,
          "column": 65
        },
        "end": {
          "line": 653,
          "column": 73
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 21253,
      "end": 21254,
      "loc": {
        "start": {
          "line": 653,
          "column": 73
        },
        "end": {
          "line": 653,
          "column": 74
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "setDiff",
      "start": 21254,
      "end": 21261,
      "loc": {
        "start": {
          "line": 653,
          "column": 74
        },
        "end": {
          "line": 653,
          "column": 81
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 21261,
      "end": 21262,
      "loc": {
        "start": {
          "line": 653,
          "column": 81
        },
        "end": {
          "line": 653,
          "column": 82
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 21262,
      "end": 21263,
      "loc": {
        "start": {
          "line": 653,
          "column": 82
        },
        "end": {
          "line": 653,
          "column": 83
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.sort](http://emberjs.com/api/classes/Ember.computed.html#method_sort)\n *\n * A computed property which returns a new array with all the properties from\n * the first dependent array sorted based on a property or sort function.\n *\n *\n * The callback method you provide should have the following signature:\n *\n * ```javascript\n * function(itemA, itemB);\n * ```\n * - `itemA` the first item to compare.\n * - `itemB` the second item to compare.\n *\n * This function should return negative number (e.g. `-1`) when `itemA` should\n * come before `itemB`. It should return positive number (e.g. `1`) when\n * `itemA` should come after `itemB`. If the `itemA` and `itemB` are equal this\n * function should return `0`.\n *\n * Therefore, if this function is comparing some numeric values, simple\n * `itemA - itemB` or `itemA.get( 'foo' ) - itemB.get( 'foo' )` can be used\n * instead of series of `if`.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { sort } from 'ember-decorators/object/computed';\n *\n * export default class SortNamesComponent extends Component {\n *   names = A([{name:'Link'},{name:'Zelda'},{name:'Ganon'},{name:'Navi'}]);\n *\n *   @sort('names')\n *   sortedNames(a, b){\n *     if (a.name > b.name) {\n *       return 1;\n *     } else if (a.name < b.name) {\n *       return -1;\n *     }\n *\n *     return 0;\n *   } // [{name:'Ganon'},{name:'Link'},{name:'Navi'},{name:'Zelda'}]\n *\n *   // alternative syntax:\n *\n *   @sort('names', function(a, b){\n *     if (a.name > b.name) {\n *       return 1;\n *     } else if (a.name < b.name) {\n *       return -1;\n *     }\n *\n *     return 0;\n *   }) sortedNames; // [{name:'Ganon'},{name:'Link'},{name:'Navi'},{name:'Zelda'}]\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - The key for the array that should be sorted\n * @param {Array<String>|Function(Any, Any): Number} sortDefinition - Sorting function or sort descriptor\n ",
      "start": 21265,
      "end": 23255,
      "loc": {
        "start": {
          "line": 655,
          "column": 0
        },
        "end": {
          "line": 715,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 23256,
      "end": 23262,
      "loc": {
        "start": {
          "line": 716,
          "column": 0
        },
        "end": {
          "line": 716,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "const",
        "keyword": "const",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "const",
      "start": 23263,
      "end": 23268,
      "loc": {
        "start": {
          "line": 716,
          "column": 7
        },
        "end": {
          "line": 716,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "sort",
      "start": 23269,
      "end": 23273,
      "loc": {
        "start": {
          "line": 716,
          "column": 13
        },
        "end": {
          "line": 716,
          "column": 17
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 23274,
      "end": 23275,
      "loc": {
        "start": {
          "line": 716,
          "column": 18
        },
        "end": {
          "line": 716,
          "column": 19
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "decoratedPropertyWithEitherCallbackOrProperty",
      "start": 23276,
      "end": 23321,
      "loc": {
        "start": {
          "line": 716,
          "column": 20
        },
        "end": {
          "line": 716,
          "column": 65
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 23321,
      "end": 23322,
      "loc": {
        "start": {
          "line": 716,
          "column": 65
        },
        "end": {
          "line": 716,
          "column": 66
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "Ember",
      "start": 23322,
      "end": 23327,
      "loc": {
        "start": {
          "line": 716,
          "column": 66
        },
        "end": {
          "line": 716,
          "column": 71
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 23327,
      "end": 23328,
      "loc": {
        "start": {
          "line": 716,
          "column": 71
        },
        "end": {
          "line": 716,
          "column": 72
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "computed",
      "start": 23328,
      "end": 23336,
      "loc": {
        "start": {
          "line": 716,
          "column": 72
        },
        "end": {
          "line": 716,
          "column": 80
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 23336,
      "end": 23337,
      "loc": {
        "start": {
          "line": 716,
          "column": 80
        },
        "end": {
          "line": 716,
          "column": 81
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "sort",
      "start": 23337,
      "end": 23341,
      "loc": {
        "start": {
          "line": 716,
          "column": 81
        },
        "end": {
          "line": 716,
          "column": 85
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 23341,
      "end": 23342,
      "loc": {
        "start": {
          "line": 716,
          "column": 85
        },
        "end": {
          "line": 716,
          "column": 86
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 23342,
      "end": 23343,
      "loc": {
        "start": {
          "line": 716,
          "column": 86
        },
        "end": {
          "line": 716,
          "column": 87
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.sum](http://emberjs.com/api/classes/Ember.computed.html#method_sum)\n *\n * A computed property that returns the sum of the value in the dependent\n * array.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { sum } from 'ember-decorators/object/computed';\n *\n * export default class SumValuesComponent extends Component {\n *   values = A([1, 2, 3]);\n *\n *   @sum('values') total; // 6\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key of the array to sum up\n ",
      "start": 23345,
      "end": 23926,
      "loc": {
        "start": {
          "line": 718,
          "column": 0
        },
        "end": {
          "line": 738,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 23927,
      "end": 23933,
      "loc": {
        "start": {
          "line": 739,
          "column": 0
        },
        "end": {
          "line": 739,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "const",
        "keyword": "const",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "const",
      "start": 23934,
      "end": 23939,
      "loc": {
        "start": {
          "line": 739,
          "column": 7
        },
        "end": {
          "line": 739,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "sum",
      "start": 23940,
      "end": 23943,
      "loc": {
        "start": {
          "line": 739,
          "column": 13
        },
        "end": {
          "line": 739,
          "column": 16
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 23944,
      "end": 23945,
      "loc": {
        "start": {
          "line": 739,
          "column": 17
        },
        "end": {
          "line": 739,
          "column": 18
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "decoratedPropertyWithRequiredParams",
      "start": 23946,
      "end": 23981,
      "loc": {
        "start": {
          "line": 739,
          "column": 19
        },
        "end": {
          "line": 739,
          "column": 54
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 23981,
      "end": 23982,
      "loc": {
        "start": {
          "line": 739,
          "column": 54
        },
        "end": {
          "line": 739,
          "column": 55
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "Ember",
      "start": 23982,
      "end": 23987,
      "loc": {
        "start": {
          "line": 739,
          "column": 55
        },
        "end": {
          "line": 739,
          "column": 60
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 23987,
      "end": 23988,
      "loc": {
        "start": {
          "line": 739,
          "column": 60
        },
        "end": {
          "line": 739,
          "column": 61
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "computed",
      "start": 23988,
      "end": 23996,
      "loc": {
        "start": {
          "line": 739,
          "column": 61
        },
        "end": {
          "line": 739,
          "column": 69
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 23996,
      "end": 23997,
      "loc": {
        "start": {
          "line": 739,
          "column": 69
        },
        "end": {
          "line": 739,
          "column": 70
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "sum",
      "start": 23997,
      "end": 24000,
      "loc": {
        "start": {
          "line": 739,
          "column": 70
        },
        "end": {
          "line": 739,
          "column": 73
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 24000,
      "end": 24001,
      "loc": {
        "start": {
          "line": 739,
          "column": 73
        },
        "end": {
          "line": 739,
          "column": 74
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 24001,
      "end": 24002,
      "loc": {
        "start": {
          "line": 739,
          "column": 74
        },
        "end": {
          "line": 739,
          "column": 75
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.union](http://emberjs.com/api/classes/Ember.computed.html#method_union)\n *\n * Alias for [union](http://emberjs.com/api/classes/Ember.computed.html#method_uniq).\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { union } from 'ember-decorators/object/computed';\n *\n * export default class LikesAndFoodsComponent extends Component {\n *   likes = A([ 'tacos', 'puppies', 'pizza' ]);\n *   foods = A(['tacos', 'pizza', 'ramen']);\n *\n *   @union('likes', 'foods') favorites; // ['tacos', 'puppies', 'pizza', 'ramen']\n * }\n * ```\n *\n * @function\n * @param {...String} dependentKeys - Keys of the arrays to union\n ",
      "start": 24004,
      "end": 24719,
      "loc": {
        "start": {
          "line": 741,
          "column": 0
        },
        "end": {
          "line": 761,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 24720,
      "end": 24726,
      "loc": {
        "start": {
          "line": 762,
          "column": 0
        },
        "end": {
          "line": 762,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "const",
        "keyword": "const",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "const",
      "start": 24727,
      "end": 24732,
      "loc": {
        "start": {
          "line": 762,
          "column": 7
        },
        "end": {
          "line": 762,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "union",
      "start": 24733,
      "end": 24738,
      "loc": {
        "start": {
          "line": 762,
          "column": 13
        },
        "end": {
          "line": 762,
          "column": 18
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 24739,
      "end": 24740,
      "loc": {
        "start": {
          "line": 762,
          "column": 19
        },
        "end": {
          "line": 762,
          "column": 20
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "decoratedPropertyWithRequiredParams",
      "start": 24741,
      "end": 24776,
      "loc": {
        "start": {
          "line": 762,
          "column": 21
        },
        "end": {
          "line": 762,
          "column": 56
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 24776,
      "end": 24777,
      "loc": {
        "start": {
          "line": 762,
          "column": 56
        },
        "end": {
          "line": 762,
          "column": 57
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "Ember",
      "start": 24777,
      "end": 24782,
      "loc": {
        "start": {
          "line": 762,
          "column": 57
        },
        "end": {
          "line": 762,
          "column": 62
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 24782,
      "end": 24783,
      "loc": {
        "start": {
          "line": 762,
          "column": 62
        },
        "end": {
          "line": 762,
          "column": 63
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "computed",
      "start": 24783,
      "end": 24791,
      "loc": {
        "start": {
          "line": 762,
          "column": 63
        },
        "end": {
          "line": 762,
          "column": 71
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 24791,
      "end": 24792,
      "loc": {
        "start": {
          "line": 762,
          "column": 71
        },
        "end": {
          "line": 762,
          "column": 72
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "union",
      "start": 24792,
      "end": 24797,
      "loc": {
        "start": {
          "line": 762,
          "column": 72
        },
        "end": {
          "line": 762,
          "column": 77
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 24797,
      "end": 24798,
      "loc": {
        "start": {
          "line": 762,
          "column": 77
        },
        "end": {
          "line": 762,
          "column": 78
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 24798,
      "end": 24799,
      "loc": {
        "start": {
          "line": 762,
          "column": 78
        },
        "end": {
          "line": 762,
          "column": 79
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.uniq](http://emberjs.com/api/classes/Ember.computed.html#method_uniq)\n *\n * A computed property which returns a new array with all the unique elements from one or more dependent arrays.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { uniq } from 'ember-decorators/object/computed';\n *\n * export default class FavoriteThingsComponent extends Component {\n *   likes = A([ 'tacos', 'puppies', 'pizza' ]);\n *   foods = A(['tacos', 'pizza', 'ramen']);\n *\n *   @uniq('likes', 'foods') favorites; // ['tacos', 'puppies', 'pizza', 'ramen']\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key of the array to uniq\n ",
      "start": 24801,
      "end": 25533,
      "loc": {
        "start": {
          "line": 764,
          "column": 0
        },
        "end": {
          "line": 784,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 25534,
      "end": 25540,
      "loc": {
        "start": {
          "line": 785,
          "column": 0
        },
        "end": {
          "line": 785,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "const",
        "keyword": "const",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "const",
      "start": 25541,
      "end": 25546,
      "loc": {
        "start": {
          "line": 785,
          "column": 7
        },
        "end": {
          "line": 785,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "uniq",
      "start": 25547,
      "end": 25551,
      "loc": {
        "start": {
          "line": 785,
          "column": 13
        },
        "end": {
          "line": 785,
          "column": 17
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 25552,
      "end": 25553,
      "loc": {
        "start": {
          "line": 785,
          "column": 18
        },
        "end": {
          "line": 785,
          "column": 19
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "decoratedPropertyWithRequiredParams",
      "start": 25554,
      "end": 25589,
      "loc": {
        "start": {
          "line": 785,
          "column": 20
        },
        "end": {
          "line": 785,
          "column": 55
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 25589,
      "end": 25590,
      "loc": {
        "start": {
          "line": 785,
          "column": 55
        },
        "end": {
          "line": 785,
          "column": 56
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "Ember",
      "start": 25590,
      "end": 25595,
      "loc": {
        "start": {
          "line": 785,
          "column": 56
        },
        "end": {
          "line": 785,
          "column": 61
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 25595,
      "end": 25596,
      "loc": {
        "start": {
          "line": 785,
          "column": 61
        },
        "end": {
          "line": 785,
          "column": 62
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "computed",
      "start": 25596,
      "end": 25604,
      "loc": {
        "start": {
          "line": 785,
          "column": 62
        },
        "end": {
          "line": 785,
          "column": 70
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 25604,
      "end": 25605,
      "loc": {
        "start": {
          "line": 785,
          "column": 70
        },
        "end": {
          "line": 785,
          "column": 71
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "uniq",
      "start": 25605,
      "end": 25609,
      "loc": {
        "start": {
          "line": 785,
          "column": 71
        },
        "end": {
          "line": 785,
          "column": 75
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 25609,
      "end": 25610,
      "loc": {
        "start": {
          "line": 785,
          "column": 75
        },
        "end": {
          "line": 785,
          "column": 76
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 25610,
      "end": 25611,
      "loc": {
        "start": {
          "line": 785,
          "column": 76
        },
        "end": {
          "line": 785,
          "column": 77
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.uniqBy](http://emberjs.com/api/classes/Ember.computed.html#method_uniqBy)\n *\n * A computed property which returns a new array with all the unique elements\n * from an array, with uniqueness determined by a specific key.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { uniqBy } from 'ember-decorators/object/computed';\n *\n * export default class FruitBowlComponent extends Component {\n *   fruits = A([\n *     { name: 'banana', color: 'yellow' },\n *     { name: 'apple',  color: 'red' },\n *     { name: 'kiwi',   color: 'brown' },\n *     { name: 'cherry', color: 'red' },\n *     { name: 'lemon',  color: 'yellow' }\n *   ]);\n *\n *   @uniqBy('fruits', 'color') oneOfEachColor;\n *   // [\n *   //  { name: 'banana', color: 'yellow'},\n *   //  { name: 'apple',  color: 'red'},\n *   //  { name: 'kiwi',   color: 'brown'}\n *   // ]\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key of the array to uniq\n * @param {String} propertyKey - Key of the property on the objects of the array to determine uniqueness by\n ",
      "start": 25613,
      "end": 26744,
      "loc": {
        "start": {
          "line": 787,
          "column": 0
        },
        "end": {
          "line": 819,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 26745,
      "end": 26751,
      "loc": {
        "start": {
          "line": 820,
          "column": 0
        },
        "end": {
          "line": 820,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "const",
        "keyword": "const",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "const",
      "start": 26752,
      "end": 26757,
      "loc": {
        "start": {
          "line": 820,
          "column": 7
        },
        "end": {
          "line": 820,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "uniqBy",
      "start": 26758,
      "end": 26764,
      "loc": {
        "start": {
          "line": 820,
          "column": 13
        },
        "end": {
          "line": 820,
          "column": 19
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 26765,
      "end": 26766,
      "loc": {
        "start": {
          "line": 820,
          "column": 20
        },
        "end": {
          "line": 820,
          "column": 21
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "SUPPORTS_UNIQ_BY_COMPUTED",
      "start": 26767,
      "end": 26792,
      "loc": {
        "start": {
          "line": 820,
          "column": 22
        },
        "end": {
          "line": 820,
          "column": 47
        }
      }
    },
    {
      "type": {
        "label": "?",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 26793,
      "end": 26794,
      "loc": {
        "start": {
          "line": 820,
          "column": 48
        },
        "end": {
          "line": 820,
          "column": 49
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "decoratedPropertyWithRequiredParams",
      "start": 26797,
      "end": 26832,
      "loc": {
        "start": {
          "line": 821,
          "column": 2
        },
        "end": {
          "line": 821,
          "column": 37
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 26832,
      "end": 26833,
      "loc": {
        "start": {
          "line": 821,
          "column": 37
        },
        "end": {
          "line": 821,
          "column": 38
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "Ember",
      "start": 26833,
      "end": 26838,
      "loc": {
        "start": {
          "line": 821,
          "column": 38
        },
        "end": {
          "line": 821,
          "column": 43
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 26838,
      "end": 26839,
      "loc": {
        "start": {
          "line": 821,
          "column": 43
        },
        "end": {
          "line": 821,
          "column": 44
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "computed",
      "start": 26839,
      "end": 26847,
      "loc": {
        "start": {
          "line": 821,
          "column": 44
        },
        "end": {
          "line": 821,
          "column": 52
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 26847,
      "end": 26848,
      "loc": {
        "start": {
          "line": 821,
          "column": 52
        },
        "end": {
          "line": 821,
          "column": 53
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "uniqBy",
      "start": 26848,
      "end": 26854,
      "loc": {
        "start": {
          "line": 821,
          "column": 53
        },
        "end": {
          "line": 821,
          "column": 59
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 26854,
      "end": 26855,
      "loc": {
        "start": {
          "line": 821,
          "column": 59
        },
        "end": {
          "line": 821,
          "column": 60
        }
      }
    },
    {
      "type": {
        "label": ":",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 26856,
      "end": 26857,
      "loc": {
        "start": {
          "line": 821,
          "column": 61
        },
        "end": {
          "line": 821,
          "column": 62
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 26860,
      "end": 26861,
      "loc": {
        "start": {
          "line": 822,
          "column": 2
        },
        "end": {
          "line": 822,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 26861,
      "end": 26862,
      "loc": {
        "start": {
          "line": 822,
          "column": 3
        },
        "end": {
          "line": 822,
          "column": 4
        }
      }
    },
    {
      "type": {
        "label": "=>",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 26863,
      "end": 26865,
      "loc": {
        "start": {
          "line": 822,
          "column": 5
        },
        "end": {
          "line": 822,
          "column": 7
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 26866,
      "end": 26867,
      "loc": {
        "start": {
          "line": 822,
          "column": 8
        },
        "end": {
          "line": 822,
          "column": 9
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "assert",
      "start": 26872,
      "end": 26878,
      "loc": {
        "start": {
          "line": 823,
          "column": 4
        },
        "end": {
          "line": 823,
          "column": 10
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 26878,
      "end": 26879,
      "loc": {
        "start": {
          "line": 823,
          "column": 10
        },
        "end": {
          "line": 823,
          "column": 11
        }
      }
    },
    {
      "type": {
        "label": "string",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "uniqBy is only available from Ember.js v2.7 onwards.",
      "start": 26879,
      "end": 26933,
      "loc": {
        "start": {
          "line": 823,
          "column": 11
        },
        "end": {
          "line": 823,
          "column": 65
        }
      }
    },
    {
      "type": {
        "label": ",",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 26933,
      "end": 26934,
      "loc": {
        "start": {
          "line": 823,
          "column": 65
        },
        "end": {
          "line": 823,
          "column": 66
        }
      }
    },
    {
      "type": {
        "label": "false",
        "keyword": "false",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "false",
      "start": 26935,
      "end": 26940,
      "loc": {
        "start": {
          "line": 823,
          "column": 67
        },
        "end": {
          "line": 823,
          "column": 72
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 26940,
      "end": 26941,
      "loc": {
        "start": {
          "line": 823,
          "column": 72
        },
        "end": {
          "line": 823,
          "column": 73
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 26941,
      "end": 26942,
      "loc": {
        "start": {
          "line": 823,
          "column": 73
        },
        "end": {
          "line": 823,
          "column": 74
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 26945,
      "end": 26946,
      "loc": {
        "start": {
          "line": 824,
          "column": 2
        },
        "end": {
          "line": 824,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 26946,
      "end": 26947,
      "loc": {
        "start": {
          "line": 824,
          "column": 3
        },
        "end": {
          "line": 824,
          "column": 4
        }
      }
    },
    {
      "type": {
        "label": "eof",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 26948,
      "end": 26948,
      "loc": {
        "start": {
          "line": 825,
          "column": 0
        },
        "end": {
          "line": 825,
          "column": 0
        }
      }
    }
  ]
}