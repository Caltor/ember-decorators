{
  "type": "File",
  "start": 0,
  "end": 26926,
  "loc": {
    "start": {
      "line": 1,
      "column": 0
    },
    "end": {
      "line": 824,
      "column": 0
    }
  },
  "program": {
    "type": "Program",
    "start": 0,
    "end": 26926,
    "loc": {
      "start": {
        "line": 1,
        "column": 0
      },
      "end": {
        "line": 824,
        "column": 0
      }
    },
    "sourceType": "module",
    "body": [
      {
        "type": "ImportDeclaration",
        "start": 0,
        "end": 26,
        "loc": {
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 26
          }
        },
        "specifiers": [
          {
            "type": "ImportDefaultSpecifier",
            "start": 7,
            "end": 12,
            "loc": {
              "start": {
                "line": 1,
                "column": 7
              },
              "end": {
                "line": 1,
                "column": 12
              }
            },
            "local": {
              "type": "Identifier",
              "start": 7,
              "end": 12,
              "loc": {
                "start": {
                  "line": 1,
                  "column": 7
                },
                "end": {
                  "line": 1,
                  "column": 12
                },
                "identifierName": "Ember"
              },
              "name": "Ember"
            }
          }
        ],
        "source": {
          "type": "StringLiteral",
          "start": 18,
          "end": 25,
          "loc": {
            "start": {
              "line": 1,
              "column": 18
            },
            "end": {
              "line": 1,
              "column": 25
            }
          },
          "extra": {
            "rawValue": "ember",
            "raw": "'ember'"
          },
          "value": "ember"
        }
      },
      {
        "type": "ImportDeclaration",
        "start": 27,
        "end": 65,
        "loc": {
          "start": {
            "line": 2,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 38
          }
        },
        "specifiers": [
          {
            "type": "ImportSpecifier",
            "start": 36,
            "end": 42,
            "loc": {
              "start": {
                "line": 2,
                "column": 9
              },
              "end": {
                "line": 2,
                "column": 15
              }
            },
            "imported": {
              "type": "Identifier",
              "start": 36,
              "end": 42,
              "loc": {
                "start": {
                  "line": 2,
                  "column": 9
                },
                "end": {
                  "line": 2,
                  "column": 15
                },
                "identifierName": "assert"
              },
              "name": "assert"
            },
            "local": {
              "type": "Identifier",
              "start": 36,
              "end": 42,
              "loc": {
                "start": {
                  "line": 2,
                  "column": 9
                },
                "end": {
                  "line": 2,
                  "column": 15
                },
                "identifierName": "assert"
              },
              "name": "assert"
            }
          }
        ],
        "source": {
          "type": "StringLiteral",
          "start": 50,
          "end": 64,
          "loc": {
            "start": {
              "line": 2,
              "column": 23
            },
            "end": {
              "line": 2,
              "column": 37
            }
          },
          "extra": {
            "rawValue": "@ember/debug",
            "raw": "'@ember/debug'"
          },
          "value": "@ember/debug"
        }
      },
      {
        "type": "ImportDeclaration",
        "start": 66,
        "end": 253,
        "loc": {
          "start": {
            "line": 3,
            "column": 0
          },
          "end": {
            "line": 7,
            "column": 50
          }
        },
        "specifiers": [
          {
            "type": "ImportSpecifier",
            "start": 77,
            "end": 112,
            "loc": {
              "start": {
                "line": 4,
                "column": 2
              },
              "end": {
                "line": 4,
                "column": 37
              }
            },
            "imported": {
              "type": "Identifier",
              "start": 77,
              "end": 112,
              "loc": {
                "start": {
                  "line": 4,
                  "column": 2
                },
                "end": {
                  "line": 4,
                  "column": 37
                },
                "identifierName": "decoratedPropertyWithRequiredParams"
              },
              "name": "decoratedPropertyWithRequiredParams"
            },
            "local": {
              "type": "Identifier",
              "start": 77,
              "end": 112,
              "loc": {
                "start": {
                  "line": 4,
                  "column": 2
                },
                "end": {
                  "line": 4,
                  "column": 37
                },
                "identifierName": "decoratedPropertyWithRequiredParams"
              },
              "name": "decoratedPropertyWithRequiredParams"
            }
          },
          {
            "type": "ImportSpecifier",
            "start": 116,
            "end": 153,
            "loc": {
              "start": {
                "line": 5,
                "column": 2
              },
              "end": {
                "line": 5,
                "column": 39
              }
            },
            "imported": {
              "type": "Identifier",
              "start": 116,
              "end": 153,
              "loc": {
                "start": {
                  "line": 5,
                  "column": 2
                },
                "end": {
                  "line": 5,
                  "column": 39
                },
                "identifierName": "decoratedPropertyWithOptionalCallback"
              },
              "name": "decoratedPropertyWithOptionalCallback"
            },
            "local": {
              "type": "Identifier",
              "start": 116,
              "end": 153,
              "loc": {
                "start": {
                  "line": 5,
                  "column": 2
                },
                "end": {
                  "line": 5,
                  "column": 39
                },
                "identifierName": "decoratedPropertyWithOptionalCallback"
              },
              "name": "decoratedPropertyWithOptionalCallback"
            }
          },
          {
            "type": "ImportSpecifier",
            "start": 157,
            "end": 202,
            "loc": {
              "start": {
                "line": 6,
                "column": 2
              },
              "end": {
                "line": 6,
                "column": 47
              }
            },
            "imported": {
              "type": "Identifier",
              "start": 157,
              "end": 202,
              "loc": {
                "start": {
                  "line": 6,
                  "column": 2
                },
                "end": {
                  "line": 6,
                  "column": 47
                },
                "identifierName": "decoratedPropertyWithEitherCallbackOrProperty"
              },
              "name": "decoratedPropertyWithEitherCallbackOrProperty"
            },
            "local": {
              "type": "Identifier",
              "start": 157,
              "end": 202,
              "loc": {
                "start": {
                  "line": 6,
                  "column": 2
                },
                "end": {
                  "line": 6,
                  "column": 47
                },
                "identifierName": "decoratedPropertyWithEitherCallbackOrProperty"
              },
              "name": "decoratedPropertyWithEitherCallbackOrProperty"
            }
          }
        ],
        "source": {
          "type": "StringLiteral",
          "start": 210,
          "end": 252,
          "loc": {
            "start": {
              "line": 7,
              "column": 7
            },
            "end": {
              "line": 7,
              "column": 49
            }
          },
          "extra": {
            "rawValue": "@ember-decorators/utils/decorator-macros",
            "raw": "'@ember-decorators/utils/decorator-macros'"
          },
          "value": "@ember-decorators/utils/decorator-macros"
        }
      },
      {
        "type": "ImportDeclaration",
        "start": 255,
        "end": 329,
        "loc": {
          "start": {
            "line": 9,
            "column": 0
          },
          "end": {
            "line": 11,
            "column": 37
          }
        },
        "specifiers": [
          {
            "type": "ImportSpecifier",
            "start": 266,
            "end": 291,
            "loc": {
              "start": {
                "line": 10,
                "column": 2
              },
              "end": {
                "line": 10,
                "column": 27
              }
            },
            "imported": {
              "type": "Identifier",
              "start": 266,
              "end": 291,
              "loc": {
                "start": {
                  "line": 10,
                  "column": 2
                },
                "end": {
                  "line": 10,
                  "column": 27
                },
                "identifierName": "SUPPORTS_UNIQ_BY_COMPUTED"
              },
              "name": "SUPPORTS_UNIQ_BY_COMPUTED"
            },
            "local": {
              "type": "Identifier",
              "start": 266,
              "end": 291,
              "loc": {
                "start": {
                  "line": 10,
                  "column": 2
                },
                "end": {
                  "line": 10,
                  "column": 27
                },
                "identifierName": "SUPPORTS_UNIQ_BY_COMPUTED"
              },
              "name": "SUPPORTS_UNIQ_BY_COMPUTED"
            }
          }
        ],
        "source": {
          "type": "StringLiteral",
          "start": 299,
          "end": 328,
          "loc": {
            "start": {
              "line": 11,
              "column": 7
            },
            "end": {
              "line": 11,
              "column": 36
            }
          },
          "extra": {
            "rawValue": "ember-compatibility-helpers",
            "raw": "'ember-compatibility-helpers'"
          },
          "value": "ember-compatibility-helpers"
        },
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.alias](http://emberjs.com/api/classes/Ember.computed.html#method_alias)\n *\n * Creates a new property that is an alias for another property on an object.\n * Calls to get or set this property behave as though they were called on\n * the original property.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { alias } from 'ember-decorators/object/computed';\n *\n * export default class UserProfileComponent extends Component {\n *   person = {\n *     first: 'Joe'\n *   };\n *\n *   @alias('person.first') firstName;\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the aliased property\n ",
            "start": 331,
            "end": 1002,
            "loc": {
              "start": {
                "line": 13,
                "column": 0
              },
              "end": {
                "line": 35,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 1003,
        "end": 1082,
        "loc": {
          "start": {
            "line": 36,
            "column": 0
          },
          "end": {
            "line": 36,
            "column": 79
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "VariableDeclaration",
          "start": 1010,
          "end": 1082,
          "loc": {
            "start": {
              "line": 36,
              "column": 7
            },
            "end": {
              "line": 36,
              "column": 79
            }
          },
          "declarations": [
            {
              "type": "VariableDeclarator",
              "start": 1016,
              "end": 1081,
              "loc": {
                "start": {
                  "line": 36,
                  "column": 13
                },
                "end": {
                  "line": 36,
                  "column": 78
                }
              },
              "id": {
                "type": "Identifier",
                "start": 1016,
                "end": 1021,
                "loc": {
                  "start": {
                    "line": 36,
                    "column": 13
                  },
                  "end": {
                    "line": 36,
                    "column": 18
                  },
                  "identifierName": "alias"
                },
                "name": "alias",
                "leadingComments": null
              },
              "init": {
                "type": "CallExpression",
                "start": 1024,
                "end": 1081,
                "loc": {
                  "start": {
                    "line": 36,
                    "column": 21
                  },
                  "end": {
                    "line": 36,
                    "column": 78
                  }
                },
                "callee": {
                  "type": "Identifier",
                  "start": 1024,
                  "end": 1059,
                  "loc": {
                    "start": {
                      "line": 36,
                      "column": 21
                    },
                    "end": {
                      "line": 36,
                      "column": 56
                    },
                    "identifierName": "decoratedPropertyWithRequiredParams"
                  },
                  "name": "decoratedPropertyWithRequiredParams"
                },
                "arguments": [
                  {
                    "type": "MemberExpression",
                    "start": 1060,
                    "end": 1080,
                    "loc": {
                      "start": {
                        "line": 36,
                        "column": 57
                      },
                      "end": {
                        "line": 36,
                        "column": 77
                      }
                    },
                    "object": {
                      "type": "MemberExpression",
                      "start": 1060,
                      "end": 1074,
                      "loc": {
                        "start": {
                          "line": 36,
                          "column": 57
                        },
                        "end": {
                          "line": 36,
                          "column": 71
                        }
                      },
                      "object": {
                        "type": "Identifier",
                        "start": 1060,
                        "end": 1065,
                        "loc": {
                          "start": {
                            "line": 36,
                            "column": 57
                          },
                          "end": {
                            "line": 36,
                            "column": 62
                          },
                          "identifierName": "Ember"
                        },
                        "name": "Ember"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 1066,
                        "end": 1074,
                        "loc": {
                          "start": {
                            "line": 36,
                            "column": 63
                          },
                          "end": {
                            "line": 36,
                            "column": 71
                          },
                          "identifierName": "computed"
                        },
                        "name": "computed"
                      },
                      "computed": false
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 1075,
                      "end": 1080,
                      "loc": {
                        "start": {
                          "line": 36,
                          "column": 72
                        },
                        "end": {
                          "line": 36,
                          "column": 77
                        },
                        "identifierName": "alias"
                      },
                      "name": "alias"
                    },
                    "computed": false
                  }
                ]
              },
              "leadingComments": null
            }
          ],
          "kind": "const",
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.alias](http://emberjs.com/api/classes/Ember.computed.html#method_alias)\n *\n * Creates a new property that is an alias for another property on an object.\n * Calls to get or set this property behave as though they were called on\n * the original property.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { alias } from 'ember-decorators/object/computed';\n *\n * export default class UserProfileComponent extends Component {\n *   person = {\n *     first: 'Joe'\n *   };\n *\n *   @alias('person.first') firstName;\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the aliased property\n ",
              "start": 331,
              "end": 1002,
              "loc": {
                "start": {
                  "line": 13,
                  "column": 0
                },
                "end": {
                  "line": 35,
                  "column": 3
                }
              }
            }
          ],
          "trailingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.and](http://emberjs.com/api/classes/Ember.computed.html#method_and)\n *\n * A computed property that performs a logical and on the original values\n * for the provided dependent properties.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { and } from 'ember-decorators/object/computed';\n *\n * export default class UserProfileComponent extends Component {\n *   person = {\n *     first: 'Joe'\n *   };\n *\n *   @and('person.{first,last}') hasFullName; // false\n * }\n * ```\n *\n * @function\n * @param {...String} dependentKeys - Keys for properties to `and`\n ",
              "start": 1084,
              "end": 1707,
              "loc": {
                "start": {
                  "line": 38,
                  "column": 0
                },
                "end": {
                  "line": 59,
                  "column": 3
                }
              }
            }
          ]
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.alias](http://emberjs.com/api/classes/Ember.computed.html#method_alias)\n *\n * Creates a new property that is an alias for another property on an object.\n * Calls to get or set this property behave as though they were called on\n * the original property.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { alias } from 'ember-decorators/object/computed';\n *\n * export default class UserProfileComponent extends Component {\n *   person = {\n *     first: 'Joe'\n *   };\n *\n *   @alias('person.first') firstName;\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the aliased property\n ",
            "start": 331,
            "end": 1002,
            "loc": {
              "start": {
                "line": 13,
                "column": 0
              },
              "end": {
                "line": 35,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.and](http://emberjs.com/api/classes/Ember.computed.html#method_and)\n *\n * A computed property that performs a logical and on the original values\n * for the provided dependent properties.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { and } from 'ember-decorators/object/computed';\n *\n * export default class UserProfileComponent extends Component {\n *   person = {\n *     first: 'Joe'\n *   };\n *\n *   @and('person.{first,last}') hasFullName; // false\n * }\n * ```\n *\n * @function\n * @param {...String} dependentKeys - Keys for properties to `and`\n ",
            "start": 1084,
            "end": 1707,
            "loc": {
              "start": {
                "line": 38,
                "column": 0
              },
              "end": {
                "line": 59,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 1708,
        "end": 1783,
        "loc": {
          "start": {
            "line": 60,
            "column": 0
          },
          "end": {
            "line": 60,
            "column": 75
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "VariableDeclaration",
          "start": 1715,
          "end": 1783,
          "loc": {
            "start": {
              "line": 60,
              "column": 7
            },
            "end": {
              "line": 60,
              "column": 75
            }
          },
          "declarations": [
            {
              "type": "VariableDeclarator",
              "start": 1721,
              "end": 1782,
              "loc": {
                "start": {
                  "line": 60,
                  "column": 13
                },
                "end": {
                  "line": 60,
                  "column": 74
                }
              },
              "id": {
                "type": "Identifier",
                "start": 1721,
                "end": 1724,
                "loc": {
                  "start": {
                    "line": 60,
                    "column": 13
                  },
                  "end": {
                    "line": 60,
                    "column": 16
                  },
                  "identifierName": "and"
                },
                "name": "and",
                "leadingComments": null
              },
              "init": {
                "type": "CallExpression",
                "start": 1727,
                "end": 1782,
                "loc": {
                  "start": {
                    "line": 60,
                    "column": 19
                  },
                  "end": {
                    "line": 60,
                    "column": 74
                  }
                },
                "callee": {
                  "type": "Identifier",
                  "start": 1727,
                  "end": 1762,
                  "loc": {
                    "start": {
                      "line": 60,
                      "column": 19
                    },
                    "end": {
                      "line": 60,
                      "column": 54
                    },
                    "identifierName": "decoratedPropertyWithRequiredParams"
                  },
                  "name": "decoratedPropertyWithRequiredParams"
                },
                "arguments": [
                  {
                    "type": "MemberExpression",
                    "start": 1763,
                    "end": 1781,
                    "loc": {
                      "start": {
                        "line": 60,
                        "column": 55
                      },
                      "end": {
                        "line": 60,
                        "column": 73
                      }
                    },
                    "object": {
                      "type": "MemberExpression",
                      "start": 1763,
                      "end": 1777,
                      "loc": {
                        "start": {
                          "line": 60,
                          "column": 55
                        },
                        "end": {
                          "line": 60,
                          "column": 69
                        }
                      },
                      "object": {
                        "type": "Identifier",
                        "start": 1763,
                        "end": 1768,
                        "loc": {
                          "start": {
                            "line": 60,
                            "column": 55
                          },
                          "end": {
                            "line": 60,
                            "column": 60
                          },
                          "identifierName": "Ember"
                        },
                        "name": "Ember"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 1769,
                        "end": 1777,
                        "loc": {
                          "start": {
                            "line": 60,
                            "column": 61
                          },
                          "end": {
                            "line": 60,
                            "column": 69
                          },
                          "identifierName": "computed"
                        },
                        "name": "computed"
                      },
                      "computed": false
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 1778,
                      "end": 1781,
                      "loc": {
                        "start": {
                          "line": 60,
                          "column": 70
                        },
                        "end": {
                          "line": 60,
                          "column": 73
                        },
                        "identifierName": "and"
                      },
                      "name": "and"
                    },
                    "computed": false
                  }
                ]
              },
              "leadingComments": null
            }
          ],
          "kind": "const",
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.and](http://emberjs.com/api/classes/Ember.computed.html#method_and)\n *\n * A computed property that performs a logical and on the original values\n * for the provided dependent properties.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { and } from 'ember-decorators/object/computed';\n *\n * export default class UserProfileComponent extends Component {\n *   person = {\n *     first: 'Joe'\n *   };\n *\n *   @and('person.{first,last}') hasFullName; // false\n * }\n * ```\n *\n * @function\n * @param {...String} dependentKeys - Keys for properties to `and`\n ",
              "start": 1084,
              "end": 1707,
              "loc": {
                "start": {
                  "line": 38,
                  "column": 0
                },
                "end": {
                  "line": 59,
                  "column": 3
                }
              }
            }
          ],
          "trailingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.bool](http://emberjs.com/api/classes/Ember.computed.html#method_bool)\n *\n * A computed property that converts the provided dependent property into a\n * boolean value.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { bool } from 'ember-decorators/object/computed';\n *\n * export default class MessagesNotificationComponent extends Component {\n *   messageCount = 1;\n *\n *   @bool('messageCount') hasMessages; // true\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to convert\n ",
              "start": 1785,
              "end": 2369,
              "loc": {
                "start": {
                  "line": 62,
                  "column": 0
                },
                "end": {
                  "line": 81,
                  "column": 3
                }
              }
            }
          ]
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.and](http://emberjs.com/api/classes/Ember.computed.html#method_and)\n *\n * A computed property that performs a logical and on the original values\n * for the provided dependent properties.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { and } from 'ember-decorators/object/computed';\n *\n * export default class UserProfileComponent extends Component {\n *   person = {\n *     first: 'Joe'\n *   };\n *\n *   @and('person.{first,last}') hasFullName; // false\n * }\n * ```\n *\n * @function\n * @param {...String} dependentKeys - Keys for properties to `and`\n ",
            "start": 1084,
            "end": 1707,
            "loc": {
              "start": {
                "line": 38,
                "column": 0
              },
              "end": {
                "line": 59,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.bool](http://emberjs.com/api/classes/Ember.computed.html#method_bool)\n *\n * A computed property that converts the provided dependent property into a\n * boolean value.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { bool } from 'ember-decorators/object/computed';\n *\n * export default class MessagesNotificationComponent extends Component {\n *   messageCount = 1;\n *\n *   @bool('messageCount') hasMessages; // true\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to convert\n ",
            "start": 1785,
            "end": 2369,
            "loc": {
              "start": {
                "line": 62,
                "column": 0
              },
              "end": {
                "line": 81,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 2370,
        "end": 2447,
        "loc": {
          "start": {
            "line": 82,
            "column": 0
          },
          "end": {
            "line": 82,
            "column": 77
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "VariableDeclaration",
          "start": 2377,
          "end": 2447,
          "loc": {
            "start": {
              "line": 82,
              "column": 7
            },
            "end": {
              "line": 82,
              "column": 77
            }
          },
          "declarations": [
            {
              "type": "VariableDeclarator",
              "start": 2383,
              "end": 2446,
              "loc": {
                "start": {
                  "line": 82,
                  "column": 13
                },
                "end": {
                  "line": 82,
                  "column": 76
                }
              },
              "id": {
                "type": "Identifier",
                "start": 2383,
                "end": 2387,
                "loc": {
                  "start": {
                    "line": 82,
                    "column": 13
                  },
                  "end": {
                    "line": 82,
                    "column": 17
                  },
                  "identifierName": "bool"
                },
                "name": "bool",
                "leadingComments": null
              },
              "init": {
                "type": "CallExpression",
                "start": 2390,
                "end": 2446,
                "loc": {
                  "start": {
                    "line": 82,
                    "column": 20
                  },
                  "end": {
                    "line": 82,
                    "column": 76
                  }
                },
                "callee": {
                  "type": "Identifier",
                  "start": 2390,
                  "end": 2425,
                  "loc": {
                    "start": {
                      "line": 82,
                      "column": 20
                    },
                    "end": {
                      "line": 82,
                      "column": 55
                    },
                    "identifierName": "decoratedPropertyWithRequiredParams"
                  },
                  "name": "decoratedPropertyWithRequiredParams"
                },
                "arguments": [
                  {
                    "type": "MemberExpression",
                    "start": 2426,
                    "end": 2445,
                    "loc": {
                      "start": {
                        "line": 82,
                        "column": 56
                      },
                      "end": {
                        "line": 82,
                        "column": 75
                      }
                    },
                    "object": {
                      "type": "MemberExpression",
                      "start": 2426,
                      "end": 2440,
                      "loc": {
                        "start": {
                          "line": 82,
                          "column": 56
                        },
                        "end": {
                          "line": 82,
                          "column": 70
                        }
                      },
                      "object": {
                        "type": "Identifier",
                        "start": 2426,
                        "end": 2431,
                        "loc": {
                          "start": {
                            "line": 82,
                            "column": 56
                          },
                          "end": {
                            "line": 82,
                            "column": 61
                          },
                          "identifierName": "Ember"
                        },
                        "name": "Ember"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 2432,
                        "end": 2440,
                        "loc": {
                          "start": {
                            "line": 82,
                            "column": 62
                          },
                          "end": {
                            "line": 82,
                            "column": 70
                          },
                          "identifierName": "computed"
                        },
                        "name": "computed"
                      },
                      "computed": false
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 2441,
                      "end": 2445,
                      "loc": {
                        "start": {
                          "line": 82,
                          "column": 71
                        },
                        "end": {
                          "line": 82,
                          "column": 75
                        },
                        "identifierName": "bool"
                      },
                      "name": "bool"
                    },
                    "computed": false
                  }
                ]
              },
              "leadingComments": null
            }
          ],
          "kind": "const",
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.bool](http://emberjs.com/api/classes/Ember.computed.html#method_bool)\n *\n * A computed property that converts the provided dependent property into a\n * boolean value.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { bool } from 'ember-decorators/object/computed';\n *\n * export default class MessagesNotificationComponent extends Component {\n *   messageCount = 1;\n *\n *   @bool('messageCount') hasMessages; // true\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to convert\n ",
              "start": 1785,
              "end": 2369,
              "loc": {
                "start": {
                  "line": 62,
                  "column": 0
                },
                "end": {
                  "line": 81,
                  "column": 3
                }
              }
            }
          ],
          "trailingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.collect](http://emberjs.com/api/classes/Ember.computed.html#method_collect)\n *\n * A computed property that returns the array of values for the provided\n * dependent properties.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { collect } from 'ember-decorators/object/computed';\n *\n * export default class CameraEquipmentComponent extends Component {\n *   light = 'strobe';\n *   lens = '35mm prime';\n *\n *   @collect('light', 'lens') equipment; // ['strobe', '35mm prime']\n * }\n * ```\n *\n * @function\n * @param {...String} dependentKeys - Keys for the properties to collect\n ",
              "start": 2449,
              "end": 3096,
              "loc": {
                "start": {
                  "line": 84,
                  "column": 0
                },
                "end": {
                  "line": 104,
                  "column": 3
                }
              }
            }
          ]
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.bool](http://emberjs.com/api/classes/Ember.computed.html#method_bool)\n *\n * A computed property that converts the provided dependent property into a\n * boolean value.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { bool } from 'ember-decorators/object/computed';\n *\n * export default class MessagesNotificationComponent extends Component {\n *   messageCount = 1;\n *\n *   @bool('messageCount') hasMessages; // true\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to convert\n ",
            "start": 1785,
            "end": 2369,
            "loc": {
              "start": {
                "line": 62,
                "column": 0
              },
              "end": {
                "line": 81,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.collect](http://emberjs.com/api/classes/Ember.computed.html#method_collect)\n *\n * A computed property that returns the array of values for the provided\n * dependent properties.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { collect } from 'ember-decorators/object/computed';\n *\n * export default class CameraEquipmentComponent extends Component {\n *   light = 'strobe';\n *   lens = '35mm prime';\n *\n *   @collect('light', 'lens') equipment; // ['strobe', '35mm prime']\n * }\n * ```\n *\n * @function\n * @param {...String} dependentKeys - Keys for the properties to collect\n ",
            "start": 2449,
            "end": 3096,
            "loc": {
              "start": {
                "line": 84,
                "column": 0
              },
              "end": {
                "line": 104,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 3097,
        "end": 3180,
        "loc": {
          "start": {
            "line": 105,
            "column": 0
          },
          "end": {
            "line": 105,
            "column": 83
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "VariableDeclaration",
          "start": 3104,
          "end": 3180,
          "loc": {
            "start": {
              "line": 105,
              "column": 7
            },
            "end": {
              "line": 105,
              "column": 83
            }
          },
          "declarations": [
            {
              "type": "VariableDeclarator",
              "start": 3110,
              "end": 3179,
              "loc": {
                "start": {
                  "line": 105,
                  "column": 13
                },
                "end": {
                  "line": 105,
                  "column": 82
                }
              },
              "id": {
                "type": "Identifier",
                "start": 3110,
                "end": 3117,
                "loc": {
                  "start": {
                    "line": 105,
                    "column": 13
                  },
                  "end": {
                    "line": 105,
                    "column": 20
                  },
                  "identifierName": "collect"
                },
                "name": "collect",
                "leadingComments": null
              },
              "init": {
                "type": "CallExpression",
                "start": 3120,
                "end": 3179,
                "loc": {
                  "start": {
                    "line": 105,
                    "column": 23
                  },
                  "end": {
                    "line": 105,
                    "column": 82
                  }
                },
                "callee": {
                  "type": "Identifier",
                  "start": 3120,
                  "end": 3155,
                  "loc": {
                    "start": {
                      "line": 105,
                      "column": 23
                    },
                    "end": {
                      "line": 105,
                      "column": 58
                    },
                    "identifierName": "decoratedPropertyWithRequiredParams"
                  },
                  "name": "decoratedPropertyWithRequiredParams"
                },
                "arguments": [
                  {
                    "type": "MemberExpression",
                    "start": 3156,
                    "end": 3178,
                    "loc": {
                      "start": {
                        "line": 105,
                        "column": 59
                      },
                      "end": {
                        "line": 105,
                        "column": 81
                      }
                    },
                    "object": {
                      "type": "MemberExpression",
                      "start": 3156,
                      "end": 3170,
                      "loc": {
                        "start": {
                          "line": 105,
                          "column": 59
                        },
                        "end": {
                          "line": 105,
                          "column": 73
                        }
                      },
                      "object": {
                        "type": "Identifier",
                        "start": 3156,
                        "end": 3161,
                        "loc": {
                          "start": {
                            "line": 105,
                            "column": 59
                          },
                          "end": {
                            "line": 105,
                            "column": 64
                          },
                          "identifierName": "Ember"
                        },
                        "name": "Ember"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 3162,
                        "end": 3170,
                        "loc": {
                          "start": {
                            "line": 105,
                            "column": 65
                          },
                          "end": {
                            "line": 105,
                            "column": 73
                          },
                          "identifierName": "computed"
                        },
                        "name": "computed"
                      },
                      "computed": false
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 3171,
                      "end": 3178,
                      "loc": {
                        "start": {
                          "line": 105,
                          "column": 74
                        },
                        "end": {
                          "line": 105,
                          "column": 81
                        },
                        "identifierName": "collect"
                      },
                      "name": "collect"
                    },
                    "computed": false
                  }
                ]
              },
              "leadingComments": null
            }
          ],
          "kind": "const",
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.collect](http://emberjs.com/api/classes/Ember.computed.html#method_collect)\n *\n * A computed property that returns the array of values for the provided\n * dependent properties.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { collect } from 'ember-decorators/object/computed';\n *\n * export default class CameraEquipmentComponent extends Component {\n *   light = 'strobe';\n *   lens = '35mm prime';\n *\n *   @collect('light', 'lens') equipment; // ['strobe', '35mm prime']\n * }\n * ```\n *\n * @function\n * @param {...String} dependentKeys - Keys for the properties to collect\n ",
              "start": 2449,
              "end": 3096,
              "loc": {
                "start": {
                  "line": 84,
                  "column": 0
                },
                "end": {
                  "line": 104,
                  "column": 3
                }
              }
            }
          ],
          "trailingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.deprecatingAlias](http://emberjs.com/api/classes/Ember.computed.html#method_deprecatingAlias)\n *\n * Creates a new property that is an alias for another property on an object.\n * Calls to get or set this property behave as though they were called on\n * the original property, but will also trigger a deprecation warning.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { deprecatingAlias } from 'ember-decorators/object/computed';\n *\n * export default class UserProfileComponent extends {\n *   person = {\n *     first: 'Joe'\n *   };\n *\n *   @deprecatingAlias('person.first', {\n *     id: 'user-profile.firstName',\n *     until: '3.0.0',\n *     url: 'https://example.com/deprecations/user-profile.firstName'\n *   }) firstName;\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to alias\n * @param {Object} options\n ",
              "start": 3182,
              "end": 4100,
              "loc": {
                "start": {
                  "line": 107,
                  "column": 0
                },
                "end": {
                  "line": 134,
                  "column": 3
                }
              }
            }
          ]
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.collect](http://emberjs.com/api/classes/Ember.computed.html#method_collect)\n *\n * A computed property that returns the array of values for the provided\n * dependent properties.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { collect } from 'ember-decorators/object/computed';\n *\n * export default class CameraEquipmentComponent extends Component {\n *   light = 'strobe';\n *   lens = '35mm prime';\n *\n *   @collect('light', 'lens') equipment; // ['strobe', '35mm prime']\n * }\n * ```\n *\n * @function\n * @param {...String} dependentKeys - Keys for the properties to collect\n ",
            "start": 2449,
            "end": 3096,
            "loc": {
              "start": {
                "line": 84,
                "column": 0
              },
              "end": {
                "line": 104,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.deprecatingAlias](http://emberjs.com/api/classes/Ember.computed.html#method_deprecatingAlias)\n *\n * Creates a new property that is an alias for another property on an object.\n * Calls to get or set this property behave as though they were called on\n * the original property, but will also trigger a deprecation warning.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { deprecatingAlias } from 'ember-decorators/object/computed';\n *\n * export default class UserProfileComponent extends {\n *   person = {\n *     first: 'Joe'\n *   };\n *\n *   @deprecatingAlias('person.first', {\n *     id: 'user-profile.firstName',\n *     until: '3.0.0',\n *     url: 'https://example.com/deprecations/user-profile.firstName'\n *   }) firstName;\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to alias\n * @param {Object} options\n ",
            "start": 3182,
            "end": 4100,
            "loc": {
              "start": {
                "line": 107,
                "column": 0
              },
              "end": {
                "line": 134,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 4101,
        "end": 4202,
        "loc": {
          "start": {
            "line": 135,
            "column": 0
          },
          "end": {
            "line": 135,
            "column": 101
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "VariableDeclaration",
          "start": 4108,
          "end": 4202,
          "loc": {
            "start": {
              "line": 135,
              "column": 7
            },
            "end": {
              "line": 135,
              "column": 101
            }
          },
          "declarations": [
            {
              "type": "VariableDeclarator",
              "start": 4114,
              "end": 4201,
              "loc": {
                "start": {
                  "line": 135,
                  "column": 13
                },
                "end": {
                  "line": 135,
                  "column": 100
                }
              },
              "id": {
                "type": "Identifier",
                "start": 4114,
                "end": 4130,
                "loc": {
                  "start": {
                    "line": 135,
                    "column": 13
                  },
                  "end": {
                    "line": 135,
                    "column": 29
                  },
                  "identifierName": "deprecatingAlias"
                },
                "name": "deprecatingAlias",
                "leadingComments": null
              },
              "init": {
                "type": "CallExpression",
                "start": 4133,
                "end": 4201,
                "loc": {
                  "start": {
                    "line": 135,
                    "column": 32
                  },
                  "end": {
                    "line": 135,
                    "column": 100
                  }
                },
                "callee": {
                  "type": "Identifier",
                  "start": 4133,
                  "end": 4168,
                  "loc": {
                    "start": {
                      "line": 135,
                      "column": 32
                    },
                    "end": {
                      "line": 135,
                      "column": 67
                    },
                    "identifierName": "decoratedPropertyWithRequiredParams"
                  },
                  "name": "decoratedPropertyWithRequiredParams"
                },
                "arguments": [
                  {
                    "type": "MemberExpression",
                    "start": 4169,
                    "end": 4200,
                    "loc": {
                      "start": {
                        "line": 135,
                        "column": 68
                      },
                      "end": {
                        "line": 135,
                        "column": 99
                      }
                    },
                    "object": {
                      "type": "MemberExpression",
                      "start": 4169,
                      "end": 4183,
                      "loc": {
                        "start": {
                          "line": 135,
                          "column": 68
                        },
                        "end": {
                          "line": 135,
                          "column": 82
                        }
                      },
                      "object": {
                        "type": "Identifier",
                        "start": 4169,
                        "end": 4174,
                        "loc": {
                          "start": {
                            "line": 135,
                            "column": 68
                          },
                          "end": {
                            "line": 135,
                            "column": 73
                          },
                          "identifierName": "Ember"
                        },
                        "name": "Ember"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 4175,
                        "end": 4183,
                        "loc": {
                          "start": {
                            "line": 135,
                            "column": 74
                          },
                          "end": {
                            "line": 135,
                            "column": 82
                          },
                          "identifierName": "computed"
                        },
                        "name": "computed"
                      },
                      "computed": false
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 4184,
                      "end": 4200,
                      "loc": {
                        "start": {
                          "line": 135,
                          "column": 83
                        },
                        "end": {
                          "line": 135,
                          "column": 99
                        },
                        "identifierName": "deprecatingAlias"
                      },
                      "name": "deprecatingAlias"
                    },
                    "computed": false
                  }
                ]
              },
              "leadingComments": null
            }
          ],
          "kind": "const",
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.deprecatingAlias](http://emberjs.com/api/classes/Ember.computed.html#method_deprecatingAlias)\n *\n * Creates a new property that is an alias for another property on an object.\n * Calls to get or set this property behave as though they were called on\n * the original property, but will also trigger a deprecation warning.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { deprecatingAlias } from 'ember-decorators/object/computed';\n *\n * export default class UserProfileComponent extends {\n *   person = {\n *     first: 'Joe'\n *   };\n *\n *   @deprecatingAlias('person.first', {\n *     id: 'user-profile.firstName',\n *     until: '3.0.0',\n *     url: 'https://example.com/deprecations/user-profile.firstName'\n *   }) firstName;\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to alias\n * @param {Object} options\n ",
              "start": 3182,
              "end": 4100,
              "loc": {
                "start": {
                  "line": 107,
                  "column": 0
                },
                "end": {
                  "line": 134,
                  "column": 3
                }
              }
            }
          ],
          "trailingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.empty](http://emberjs.com/api/classes/Ember.computed.html#method_empty)\n *\n * A computed property that returns `true` if the value of the dependent\n * property is null, an empty string, empty array, or empty function.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { empty } from 'ember-decorators/object/computed';\n *\n * export default class FoodItemsComponent extends Component {\n *   items = A(['taco', 'burrito']);\n *\n *   @empty('items') isEmpty; // false\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key of the property to check emptiness of\n ",
              "start": 4204,
              "end": 4881,
              "loc": {
                "start": {
                  "line": 137,
                  "column": 0
                },
                "end": {
                  "line": 157,
                  "column": 3
                }
              }
            }
          ]
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.deprecatingAlias](http://emberjs.com/api/classes/Ember.computed.html#method_deprecatingAlias)\n *\n * Creates a new property that is an alias for another property on an object.\n * Calls to get or set this property behave as though they were called on\n * the original property, but will also trigger a deprecation warning.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { deprecatingAlias } from 'ember-decorators/object/computed';\n *\n * export default class UserProfileComponent extends {\n *   person = {\n *     first: 'Joe'\n *   };\n *\n *   @deprecatingAlias('person.first', {\n *     id: 'user-profile.firstName',\n *     until: '3.0.0',\n *     url: 'https://example.com/deprecations/user-profile.firstName'\n *   }) firstName;\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to alias\n * @param {Object} options\n ",
            "start": 3182,
            "end": 4100,
            "loc": {
              "start": {
                "line": 107,
                "column": 0
              },
              "end": {
                "line": 134,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.empty](http://emberjs.com/api/classes/Ember.computed.html#method_empty)\n *\n * A computed property that returns `true` if the value of the dependent\n * property is null, an empty string, empty array, or empty function.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { empty } from 'ember-decorators/object/computed';\n *\n * export default class FoodItemsComponent extends Component {\n *   items = A(['taco', 'burrito']);\n *\n *   @empty('items') isEmpty; // false\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key of the property to check emptiness of\n ",
            "start": 4204,
            "end": 4881,
            "loc": {
              "start": {
                "line": 137,
                "column": 0
              },
              "end": {
                "line": 157,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 4882,
        "end": 4961,
        "loc": {
          "start": {
            "line": 158,
            "column": 0
          },
          "end": {
            "line": 158,
            "column": 79
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "VariableDeclaration",
          "start": 4889,
          "end": 4961,
          "loc": {
            "start": {
              "line": 158,
              "column": 7
            },
            "end": {
              "line": 158,
              "column": 79
            }
          },
          "declarations": [
            {
              "type": "VariableDeclarator",
              "start": 4895,
              "end": 4960,
              "loc": {
                "start": {
                  "line": 158,
                  "column": 13
                },
                "end": {
                  "line": 158,
                  "column": 78
                }
              },
              "id": {
                "type": "Identifier",
                "start": 4895,
                "end": 4900,
                "loc": {
                  "start": {
                    "line": 158,
                    "column": 13
                  },
                  "end": {
                    "line": 158,
                    "column": 18
                  },
                  "identifierName": "empty"
                },
                "name": "empty",
                "leadingComments": null
              },
              "init": {
                "type": "CallExpression",
                "start": 4903,
                "end": 4960,
                "loc": {
                  "start": {
                    "line": 158,
                    "column": 21
                  },
                  "end": {
                    "line": 158,
                    "column": 78
                  }
                },
                "callee": {
                  "type": "Identifier",
                  "start": 4903,
                  "end": 4938,
                  "loc": {
                    "start": {
                      "line": 158,
                      "column": 21
                    },
                    "end": {
                      "line": 158,
                      "column": 56
                    },
                    "identifierName": "decoratedPropertyWithRequiredParams"
                  },
                  "name": "decoratedPropertyWithRequiredParams"
                },
                "arguments": [
                  {
                    "type": "MemberExpression",
                    "start": 4939,
                    "end": 4959,
                    "loc": {
                      "start": {
                        "line": 158,
                        "column": 57
                      },
                      "end": {
                        "line": 158,
                        "column": 77
                      }
                    },
                    "object": {
                      "type": "MemberExpression",
                      "start": 4939,
                      "end": 4953,
                      "loc": {
                        "start": {
                          "line": 158,
                          "column": 57
                        },
                        "end": {
                          "line": 158,
                          "column": 71
                        }
                      },
                      "object": {
                        "type": "Identifier",
                        "start": 4939,
                        "end": 4944,
                        "loc": {
                          "start": {
                            "line": 158,
                            "column": 57
                          },
                          "end": {
                            "line": 158,
                            "column": 62
                          },
                          "identifierName": "Ember"
                        },
                        "name": "Ember"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 4945,
                        "end": 4953,
                        "loc": {
                          "start": {
                            "line": 158,
                            "column": 63
                          },
                          "end": {
                            "line": 158,
                            "column": 71
                          },
                          "identifierName": "computed"
                        },
                        "name": "computed"
                      },
                      "computed": false
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 4954,
                      "end": 4959,
                      "loc": {
                        "start": {
                          "line": 158,
                          "column": 72
                        },
                        "end": {
                          "line": 158,
                          "column": 77
                        },
                        "identifierName": "empty"
                      },
                      "name": "empty"
                    },
                    "computed": false
                  }
                ]
              },
              "leadingComments": null
            }
          ],
          "kind": "const",
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.empty](http://emberjs.com/api/classes/Ember.computed.html#method_empty)\n *\n * A computed property that returns `true` if the value of the dependent\n * property is null, an empty string, empty array, or empty function.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { empty } from 'ember-decorators/object/computed';\n *\n * export default class FoodItemsComponent extends Component {\n *   items = A(['taco', 'burrito']);\n *\n *   @empty('items') isEmpty; // false\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key of the property to check emptiness of\n ",
              "start": 4204,
              "end": 4881,
              "loc": {
                "start": {
                  "line": 137,
                  "column": 0
                },
                "end": {
                  "line": 157,
                  "column": 3
                }
              }
            }
          ],
          "trailingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.equal](http://emberjs.com/api/classes/Ember.computed.html#method_equal)\n *\n * A computed property that returns true if the dependent properties are equal.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { equal } from 'ember-decorators/object/computed';\n *\n * export default class NapTimeComponent extends Component {\n *   state = 'sleepy';\n *\n *   @equal('state', 'sleepy') napTime; // true\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to check\n * @param {Any} value - Value to compare the dependent property to\n ",
              "start": 4963,
              "end": 5588,
              "loc": {
                "start": {
                  "line": 160,
                  "column": 0
                },
                "end": {
                  "line": 179,
                  "column": 3
                }
              }
            }
          ]
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.empty](http://emberjs.com/api/classes/Ember.computed.html#method_empty)\n *\n * A computed property that returns `true` if the value of the dependent\n * property is null, an empty string, empty array, or empty function.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { empty } from 'ember-decorators/object/computed';\n *\n * export default class FoodItemsComponent extends Component {\n *   items = A(['taco', 'burrito']);\n *\n *   @empty('items') isEmpty; // false\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key of the property to check emptiness of\n ",
            "start": 4204,
            "end": 4881,
            "loc": {
              "start": {
                "line": 137,
                "column": 0
              },
              "end": {
                "line": 157,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.equal](http://emberjs.com/api/classes/Ember.computed.html#method_equal)\n *\n * A computed property that returns true if the dependent properties are equal.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { equal } from 'ember-decorators/object/computed';\n *\n * export default class NapTimeComponent extends Component {\n *   state = 'sleepy';\n *\n *   @equal('state', 'sleepy') napTime; // true\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to check\n * @param {Any} value - Value to compare the dependent property to\n ",
            "start": 4963,
            "end": 5588,
            "loc": {
              "start": {
                "line": 160,
                "column": 0
              },
              "end": {
                "line": 179,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 5589,
        "end": 5668,
        "loc": {
          "start": {
            "line": 180,
            "column": 0
          },
          "end": {
            "line": 180,
            "column": 79
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "VariableDeclaration",
          "start": 5596,
          "end": 5668,
          "loc": {
            "start": {
              "line": 180,
              "column": 7
            },
            "end": {
              "line": 180,
              "column": 79
            }
          },
          "declarations": [
            {
              "type": "VariableDeclarator",
              "start": 5602,
              "end": 5667,
              "loc": {
                "start": {
                  "line": 180,
                  "column": 13
                },
                "end": {
                  "line": 180,
                  "column": 78
                }
              },
              "id": {
                "type": "Identifier",
                "start": 5602,
                "end": 5607,
                "loc": {
                  "start": {
                    "line": 180,
                    "column": 13
                  },
                  "end": {
                    "line": 180,
                    "column": 18
                  },
                  "identifierName": "equal"
                },
                "name": "equal",
                "leadingComments": null
              },
              "init": {
                "type": "CallExpression",
                "start": 5610,
                "end": 5667,
                "loc": {
                  "start": {
                    "line": 180,
                    "column": 21
                  },
                  "end": {
                    "line": 180,
                    "column": 78
                  }
                },
                "callee": {
                  "type": "Identifier",
                  "start": 5610,
                  "end": 5645,
                  "loc": {
                    "start": {
                      "line": 180,
                      "column": 21
                    },
                    "end": {
                      "line": 180,
                      "column": 56
                    },
                    "identifierName": "decoratedPropertyWithRequiredParams"
                  },
                  "name": "decoratedPropertyWithRequiredParams"
                },
                "arguments": [
                  {
                    "type": "MemberExpression",
                    "start": 5646,
                    "end": 5666,
                    "loc": {
                      "start": {
                        "line": 180,
                        "column": 57
                      },
                      "end": {
                        "line": 180,
                        "column": 77
                      }
                    },
                    "object": {
                      "type": "MemberExpression",
                      "start": 5646,
                      "end": 5660,
                      "loc": {
                        "start": {
                          "line": 180,
                          "column": 57
                        },
                        "end": {
                          "line": 180,
                          "column": 71
                        }
                      },
                      "object": {
                        "type": "Identifier",
                        "start": 5646,
                        "end": 5651,
                        "loc": {
                          "start": {
                            "line": 180,
                            "column": 57
                          },
                          "end": {
                            "line": 180,
                            "column": 62
                          },
                          "identifierName": "Ember"
                        },
                        "name": "Ember"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 5652,
                        "end": 5660,
                        "loc": {
                          "start": {
                            "line": 180,
                            "column": 63
                          },
                          "end": {
                            "line": 180,
                            "column": 71
                          },
                          "identifierName": "computed"
                        },
                        "name": "computed"
                      },
                      "computed": false
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 5661,
                      "end": 5666,
                      "loc": {
                        "start": {
                          "line": 180,
                          "column": 72
                        },
                        "end": {
                          "line": 180,
                          "column": 77
                        },
                        "identifierName": "equal"
                      },
                      "name": "equal"
                    },
                    "computed": false
                  }
                ]
              },
              "leadingComments": null
            }
          ],
          "kind": "const",
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.equal](http://emberjs.com/api/classes/Ember.computed.html#method_equal)\n *\n * A computed property that returns true if the dependent properties are equal.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { equal } from 'ember-decorators/object/computed';\n *\n * export default class NapTimeComponent extends Component {\n *   state = 'sleepy';\n *\n *   @equal('state', 'sleepy') napTime; // true\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to check\n * @param {Any} value - Value to compare the dependent property to\n ",
              "start": 4963,
              "end": 5588,
              "loc": {
                "start": {
                  "line": 160,
                  "column": 0
                },
                "end": {
                  "line": 179,
                  "column": 3
                }
              }
            }
          ],
          "trailingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.filter](http://emberjs.com/api/classes/Ember.computed.html#method_filter)\n *\n * Filters the items in the array by the provided callback.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { filter } from 'ember-decorators/object/computed';\n *\n * export default class ChoresListComponent extends Component {\n *   chores = A([\n *     { name: 'cook', done: true },\n *     { name: 'clean', done: true },\n *     { name: 'write more unit tests', done: false }\n *   ]);\n *\n *   @filter('chores')\n *   remainingChores(chore, index, array) {\n *     return !chore.done;\n *   } // [{name: 'write more unit tests', done: false}]\n *\n *   // alternative syntax:\n *\n *   @filter('chores', function(chore, index, array) {\n *     return !chore.done;\n *   }) remainingChores; // [{name: 'write more unit tests', done: false}]\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the array to filter\n * @param {Function(item: Any, index: Number, array: Array<Any>): Boolean} callback - The function to filter with\n ",
              "start": 5670,
              "end": 6790,
              "loc": {
                "start": {
                  "line": 182,
                  "column": 0
                },
                "end": {
                  "line": 215,
                  "column": 3
                }
              }
            }
          ]
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.equal](http://emberjs.com/api/classes/Ember.computed.html#method_equal)\n *\n * A computed property that returns true if the dependent properties are equal.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { equal } from 'ember-decorators/object/computed';\n *\n * export default class NapTimeComponent extends Component {\n *   state = 'sleepy';\n *\n *   @equal('state', 'sleepy') napTime; // true\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to check\n * @param {Any} value - Value to compare the dependent property to\n ",
            "start": 4963,
            "end": 5588,
            "loc": {
              "start": {
                "line": 160,
                "column": 0
              },
              "end": {
                "line": 179,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.filter](http://emberjs.com/api/classes/Ember.computed.html#method_filter)\n *\n * Filters the items in the array by the provided callback.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { filter } from 'ember-decorators/object/computed';\n *\n * export default class ChoresListComponent extends Component {\n *   chores = A([\n *     { name: 'cook', done: true },\n *     { name: 'clean', done: true },\n *     { name: 'write more unit tests', done: false }\n *   ]);\n *\n *   @filter('chores')\n *   remainingChores(chore, index, array) {\n *     return !chore.done;\n *   } // [{name: 'write more unit tests', done: false}]\n *\n *   // alternative syntax:\n *\n *   @filter('chores', function(chore, index, array) {\n *     return !chore.done;\n *   }) remainingChores; // [{name: 'write more unit tests', done: false}]\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the array to filter\n * @param {Function(item: Any, index: Number, array: Array<Any>): Boolean} callback - The function to filter with\n ",
            "start": 5670,
            "end": 6790,
            "loc": {
              "start": {
                "line": 182,
                "column": 0
              },
              "end": {
                "line": 215,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 6791,
        "end": 6874,
        "loc": {
          "start": {
            "line": 216,
            "column": 0
          },
          "end": {
            "line": 216,
            "column": 83
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "VariableDeclaration",
          "start": 6798,
          "end": 6874,
          "loc": {
            "start": {
              "line": 216,
              "column": 7
            },
            "end": {
              "line": 216,
              "column": 83
            }
          },
          "declarations": [
            {
              "type": "VariableDeclarator",
              "start": 6804,
              "end": 6873,
              "loc": {
                "start": {
                  "line": 216,
                  "column": 13
                },
                "end": {
                  "line": 216,
                  "column": 82
                }
              },
              "id": {
                "type": "Identifier",
                "start": 6804,
                "end": 6810,
                "loc": {
                  "start": {
                    "line": 216,
                    "column": 13
                  },
                  "end": {
                    "line": 216,
                    "column": 19
                  },
                  "identifierName": "filter"
                },
                "name": "filter",
                "leadingComments": null
              },
              "init": {
                "type": "CallExpression",
                "start": 6813,
                "end": 6873,
                "loc": {
                  "start": {
                    "line": 216,
                    "column": 22
                  },
                  "end": {
                    "line": 216,
                    "column": 82
                  }
                },
                "callee": {
                  "type": "Identifier",
                  "start": 6813,
                  "end": 6850,
                  "loc": {
                    "start": {
                      "line": 216,
                      "column": 22
                    },
                    "end": {
                      "line": 216,
                      "column": 59
                    },
                    "identifierName": "decoratedPropertyWithOptionalCallback"
                  },
                  "name": "decoratedPropertyWithOptionalCallback"
                },
                "arguments": [
                  {
                    "type": "MemberExpression",
                    "start": 6851,
                    "end": 6872,
                    "loc": {
                      "start": {
                        "line": 216,
                        "column": 60
                      },
                      "end": {
                        "line": 216,
                        "column": 81
                      }
                    },
                    "object": {
                      "type": "MemberExpression",
                      "start": 6851,
                      "end": 6865,
                      "loc": {
                        "start": {
                          "line": 216,
                          "column": 60
                        },
                        "end": {
                          "line": 216,
                          "column": 74
                        }
                      },
                      "object": {
                        "type": "Identifier",
                        "start": 6851,
                        "end": 6856,
                        "loc": {
                          "start": {
                            "line": 216,
                            "column": 60
                          },
                          "end": {
                            "line": 216,
                            "column": 65
                          },
                          "identifierName": "Ember"
                        },
                        "name": "Ember"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 6857,
                        "end": 6865,
                        "loc": {
                          "start": {
                            "line": 216,
                            "column": 66
                          },
                          "end": {
                            "line": 216,
                            "column": 74
                          },
                          "identifierName": "computed"
                        },
                        "name": "computed"
                      },
                      "computed": false
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 6866,
                      "end": 6872,
                      "loc": {
                        "start": {
                          "line": 216,
                          "column": 75
                        },
                        "end": {
                          "line": 216,
                          "column": 81
                        },
                        "identifierName": "filter"
                      },
                      "name": "filter"
                    },
                    "computed": false
                  }
                ]
              },
              "leadingComments": null
            }
          ],
          "kind": "const",
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.filter](http://emberjs.com/api/classes/Ember.computed.html#method_filter)\n *\n * Filters the items in the array by the provided callback.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { filter } from 'ember-decorators/object/computed';\n *\n * export default class ChoresListComponent extends Component {\n *   chores = A([\n *     { name: 'cook', done: true },\n *     { name: 'clean', done: true },\n *     { name: 'write more unit tests', done: false }\n *   ]);\n *\n *   @filter('chores')\n *   remainingChores(chore, index, array) {\n *     return !chore.done;\n *   } // [{name: 'write more unit tests', done: false}]\n *\n *   // alternative syntax:\n *\n *   @filter('chores', function(chore, index, array) {\n *     return !chore.done;\n *   }) remainingChores; // [{name: 'write more unit tests', done: false}]\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the array to filter\n * @param {Function(item: Any, index: Number, array: Array<Any>): Boolean} callback - The function to filter with\n ",
              "start": 5670,
              "end": 6790,
              "loc": {
                "start": {
                  "line": 182,
                  "column": 0
                },
                "end": {
                  "line": 215,
                  "column": 3
                }
              }
            }
          ],
          "trailingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.filterBy](http://emberjs.com/api/classes/Ember.computed.html#method_filterBy)\n *\n * Filters the array by the property and value.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { filterBy } from 'ember-decorators/object/computed';\n *\n * export default class ChoresListComponent extends Component {\n *   chores = A([\n *     { name: 'cook', done: true },\n *     { name: 'clean', done: true },\n *     { name: 'write more unit tests', done: false }\n *   ]);\n *\n *   @filterBy('chores', 'done', false) remainingChores; // [{name: 'write more unit tests', done: false}]\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the array to filter\n * @param {String} propertyKey - Property of the array items to filter by\n * @param {Any} value - Value to filter by\n ",
              "start": 6876,
              "end": 7758,
              "loc": {
                "start": {
                  "line": 218,
                  "column": 0
                },
                "end": {
                  "line": 243,
                  "column": 3
                }
              }
            }
          ]
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.filter](http://emberjs.com/api/classes/Ember.computed.html#method_filter)\n *\n * Filters the items in the array by the provided callback.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { filter } from 'ember-decorators/object/computed';\n *\n * export default class ChoresListComponent extends Component {\n *   chores = A([\n *     { name: 'cook', done: true },\n *     { name: 'clean', done: true },\n *     { name: 'write more unit tests', done: false }\n *   ]);\n *\n *   @filter('chores')\n *   remainingChores(chore, index, array) {\n *     return !chore.done;\n *   } // [{name: 'write more unit tests', done: false}]\n *\n *   // alternative syntax:\n *\n *   @filter('chores', function(chore, index, array) {\n *     return !chore.done;\n *   }) remainingChores; // [{name: 'write more unit tests', done: false}]\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the array to filter\n * @param {Function(item: Any, index: Number, array: Array<Any>): Boolean} callback - The function to filter with\n ",
            "start": 5670,
            "end": 6790,
            "loc": {
              "start": {
                "line": 182,
                "column": 0
              },
              "end": {
                "line": 215,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.filterBy](http://emberjs.com/api/classes/Ember.computed.html#method_filterBy)\n *\n * Filters the array by the property and value.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { filterBy } from 'ember-decorators/object/computed';\n *\n * export default class ChoresListComponent extends Component {\n *   chores = A([\n *     { name: 'cook', done: true },\n *     { name: 'clean', done: true },\n *     { name: 'write more unit tests', done: false }\n *   ]);\n *\n *   @filterBy('chores', 'done', false) remainingChores; // [{name: 'write more unit tests', done: false}]\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the array to filter\n * @param {String} propertyKey - Property of the array items to filter by\n * @param {Any} value - Value to filter by\n ",
            "start": 6876,
            "end": 7758,
            "loc": {
              "start": {
                "line": 218,
                "column": 0
              },
              "end": {
                "line": 243,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 7759,
        "end": 7844,
        "loc": {
          "start": {
            "line": 244,
            "column": 0
          },
          "end": {
            "line": 244,
            "column": 85
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "VariableDeclaration",
          "start": 7766,
          "end": 7844,
          "loc": {
            "start": {
              "line": 244,
              "column": 7
            },
            "end": {
              "line": 244,
              "column": 85
            }
          },
          "declarations": [
            {
              "type": "VariableDeclarator",
              "start": 7772,
              "end": 7843,
              "loc": {
                "start": {
                  "line": 244,
                  "column": 13
                },
                "end": {
                  "line": 244,
                  "column": 84
                }
              },
              "id": {
                "type": "Identifier",
                "start": 7772,
                "end": 7780,
                "loc": {
                  "start": {
                    "line": 244,
                    "column": 13
                  },
                  "end": {
                    "line": 244,
                    "column": 21
                  },
                  "identifierName": "filterBy"
                },
                "name": "filterBy",
                "leadingComments": null
              },
              "init": {
                "type": "CallExpression",
                "start": 7783,
                "end": 7843,
                "loc": {
                  "start": {
                    "line": 244,
                    "column": 24
                  },
                  "end": {
                    "line": 244,
                    "column": 84
                  }
                },
                "callee": {
                  "type": "Identifier",
                  "start": 7783,
                  "end": 7818,
                  "loc": {
                    "start": {
                      "line": 244,
                      "column": 24
                    },
                    "end": {
                      "line": 244,
                      "column": 59
                    },
                    "identifierName": "decoratedPropertyWithRequiredParams"
                  },
                  "name": "decoratedPropertyWithRequiredParams"
                },
                "arguments": [
                  {
                    "type": "MemberExpression",
                    "start": 7819,
                    "end": 7842,
                    "loc": {
                      "start": {
                        "line": 244,
                        "column": 60
                      },
                      "end": {
                        "line": 244,
                        "column": 83
                      }
                    },
                    "object": {
                      "type": "MemberExpression",
                      "start": 7819,
                      "end": 7833,
                      "loc": {
                        "start": {
                          "line": 244,
                          "column": 60
                        },
                        "end": {
                          "line": 244,
                          "column": 74
                        }
                      },
                      "object": {
                        "type": "Identifier",
                        "start": 7819,
                        "end": 7824,
                        "loc": {
                          "start": {
                            "line": 244,
                            "column": 60
                          },
                          "end": {
                            "line": 244,
                            "column": 65
                          },
                          "identifierName": "Ember"
                        },
                        "name": "Ember"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 7825,
                        "end": 7833,
                        "loc": {
                          "start": {
                            "line": 244,
                            "column": 66
                          },
                          "end": {
                            "line": 244,
                            "column": 74
                          },
                          "identifierName": "computed"
                        },
                        "name": "computed"
                      },
                      "computed": false
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 7834,
                      "end": 7842,
                      "loc": {
                        "start": {
                          "line": 244,
                          "column": 75
                        },
                        "end": {
                          "line": 244,
                          "column": 83
                        },
                        "identifierName": "filterBy"
                      },
                      "name": "filterBy"
                    },
                    "computed": false
                  }
                ]
              },
              "leadingComments": null
            }
          ],
          "kind": "const",
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.filterBy](http://emberjs.com/api/classes/Ember.computed.html#method_filterBy)\n *\n * Filters the array by the property and value.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { filterBy } from 'ember-decorators/object/computed';\n *\n * export default class ChoresListComponent extends Component {\n *   chores = A([\n *     { name: 'cook', done: true },\n *     { name: 'clean', done: true },\n *     { name: 'write more unit tests', done: false }\n *   ]);\n *\n *   @filterBy('chores', 'done', false) remainingChores; // [{name: 'write more unit tests', done: false}]\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the array to filter\n * @param {String} propertyKey - Property of the array items to filter by\n * @param {Any} value - Value to filter by\n ",
              "start": 6876,
              "end": 7758,
              "loc": {
                "start": {
                  "line": 218,
                  "column": 0
                },
                "end": {
                  "line": 243,
                  "column": 3
                }
              }
            }
          ],
          "trailingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.gt](http://emberjs.com/api/classes/Ember.computed.html#method_gt)\n *\n * A computed property that returns `true` if the provided dependent property\n * is greater than the provided value.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { gt } from 'ember-decorators/object/computed';\n *\n * export default class CatPartyComponent extends Component {\n *   totalCats = 11;\n *\n *   @gt('totalCats', 10) isCatParty; // true\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to compare\n * @param {Number} value - Value to compare against\n ",
              "start": 7846,
              "end": 8483,
              "loc": {
                "start": {
                  "line": 246,
                  "column": 0
                },
                "end": {
                  "line": 266,
                  "column": 3
                }
              }
            }
          ]
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.filterBy](http://emberjs.com/api/classes/Ember.computed.html#method_filterBy)\n *\n * Filters the array by the property and value.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { filterBy } from 'ember-decorators/object/computed';\n *\n * export default class ChoresListComponent extends Component {\n *   chores = A([\n *     { name: 'cook', done: true },\n *     { name: 'clean', done: true },\n *     { name: 'write more unit tests', done: false }\n *   ]);\n *\n *   @filterBy('chores', 'done', false) remainingChores; // [{name: 'write more unit tests', done: false}]\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the array to filter\n * @param {String} propertyKey - Property of the array items to filter by\n * @param {Any} value - Value to filter by\n ",
            "start": 6876,
            "end": 7758,
            "loc": {
              "start": {
                "line": 218,
                "column": 0
              },
              "end": {
                "line": 243,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.gt](http://emberjs.com/api/classes/Ember.computed.html#method_gt)\n *\n * A computed property that returns `true` if the provided dependent property\n * is greater than the provided value.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { gt } from 'ember-decorators/object/computed';\n *\n * export default class CatPartyComponent extends Component {\n *   totalCats = 11;\n *\n *   @gt('totalCats', 10) isCatParty; // true\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to compare\n * @param {Number} value - Value to compare against\n ",
            "start": 7846,
            "end": 8483,
            "loc": {
              "start": {
                "line": 246,
                "column": 0
              },
              "end": {
                "line": 266,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 8484,
        "end": 8557,
        "loc": {
          "start": {
            "line": 267,
            "column": 0
          },
          "end": {
            "line": 267,
            "column": 73
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "VariableDeclaration",
          "start": 8491,
          "end": 8557,
          "loc": {
            "start": {
              "line": 267,
              "column": 7
            },
            "end": {
              "line": 267,
              "column": 73
            }
          },
          "declarations": [
            {
              "type": "VariableDeclarator",
              "start": 8497,
              "end": 8556,
              "loc": {
                "start": {
                  "line": 267,
                  "column": 13
                },
                "end": {
                  "line": 267,
                  "column": 72
                }
              },
              "id": {
                "type": "Identifier",
                "start": 8497,
                "end": 8499,
                "loc": {
                  "start": {
                    "line": 267,
                    "column": 13
                  },
                  "end": {
                    "line": 267,
                    "column": 15
                  },
                  "identifierName": "gt"
                },
                "name": "gt",
                "leadingComments": null
              },
              "init": {
                "type": "CallExpression",
                "start": 8502,
                "end": 8556,
                "loc": {
                  "start": {
                    "line": 267,
                    "column": 18
                  },
                  "end": {
                    "line": 267,
                    "column": 72
                  }
                },
                "callee": {
                  "type": "Identifier",
                  "start": 8502,
                  "end": 8537,
                  "loc": {
                    "start": {
                      "line": 267,
                      "column": 18
                    },
                    "end": {
                      "line": 267,
                      "column": 53
                    },
                    "identifierName": "decoratedPropertyWithRequiredParams"
                  },
                  "name": "decoratedPropertyWithRequiredParams"
                },
                "arguments": [
                  {
                    "type": "MemberExpression",
                    "start": 8538,
                    "end": 8555,
                    "loc": {
                      "start": {
                        "line": 267,
                        "column": 54
                      },
                      "end": {
                        "line": 267,
                        "column": 71
                      }
                    },
                    "object": {
                      "type": "MemberExpression",
                      "start": 8538,
                      "end": 8552,
                      "loc": {
                        "start": {
                          "line": 267,
                          "column": 54
                        },
                        "end": {
                          "line": 267,
                          "column": 68
                        }
                      },
                      "object": {
                        "type": "Identifier",
                        "start": 8538,
                        "end": 8543,
                        "loc": {
                          "start": {
                            "line": 267,
                            "column": 54
                          },
                          "end": {
                            "line": 267,
                            "column": 59
                          },
                          "identifierName": "Ember"
                        },
                        "name": "Ember"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 8544,
                        "end": 8552,
                        "loc": {
                          "start": {
                            "line": 267,
                            "column": 60
                          },
                          "end": {
                            "line": 267,
                            "column": 68
                          },
                          "identifierName": "computed"
                        },
                        "name": "computed"
                      },
                      "computed": false
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 8553,
                      "end": 8555,
                      "loc": {
                        "start": {
                          "line": 267,
                          "column": 69
                        },
                        "end": {
                          "line": 267,
                          "column": 71
                        },
                        "identifierName": "gt"
                      },
                      "name": "gt"
                    },
                    "computed": false
                  }
                ]
              },
              "leadingComments": null
            }
          ],
          "kind": "const",
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.gt](http://emberjs.com/api/classes/Ember.computed.html#method_gt)\n *\n * A computed property that returns `true` if the provided dependent property\n * is greater than the provided value.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { gt } from 'ember-decorators/object/computed';\n *\n * export default class CatPartyComponent extends Component {\n *   totalCats = 11;\n *\n *   @gt('totalCats', 10) isCatParty; // true\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to compare\n * @param {Number} value - Value to compare against\n ",
              "start": 7846,
              "end": 8483,
              "loc": {
                "start": {
                  "line": 246,
                  "column": 0
                },
                "end": {
                  "line": 266,
                  "column": 3
                }
              }
            }
          ],
          "trailingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.gte](http://emberjs.com/api/classes/Ember.computed.html#method_gte)\n *\n * A computed property that returns `true` if the provided dependent property\n * is greater than or equal to the provided value.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { gte } from 'ember-decorators/object/computed';\n *\n * export default class PlayerListComponent extends Component {\n *   totalPlayers = 14;\n *\n *   @gte('totalPlayers', 14) hasEnoughPlayers; // true\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to compare\n * @param {Number} value - Value to compare against\n ",
              "start": 8559,
              "end": 9226,
              "loc": {
                "start": {
                  "line": 269,
                  "column": 0
                },
                "end": {
                  "line": 289,
                  "column": 3
                }
              }
            }
          ]
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.gt](http://emberjs.com/api/classes/Ember.computed.html#method_gt)\n *\n * A computed property that returns `true` if the provided dependent property\n * is greater than the provided value.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { gt } from 'ember-decorators/object/computed';\n *\n * export default class CatPartyComponent extends Component {\n *   totalCats = 11;\n *\n *   @gt('totalCats', 10) isCatParty; // true\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to compare\n * @param {Number} value - Value to compare against\n ",
            "start": 7846,
            "end": 8483,
            "loc": {
              "start": {
                "line": 246,
                "column": 0
              },
              "end": {
                "line": 266,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.gte](http://emberjs.com/api/classes/Ember.computed.html#method_gte)\n *\n * A computed property that returns `true` if the provided dependent property\n * is greater than or equal to the provided value.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { gte } from 'ember-decorators/object/computed';\n *\n * export default class PlayerListComponent extends Component {\n *   totalPlayers = 14;\n *\n *   @gte('totalPlayers', 14) hasEnoughPlayers; // true\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to compare\n * @param {Number} value - Value to compare against\n ",
            "start": 8559,
            "end": 9226,
            "loc": {
              "start": {
                "line": 269,
                "column": 0
              },
              "end": {
                "line": 289,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 9227,
        "end": 9302,
        "loc": {
          "start": {
            "line": 290,
            "column": 0
          },
          "end": {
            "line": 290,
            "column": 75
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "VariableDeclaration",
          "start": 9234,
          "end": 9302,
          "loc": {
            "start": {
              "line": 290,
              "column": 7
            },
            "end": {
              "line": 290,
              "column": 75
            }
          },
          "declarations": [
            {
              "type": "VariableDeclarator",
              "start": 9240,
              "end": 9301,
              "loc": {
                "start": {
                  "line": 290,
                  "column": 13
                },
                "end": {
                  "line": 290,
                  "column": 74
                }
              },
              "id": {
                "type": "Identifier",
                "start": 9240,
                "end": 9243,
                "loc": {
                  "start": {
                    "line": 290,
                    "column": 13
                  },
                  "end": {
                    "line": 290,
                    "column": 16
                  },
                  "identifierName": "gte"
                },
                "name": "gte",
                "leadingComments": null
              },
              "init": {
                "type": "CallExpression",
                "start": 9246,
                "end": 9301,
                "loc": {
                  "start": {
                    "line": 290,
                    "column": 19
                  },
                  "end": {
                    "line": 290,
                    "column": 74
                  }
                },
                "callee": {
                  "type": "Identifier",
                  "start": 9246,
                  "end": 9281,
                  "loc": {
                    "start": {
                      "line": 290,
                      "column": 19
                    },
                    "end": {
                      "line": 290,
                      "column": 54
                    },
                    "identifierName": "decoratedPropertyWithRequiredParams"
                  },
                  "name": "decoratedPropertyWithRequiredParams"
                },
                "arguments": [
                  {
                    "type": "MemberExpression",
                    "start": 9282,
                    "end": 9300,
                    "loc": {
                      "start": {
                        "line": 290,
                        "column": 55
                      },
                      "end": {
                        "line": 290,
                        "column": 73
                      }
                    },
                    "object": {
                      "type": "MemberExpression",
                      "start": 9282,
                      "end": 9296,
                      "loc": {
                        "start": {
                          "line": 290,
                          "column": 55
                        },
                        "end": {
                          "line": 290,
                          "column": 69
                        }
                      },
                      "object": {
                        "type": "Identifier",
                        "start": 9282,
                        "end": 9287,
                        "loc": {
                          "start": {
                            "line": 290,
                            "column": 55
                          },
                          "end": {
                            "line": 290,
                            "column": 60
                          },
                          "identifierName": "Ember"
                        },
                        "name": "Ember"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 9288,
                        "end": 9296,
                        "loc": {
                          "start": {
                            "line": 290,
                            "column": 61
                          },
                          "end": {
                            "line": 290,
                            "column": 69
                          },
                          "identifierName": "computed"
                        },
                        "name": "computed"
                      },
                      "computed": false
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 9297,
                      "end": 9300,
                      "loc": {
                        "start": {
                          "line": 290,
                          "column": 70
                        },
                        "end": {
                          "line": 290,
                          "column": 73
                        },
                        "identifierName": "gte"
                      },
                      "name": "gte"
                    },
                    "computed": false
                  }
                ]
              },
              "leadingComments": null
            }
          ],
          "kind": "const",
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.gte](http://emberjs.com/api/classes/Ember.computed.html#method_gte)\n *\n * A computed property that returns `true` if the provided dependent property\n * is greater than or equal to the provided value.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { gte } from 'ember-decorators/object/computed';\n *\n * export default class PlayerListComponent extends Component {\n *   totalPlayers = 14;\n *\n *   @gte('totalPlayers', 14) hasEnoughPlayers; // true\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to compare\n * @param {Number} value - Value to compare against\n ",
              "start": 8559,
              "end": 9226,
              "loc": {
                "start": {
                  "line": 269,
                  "column": 0
                },
                "end": {
                  "line": 289,
                  "column": 3
                }
              }
            }
          ],
          "trailingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.intersect](http://emberjs.com/api/classes/Ember.computed.html#method_intersect)\n *\n * A computed property which returns a new array with all the duplicated\n * elements from two or more dependent arrays.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { intersect } from 'ember-decorators/object/computed';\n *\n * export default class FoodListComponent extends Component {\n *   likes = A([ 'tacos', 'puppies', 'pizza' ]);\n *   foods = A(['tacos', 'pizza']);\n *\n *   @intersect('likes', 'foods') favoriteFoods; // ['tacos', 'pizza']\n * }\n * ```\n *\n * @function\n * @param {...String} dependentKeys - Keys of the arrays to intersect\n ",
              "start": 9304,
              "end": 10043,
              "loc": {
                "start": {
                  "line": 292,
                  "column": 0
                },
                "end": {
                  "line": 313,
                  "column": 3
                }
              }
            }
          ]
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.gte](http://emberjs.com/api/classes/Ember.computed.html#method_gte)\n *\n * A computed property that returns `true` if the provided dependent property\n * is greater than or equal to the provided value.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { gte } from 'ember-decorators/object/computed';\n *\n * export default class PlayerListComponent extends Component {\n *   totalPlayers = 14;\n *\n *   @gte('totalPlayers', 14) hasEnoughPlayers; // true\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to compare\n * @param {Number} value - Value to compare against\n ",
            "start": 8559,
            "end": 9226,
            "loc": {
              "start": {
                "line": 269,
                "column": 0
              },
              "end": {
                "line": 289,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.intersect](http://emberjs.com/api/classes/Ember.computed.html#method_intersect)\n *\n * A computed property which returns a new array with all the duplicated\n * elements from two or more dependent arrays.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { intersect } from 'ember-decorators/object/computed';\n *\n * export default class FoodListComponent extends Component {\n *   likes = A([ 'tacos', 'puppies', 'pizza' ]);\n *   foods = A(['tacos', 'pizza']);\n *\n *   @intersect('likes', 'foods') favoriteFoods; // ['tacos', 'pizza']\n * }\n * ```\n *\n * @function\n * @param {...String} dependentKeys - Keys of the arrays to intersect\n ",
            "start": 9304,
            "end": 10043,
            "loc": {
              "start": {
                "line": 292,
                "column": 0
              },
              "end": {
                "line": 313,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 10044,
        "end": 10131,
        "loc": {
          "start": {
            "line": 314,
            "column": 0
          },
          "end": {
            "line": 314,
            "column": 87
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "VariableDeclaration",
          "start": 10051,
          "end": 10131,
          "loc": {
            "start": {
              "line": 314,
              "column": 7
            },
            "end": {
              "line": 314,
              "column": 87
            }
          },
          "declarations": [
            {
              "type": "VariableDeclarator",
              "start": 10057,
              "end": 10130,
              "loc": {
                "start": {
                  "line": 314,
                  "column": 13
                },
                "end": {
                  "line": 314,
                  "column": 86
                }
              },
              "id": {
                "type": "Identifier",
                "start": 10057,
                "end": 10066,
                "loc": {
                  "start": {
                    "line": 314,
                    "column": 13
                  },
                  "end": {
                    "line": 314,
                    "column": 22
                  },
                  "identifierName": "intersect"
                },
                "name": "intersect",
                "leadingComments": null
              },
              "init": {
                "type": "CallExpression",
                "start": 10069,
                "end": 10130,
                "loc": {
                  "start": {
                    "line": 314,
                    "column": 25
                  },
                  "end": {
                    "line": 314,
                    "column": 86
                  }
                },
                "callee": {
                  "type": "Identifier",
                  "start": 10069,
                  "end": 10104,
                  "loc": {
                    "start": {
                      "line": 314,
                      "column": 25
                    },
                    "end": {
                      "line": 314,
                      "column": 60
                    },
                    "identifierName": "decoratedPropertyWithRequiredParams"
                  },
                  "name": "decoratedPropertyWithRequiredParams"
                },
                "arguments": [
                  {
                    "type": "MemberExpression",
                    "start": 10105,
                    "end": 10129,
                    "loc": {
                      "start": {
                        "line": 314,
                        "column": 61
                      },
                      "end": {
                        "line": 314,
                        "column": 85
                      }
                    },
                    "object": {
                      "type": "MemberExpression",
                      "start": 10105,
                      "end": 10119,
                      "loc": {
                        "start": {
                          "line": 314,
                          "column": 61
                        },
                        "end": {
                          "line": 314,
                          "column": 75
                        }
                      },
                      "object": {
                        "type": "Identifier",
                        "start": 10105,
                        "end": 10110,
                        "loc": {
                          "start": {
                            "line": 314,
                            "column": 61
                          },
                          "end": {
                            "line": 314,
                            "column": 66
                          },
                          "identifierName": "Ember"
                        },
                        "name": "Ember"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 10111,
                        "end": 10119,
                        "loc": {
                          "start": {
                            "line": 314,
                            "column": 67
                          },
                          "end": {
                            "line": 314,
                            "column": 75
                          },
                          "identifierName": "computed"
                        },
                        "name": "computed"
                      },
                      "computed": false
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 10120,
                      "end": 10129,
                      "loc": {
                        "start": {
                          "line": 314,
                          "column": 76
                        },
                        "end": {
                          "line": 314,
                          "column": 85
                        },
                        "identifierName": "intersect"
                      },
                      "name": "intersect"
                    },
                    "computed": false
                  }
                ]
              },
              "leadingComments": null
            }
          ],
          "kind": "const",
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.intersect](http://emberjs.com/api/classes/Ember.computed.html#method_intersect)\n *\n * A computed property which returns a new array with all the duplicated\n * elements from two or more dependent arrays.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { intersect } from 'ember-decorators/object/computed';\n *\n * export default class FoodListComponent extends Component {\n *   likes = A([ 'tacos', 'puppies', 'pizza' ]);\n *   foods = A(['tacos', 'pizza']);\n *\n *   @intersect('likes', 'foods') favoriteFoods; // ['tacos', 'pizza']\n * }\n * ```\n *\n * @function\n * @param {...String} dependentKeys - Keys of the arrays to intersect\n ",
              "start": 9304,
              "end": 10043,
              "loc": {
                "start": {
                  "line": 292,
                  "column": 0
                },
                "end": {
                  "line": 313,
                  "column": 3
                }
              }
            }
          ],
          "trailingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.lt](http://emberjs.com/api/classes/Ember.computed.html#method_lt)\n *\n * A computed property that returns `true` if the provided dependent property\n * is less than the provided value.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { lt } from 'ember-decorators/object/computed';\n *\n * export default class DogPartyComponent extends Component {\n *   totalDogs = 3;\n *\n *   @lt('totalDogs', 10) isDogParty; // true\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to compare\n * @param {Number} value - Value to compare against\n ",
              "start": 10133,
              "end": 10766,
              "loc": {
                "start": {
                  "line": 316,
                  "column": 0
                },
                "end": {
                  "line": 336,
                  "column": 3
                }
              }
            }
          ]
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.intersect](http://emberjs.com/api/classes/Ember.computed.html#method_intersect)\n *\n * A computed property which returns a new array with all the duplicated\n * elements from two or more dependent arrays.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { intersect } from 'ember-decorators/object/computed';\n *\n * export default class FoodListComponent extends Component {\n *   likes = A([ 'tacos', 'puppies', 'pizza' ]);\n *   foods = A(['tacos', 'pizza']);\n *\n *   @intersect('likes', 'foods') favoriteFoods; // ['tacos', 'pizza']\n * }\n * ```\n *\n * @function\n * @param {...String} dependentKeys - Keys of the arrays to intersect\n ",
            "start": 9304,
            "end": 10043,
            "loc": {
              "start": {
                "line": 292,
                "column": 0
              },
              "end": {
                "line": 313,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.lt](http://emberjs.com/api/classes/Ember.computed.html#method_lt)\n *\n * A computed property that returns `true` if the provided dependent property\n * is less than the provided value.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { lt } from 'ember-decorators/object/computed';\n *\n * export default class DogPartyComponent extends Component {\n *   totalDogs = 3;\n *\n *   @lt('totalDogs', 10) isDogParty; // true\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to compare\n * @param {Number} value - Value to compare against\n ",
            "start": 10133,
            "end": 10766,
            "loc": {
              "start": {
                "line": 316,
                "column": 0
              },
              "end": {
                "line": 336,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 10767,
        "end": 10840,
        "loc": {
          "start": {
            "line": 337,
            "column": 0
          },
          "end": {
            "line": 337,
            "column": 73
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "VariableDeclaration",
          "start": 10774,
          "end": 10840,
          "loc": {
            "start": {
              "line": 337,
              "column": 7
            },
            "end": {
              "line": 337,
              "column": 73
            }
          },
          "declarations": [
            {
              "type": "VariableDeclarator",
              "start": 10780,
              "end": 10839,
              "loc": {
                "start": {
                  "line": 337,
                  "column": 13
                },
                "end": {
                  "line": 337,
                  "column": 72
                }
              },
              "id": {
                "type": "Identifier",
                "start": 10780,
                "end": 10782,
                "loc": {
                  "start": {
                    "line": 337,
                    "column": 13
                  },
                  "end": {
                    "line": 337,
                    "column": 15
                  },
                  "identifierName": "lt"
                },
                "name": "lt",
                "leadingComments": null
              },
              "init": {
                "type": "CallExpression",
                "start": 10785,
                "end": 10839,
                "loc": {
                  "start": {
                    "line": 337,
                    "column": 18
                  },
                  "end": {
                    "line": 337,
                    "column": 72
                  }
                },
                "callee": {
                  "type": "Identifier",
                  "start": 10785,
                  "end": 10820,
                  "loc": {
                    "start": {
                      "line": 337,
                      "column": 18
                    },
                    "end": {
                      "line": 337,
                      "column": 53
                    },
                    "identifierName": "decoratedPropertyWithRequiredParams"
                  },
                  "name": "decoratedPropertyWithRequiredParams"
                },
                "arguments": [
                  {
                    "type": "MemberExpression",
                    "start": 10821,
                    "end": 10838,
                    "loc": {
                      "start": {
                        "line": 337,
                        "column": 54
                      },
                      "end": {
                        "line": 337,
                        "column": 71
                      }
                    },
                    "object": {
                      "type": "MemberExpression",
                      "start": 10821,
                      "end": 10835,
                      "loc": {
                        "start": {
                          "line": 337,
                          "column": 54
                        },
                        "end": {
                          "line": 337,
                          "column": 68
                        }
                      },
                      "object": {
                        "type": "Identifier",
                        "start": 10821,
                        "end": 10826,
                        "loc": {
                          "start": {
                            "line": 337,
                            "column": 54
                          },
                          "end": {
                            "line": 337,
                            "column": 59
                          },
                          "identifierName": "Ember"
                        },
                        "name": "Ember"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 10827,
                        "end": 10835,
                        "loc": {
                          "start": {
                            "line": 337,
                            "column": 60
                          },
                          "end": {
                            "line": 337,
                            "column": 68
                          },
                          "identifierName": "computed"
                        },
                        "name": "computed"
                      },
                      "computed": false
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 10836,
                      "end": 10838,
                      "loc": {
                        "start": {
                          "line": 337,
                          "column": 69
                        },
                        "end": {
                          "line": 337,
                          "column": 71
                        },
                        "identifierName": "lt"
                      },
                      "name": "lt"
                    },
                    "computed": false
                  }
                ]
              },
              "leadingComments": null
            }
          ],
          "kind": "const",
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.lt](http://emberjs.com/api/classes/Ember.computed.html#method_lt)\n *\n * A computed property that returns `true` if the provided dependent property\n * is less than the provided value.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { lt } from 'ember-decorators/object/computed';\n *\n * export default class DogPartyComponent extends Component {\n *   totalDogs = 3;\n *\n *   @lt('totalDogs', 10) isDogParty; // true\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to compare\n * @param {Number} value - Value to compare against\n ",
              "start": 10133,
              "end": 10766,
              "loc": {
                "start": {
                  "line": 316,
                  "column": 0
                },
                "end": {
                  "line": 336,
                  "column": 3
                }
              }
            }
          ],
          "trailingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.lte](http://emberjs.com/api/classes/Ember.computed.html#method_lte)\n *\n * A computed property that returns `true` if the provided dependent property\n * is less than or equal to the provided value.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { lte } from 'ember-decorators/object/computed';\n *\n * export default class PlayerListComponent extends Component {\n *   totalPlayers = 14;\n *\n *   @lte('totalPlayers', 14) hasEnoughPlayers; // true\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to compare\n * @param {Number} value - Value to compare against\n ",
              "start": 10842,
              "end": 11506,
              "loc": {
                "start": {
                  "line": 339,
                  "column": 0
                },
                "end": {
                  "line": 359,
                  "column": 3
                }
              }
            }
          ]
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.lt](http://emberjs.com/api/classes/Ember.computed.html#method_lt)\n *\n * A computed property that returns `true` if the provided dependent property\n * is less than the provided value.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { lt } from 'ember-decorators/object/computed';\n *\n * export default class DogPartyComponent extends Component {\n *   totalDogs = 3;\n *\n *   @lt('totalDogs', 10) isDogParty; // true\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to compare\n * @param {Number} value - Value to compare against\n ",
            "start": 10133,
            "end": 10766,
            "loc": {
              "start": {
                "line": 316,
                "column": 0
              },
              "end": {
                "line": 336,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.lte](http://emberjs.com/api/classes/Ember.computed.html#method_lte)\n *\n * A computed property that returns `true` if the provided dependent property\n * is less than or equal to the provided value.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { lte } from 'ember-decorators/object/computed';\n *\n * export default class PlayerListComponent extends Component {\n *   totalPlayers = 14;\n *\n *   @lte('totalPlayers', 14) hasEnoughPlayers; // true\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to compare\n * @param {Number} value - Value to compare against\n ",
            "start": 10842,
            "end": 11506,
            "loc": {
              "start": {
                "line": 339,
                "column": 0
              },
              "end": {
                "line": 359,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 11507,
        "end": 11582,
        "loc": {
          "start": {
            "line": 360,
            "column": 0
          },
          "end": {
            "line": 360,
            "column": 75
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "VariableDeclaration",
          "start": 11514,
          "end": 11582,
          "loc": {
            "start": {
              "line": 360,
              "column": 7
            },
            "end": {
              "line": 360,
              "column": 75
            }
          },
          "declarations": [
            {
              "type": "VariableDeclarator",
              "start": 11520,
              "end": 11581,
              "loc": {
                "start": {
                  "line": 360,
                  "column": 13
                },
                "end": {
                  "line": 360,
                  "column": 74
                }
              },
              "id": {
                "type": "Identifier",
                "start": 11520,
                "end": 11523,
                "loc": {
                  "start": {
                    "line": 360,
                    "column": 13
                  },
                  "end": {
                    "line": 360,
                    "column": 16
                  },
                  "identifierName": "lte"
                },
                "name": "lte",
                "leadingComments": null
              },
              "init": {
                "type": "CallExpression",
                "start": 11526,
                "end": 11581,
                "loc": {
                  "start": {
                    "line": 360,
                    "column": 19
                  },
                  "end": {
                    "line": 360,
                    "column": 74
                  }
                },
                "callee": {
                  "type": "Identifier",
                  "start": 11526,
                  "end": 11561,
                  "loc": {
                    "start": {
                      "line": 360,
                      "column": 19
                    },
                    "end": {
                      "line": 360,
                      "column": 54
                    },
                    "identifierName": "decoratedPropertyWithRequiredParams"
                  },
                  "name": "decoratedPropertyWithRequiredParams"
                },
                "arguments": [
                  {
                    "type": "MemberExpression",
                    "start": 11562,
                    "end": 11580,
                    "loc": {
                      "start": {
                        "line": 360,
                        "column": 55
                      },
                      "end": {
                        "line": 360,
                        "column": 73
                      }
                    },
                    "object": {
                      "type": "MemberExpression",
                      "start": 11562,
                      "end": 11576,
                      "loc": {
                        "start": {
                          "line": 360,
                          "column": 55
                        },
                        "end": {
                          "line": 360,
                          "column": 69
                        }
                      },
                      "object": {
                        "type": "Identifier",
                        "start": 11562,
                        "end": 11567,
                        "loc": {
                          "start": {
                            "line": 360,
                            "column": 55
                          },
                          "end": {
                            "line": 360,
                            "column": 60
                          },
                          "identifierName": "Ember"
                        },
                        "name": "Ember"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 11568,
                        "end": 11576,
                        "loc": {
                          "start": {
                            "line": 360,
                            "column": 61
                          },
                          "end": {
                            "line": 360,
                            "column": 69
                          },
                          "identifierName": "computed"
                        },
                        "name": "computed"
                      },
                      "computed": false
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 11577,
                      "end": 11580,
                      "loc": {
                        "start": {
                          "line": 360,
                          "column": 70
                        },
                        "end": {
                          "line": 360,
                          "column": 73
                        },
                        "identifierName": "lte"
                      },
                      "name": "lte"
                    },
                    "computed": false
                  }
                ]
              },
              "leadingComments": null
            }
          ],
          "kind": "const",
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.lte](http://emberjs.com/api/classes/Ember.computed.html#method_lte)\n *\n * A computed property that returns `true` if the provided dependent property\n * is less than or equal to the provided value.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { lte } from 'ember-decorators/object/computed';\n *\n * export default class PlayerListComponent extends Component {\n *   totalPlayers = 14;\n *\n *   @lte('totalPlayers', 14) hasEnoughPlayers; // true\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to compare\n * @param {Number} value - Value to compare against\n ",
              "start": 10842,
              "end": 11506,
              "loc": {
                "start": {
                  "line": 339,
                  "column": 0
                },
                "end": {
                  "line": 359,
                  "column": 3
                }
              }
            }
          ],
          "trailingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.map](http://emberjs.com/api/classes/Ember.computed.html#method_map)\n *\n * Returns an array mapped via the callback\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { map } from 'ember-decorators/object/computed';\n *\n * export default class ChoresListComponent extends Component {\n *   chores = A(['clean', 'write more unit tests']);\n *\n *   @map('chores')\n *   loudChores(chore, index) {\n *     return chore.toUpperCase() + '!';\n *   } // ['CLEAN!', 'WRITE MORE UNIT TESTS!']\n *\n *   // alternative syntax:\n *\n *   @map('chores', function(chore, index) {\n *     return chore.toUpperCase() + '!';\n *   }) loudChores; // ['CLEAN!', 'WRITE MORE UNIT TESTS!']\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the array to map over\n * @param {Function(item: Any, index: Number): Any} callback - Function to map over the array\n ",
              "start": 11584,
              "end": 12536,
              "loc": {
                "start": {
                  "line": 362,
                  "column": 0
                },
                "end": {
                  "line": 391,
                  "column": 3
                }
              }
            }
          ]
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.lte](http://emberjs.com/api/classes/Ember.computed.html#method_lte)\n *\n * A computed property that returns `true` if the provided dependent property\n * is less than or equal to the provided value.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { lte } from 'ember-decorators/object/computed';\n *\n * export default class PlayerListComponent extends Component {\n *   totalPlayers = 14;\n *\n *   @lte('totalPlayers', 14) hasEnoughPlayers; // true\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to compare\n * @param {Number} value - Value to compare against\n ",
            "start": 10842,
            "end": 11506,
            "loc": {
              "start": {
                "line": 339,
                "column": 0
              },
              "end": {
                "line": 359,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.map](http://emberjs.com/api/classes/Ember.computed.html#method_map)\n *\n * Returns an array mapped via the callback\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { map } from 'ember-decorators/object/computed';\n *\n * export default class ChoresListComponent extends Component {\n *   chores = A(['clean', 'write more unit tests']);\n *\n *   @map('chores')\n *   loudChores(chore, index) {\n *     return chore.toUpperCase() + '!';\n *   } // ['CLEAN!', 'WRITE MORE UNIT TESTS!']\n *\n *   // alternative syntax:\n *\n *   @map('chores', function(chore, index) {\n *     return chore.toUpperCase() + '!';\n *   }) loudChores; // ['CLEAN!', 'WRITE MORE UNIT TESTS!']\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the array to map over\n * @param {Function(item: Any, index: Number): Any} callback - Function to map over the array\n ",
            "start": 11584,
            "end": 12536,
            "loc": {
              "start": {
                "line": 362,
                "column": 0
              },
              "end": {
                "line": 391,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 12537,
        "end": 12614,
        "loc": {
          "start": {
            "line": 392,
            "column": 0
          },
          "end": {
            "line": 392,
            "column": 77
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "VariableDeclaration",
          "start": 12544,
          "end": 12614,
          "loc": {
            "start": {
              "line": 392,
              "column": 7
            },
            "end": {
              "line": 392,
              "column": 77
            }
          },
          "declarations": [
            {
              "type": "VariableDeclarator",
              "start": 12550,
              "end": 12613,
              "loc": {
                "start": {
                  "line": 392,
                  "column": 13
                },
                "end": {
                  "line": 392,
                  "column": 76
                }
              },
              "id": {
                "type": "Identifier",
                "start": 12550,
                "end": 12553,
                "loc": {
                  "start": {
                    "line": 392,
                    "column": 13
                  },
                  "end": {
                    "line": 392,
                    "column": 16
                  },
                  "identifierName": "map"
                },
                "name": "map",
                "leadingComments": null
              },
              "init": {
                "type": "CallExpression",
                "start": 12556,
                "end": 12613,
                "loc": {
                  "start": {
                    "line": 392,
                    "column": 19
                  },
                  "end": {
                    "line": 392,
                    "column": 76
                  }
                },
                "callee": {
                  "type": "Identifier",
                  "start": 12556,
                  "end": 12593,
                  "loc": {
                    "start": {
                      "line": 392,
                      "column": 19
                    },
                    "end": {
                      "line": 392,
                      "column": 56
                    },
                    "identifierName": "decoratedPropertyWithOptionalCallback"
                  },
                  "name": "decoratedPropertyWithOptionalCallback"
                },
                "arguments": [
                  {
                    "type": "MemberExpression",
                    "start": 12594,
                    "end": 12612,
                    "loc": {
                      "start": {
                        "line": 392,
                        "column": 57
                      },
                      "end": {
                        "line": 392,
                        "column": 75
                      }
                    },
                    "object": {
                      "type": "MemberExpression",
                      "start": 12594,
                      "end": 12608,
                      "loc": {
                        "start": {
                          "line": 392,
                          "column": 57
                        },
                        "end": {
                          "line": 392,
                          "column": 71
                        }
                      },
                      "object": {
                        "type": "Identifier",
                        "start": 12594,
                        "end": 12599,
                        "loc": {
                          "start": {
                            "line": 392,
                            "column": 57
                          },
                          "end": {
                            "line": 392,
                            "column": 62
                          },
                          "identifierName": "Ember"
                        },
                        "name": "Ember"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 12600,
                        "end": 12608,
                        "loc": {
                          "start": {
                            "line": 392,
                            "column": 63
                          },
                          "end": {
                            "line": 392,
                            "column": 71
                          },
                          "identifierName": "computed"
                        },
                        "name": "computed"
                      },
                      "computed": false
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 12609,
                      "end": 12612,
                      "loc": {
                        "start": {
                          "line": 392,
                          "column": 72
                        },
                        "end": {
                          "line": 392,
                          "column": 75
                        },
                        "identifierName": "map"
                      },
                      "name": "map"
                    },
                    "computed": false
                  }
                ]
              },
              "leadingComments": null
            }
          ],
          "kind": "const",
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.map](http://emberjs.com/api/classes/Ember.computed.html#method_map)\n *\n * Returns an array mapped via the callback\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { map } from 'ember-decorators/object/computed';\n *\n * export default class ChoresListComponent extends Component {\n *   chores = A(['clean', 'write more unit tests']);\n *\n *   @map('chores')\n *   loudChores(chore, index) {\n *     return chore.toUpperCase() + '!';\n *   } // ['CLEAN!', 'WRITE MORE UNIT TESTS!']\n *\n *   // alternative syntax:\n *\n *   @map('chores', function(chore, index) {\n *     return chore.toUpperCase() + '!';\n *   }) loudChores; // ['CLEAN!', 'WRITE MORE UNIT TESTS!']\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the array to map over\n * @param {Function(item: Any, index: Number): Any} callback - Function to map over the array\n ",
              "start": 11584,
              "end": 12536,
              "loc": {
                "start": {
                  "line": 362,
                  "column": 0
                },
                "end": {
                  "line": 391,
                  "column": 3
                }
              }
            }
          ],
          "trailingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.mapBy](http://emberjs.com/api/classes/Ember.computed.html#method_mapBy)\n *\n * Returns an array mapped to the specified key.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { mapBy } from 'ember-decorators/object/computed';\n *\n * export default class PeopleListComponent extends Component {\n *   people = A([\n *     {name: \"George\", age: 5},\n *     {name: \"Stella\", age: 10},\n *     {name: \"Violet\", age: 7}\n *   ]);\n *\n *   @mapBy('people', 'age') ages; // [5, 10, 7]\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the array to map over\n * @param {String} propertyKey - Property of the array items to map by\n ",
              "start": 12616,
              "end": 13358,
              "loc": {
                "start": {
                  "line": 394,
                  "column": 0
                },
                "end": {
                  "line": 418,
                  "column": 3
                }
              }
            }
          ]
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.map](http://emberjs.com/api/classes/Ember.computed.html#method_map)\n *\n * Returns an array mapped via the callback\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { map } from 'ember-decorators/object/computed';\n *\n * export default class ChoresListComponent extends Component {\n *   chores = A(['clean', 'write more unit tests']);\n *\n *   @map('chores')\n *   loudChores(chore, index) {\n *     return chore.toUpperCase() + '!';\n *   } // ['CLEAN!', 'WRITE MORE UNIT TESTS!']\n *\n *   // alternative syntax:\n *\n *   @map('chores', function(chore, index) {\n *     return chore.toUpperCase() + '!';\n *   }) loudChores; // ['CLEAN!', 'WRITE MORE UNIT TESTS!']\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the array to map over\n * @param {Function(item: Any, index: Number): Any} callback - Function to map over the array\n ",
            "start": 11584,
            "end": 12536,
            "loc": {
              "start": {
                "line": 362,
                "column": 0
              },
              "end": {
                "line": 391,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.mapBy](http://emberjs.com/api/classes/Ember.computed.html#method_mapBy)\n *\n * Returns an array mapped to the specified key.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { mapBy } from 'ember-decorators/object/computed';\n *\n * export default class PeopleListComponent extends Component {\n *   people = A([\n *     {name: \"George\", age: 5},\n *     {name: \"Stella\", age: 10},\n *     {name: \"Violet\", age: 7}\n *   ]);\n *\n *   @mapBy('people', 'age') ages; // [5, 10, 7]\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the array to map over\n * @param {String} propertyKey - Property of the array items to map by\n ",
            "start": 12616,
            "end": 13358,
            "loc": {
              "start": {
                "line": 394,
                "column": 0
              },
              "end": {
                "line": 418,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 13359,
        "end": 13438,
        "loc": {
          "start": {
            "line": 419,
            "column": 0
          },
          "end": {
            "line": 419,
            "column": 79
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "VariableDeclaration",
          "start": 13366,
          "end": 13438,
          "loc": {
            "start": {
              "line": 419,
              "column": 7
            },
            "end": {
              "line": 419,
              "column": 79
            }
          },
          "declarations": [
            {
              "type": "VariableDeclarator",
              "start": 13372,
              "end": 13437,
              "loc": {
                "start": {
                  "line": 419,
                  "column": 13
                },
                "end": {
                  "line": 419,
                  "column": 78
                }
              },
              "id": {
                "type": "Identifier",
                "start": 13372,
                "end": 13377,
                "loc": {
                  "start": {
                    "line": 419,
                    "column": 13
                  },
                  "end": {
                    "line": 419,
                    "column": 18
                  },
                  "identifierName": "mapBy"
                },
                "name": "mapBy",
                "leadingComments": null
              },
              "init": {
                "type": "CallExpression",
                "start": 13380,
                "end": 13437,
                "loc": {
                  "start": {
                    "line": 419,
                    "column": 21
                  },
                  "end": {
                    "line": 419,
                    "column": 78
                  }
                },
                "callee": {
                  "type": "Identifier",
                  "start": 13380,
                  "end": 13415,
                  "loc": {
                    "start": {
                      "line": 419,
                      "column": 21
                    },
                    "end": {
                      "line": 419,
                      "column": 56
                    },
                    "identifierName": "decoratedPropertyWithRequiredParams"
                  },
                  "name": "decoratedPropertyWithRequiredParams"
                },
                "arguments": [
                  {
                    "type": "MemberExpression",
                    "start": 13416,
                    "end": 13436,
                    "loc": {
                      "start": {
                        "line": 419,
                        "column": 57
                      },
                      "end": {
                        "line": 419,
                        "column": 77
                      }
                    },
                    "object": {
                      "type": "MemberExpression",
                      "start": 13416,
                      "end": 13430,
                      "loc": {
                        "start": {
                          "line": 419,
                          "column": 57
                        },
                        "end": {
                          "line": 419,
                          "column": 71
                        }
                      },
                      "object": {
                        "type": "Identifier",
                        "start": 13416,
                        "end": 13421,
                        "loc": {
                          "start": {
                            "line": 419,
                            "column": 57
                          },
                          "end": {
                            "line": 419,
                            "column": 62
                          },
                          "identifierName": "Ember"
                        },
                        "name": "Ember"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 13422,
                        "end": 13430,
                        "loc": {
                          "start": {
                            "line": 419,
                            "column": 63
                          },
                          "end": {
                            "line": 419,
                            "column": 71
                          },
                          "identifierName": "computed"
                        },
                        "name": "computed"
                      },
                      "computed": false
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 13431,
                      "end": 13436,
                      "loc": {
                        "start": {
                          "line": 419,
                          "column": 72
                        },
                        "end": {
                          "line": 419,
                          "column": 77
                        },
                        "identifierName": "mapBy"
                      },
                      "name": "mapBy"
                    },
                    "computed": false
                  }
                ]
              },
              "leadingComments": null
            }
          ],
          "kind": "const",
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.mapBy](http://emberjs.com/api/classes/Ember.computed.html#method_mapBy)\n *\n * Returns an array mapped to the specified key.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { mapBy } from 'ember-decorators/object/computed';\n *\n * export default class PeopleListComponent extends Component {\n *   people = A([\n *     {name: \"George\", age: 5},\n *     {name: \"Stella\", age: 10},\n *     {name: \"Violet\", age: 7}\n *   ]);\n *\n *   @mapBy('people', 'age') ages; // [5, 10, 7]\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the array to map over\n * @param {String} propertyKey - Property of the array items to map by\n ",
              "start": 12616,
              "end": 13358,
              "loc": {
                "start": {
                  "line": 394,
                  "column": 0
                },
                "end": {
                  "line": 418,
                  "column": 3
                }
              }
            }
          ],
          "trailingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.match](http://emberjs.com/api/classes/Ember.computed.html#method_match)\n *\n * A computed property which matches the original value for the dependent\n * property against a given RegExp, returning `true` if they values matches\n * the RegExp and `false` if it does not.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { match } from 'ember-decorators/object/computed';\n *\n * export default class IsEmailValidComponent extends Component {\n *   email = 'tomster@emberjs.com';\n *\n *   @match('email', /^.+@.+\\..+$/) validEmail;\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - The property to match\n * @param {RegExp} pattern - The pattern to match against\n ",
              "start": 13440,
              "end": 14178,
              "loc": {
                "start": {
                  "line": 421,
                  "column": 0
                },
                "end": {
                  "line": 442,
                  "column": 3
                }
              }
            }
          ]
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.mapBy](http://emberjs.com/api/classes/Ember.computed.html#method_mapBy)\n *\n * Returns an array mapped to the specified key.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { mapBy } from 'ember-decorators/object/computed';\n *\n * export default class PeopleListComponent extends Component {\n *   people = A([\n *     {name: \"George\", age: 5},\n *     {name: \"Stella\", age: 10},\n *     {name: \"Violet\", age: 7}\n *   ]);\n *\n *   @mapBy('people', 'age') ages; // [5, 10, 7]\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the array to map over\n * @param {String} propertyKey - Property of the array items to map by\n ",
            "start": 12616,
            "end": 13358,
            "loc": {
              "start": {
                "line": 394,
                "column": 0
              },
              "end": {
                "line": 418,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.match](http://emberjs.com/api/classes/Ember.computed.html#method_match)\n *\n * A computed property which matches the original value for the dependent\n * property against a given RegExp, returning `true` if they values matches\n * the RegExp and `false` if it does not.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { match } from 'ember-decorators/object/computed';\n *\n * export default class IsEmailValidComponent extends Component {\n *   email = 'tomster@emberjs.com';\n *\n *   @match('email', /^.+@.+\\..+$/) validEmail;\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - The property to match\n * @param {RegExp} pattern - The pattern to match against\n ",
            "start": 13440,
            "end": 14178,
            "loc": {
              "start": {
                "line": 421,
                "column": 0
              },
              "end": {
                "line": 442,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 14179,
        "end": 14258,
        "loc": {
          "start": {
            "line": 443,
            "column": 0
          },
          "end": {
            "line": 443,
            "column": 79
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "VariableDeclaration",
          "start": 14186,
          "end": 14258,
          "loc": {
            "start": {
              "line": 443,
              "column": 7
            },
            "end": {
              "line": 443,
              "column": 79
            }
          },
          "declarations": [
            {
              "type": "VariableDeclarator",
              "start": 14192,
              "end": 14257,
              "loc": {
                "start": {
                  "line": 443,
                  "column": 13
                },
                "end": {
                  "line": 443,
                  "column": 78
                }
              },
              "id": {
                "type": "Identifier",
                "start": 14192,
                "end": 14197,
                "loc": {
                  "start": {
                    "line": 443,
                    "column": 13
                  },
                  "end": {
                    "line": 443,
                    "column": 18
                  },
                  "identifierName": "match"
                },
                "name": "match",
                "leadingComments": null
              },
              "init": {
                "type": "CallExpression",
                "start": 14200,
                "end": 14257,
                "loc": {
                  "start": {
                    "line": 443,
                    "column": 21
                  },
                  "end": {
                    "line": 443,
                    "column": 78
                  }
                },
                "callee": {
                  "type": "Identifier",
                  "start": 14200,
                  "end": 14235,
                  "loc": {
                    "start": {
                      "line": 443,
                      "column": 21
                    },
                    "end": {
                      "line": 443,
                      "column": 56
                    },
                    "identifierName": "decoratedPropertyWithRequiredParams"
                  },
                  "name": "decoratedPropertyWithRequiredParams"
                },
                "arguments": [
                  {
                    "type": "MemberExpression",
                    "start": 14236,
                    "end": 14256,
                    "loc": {
                      "start": {
                        "line": 443,
                        "column": 57
                      },
                      "end": {
                        "line": 443,
                        "column": 77
                      }
                    },
                    "object": {
                      "type": "MemberExpression",
                      "start": 14236,
                      "end": 14250,
                      "loc": {
                        "start": {
                          "line": 443,
                          "column": 57
                        },
                        "end": {
                          "line": 443,
                          "column": 71
                        }
                      },
                      "object": {
                        "type": "Identifier",
                        "start": 14236,
                        "end": 14241,
                        "loc": {
                          "start": {
                            "line": 443,
                            "column": 57
                          },
                          "end": {
                            "line": 443,
                            "column": 62
                          },
                          "identifierName": "Ember"
                        },
                        "name": "Ember"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 14242,
                        "end": 14250,
                        "loc": {
                          "start": {
                            "line": 443,
                            "column": 63
                          },
                          "end": {
                            "line": 443,
                            "column": 71
                          },
                          "identifierName": "computed"
                        },
                        "name": "computed"
                      },
                      "computed": false
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 14251,
                      "end": 14256,
                      "loc": {
                        "start": {
                          "line": 443,
                          "column": 72
                        },
                        "end": {
                          "line": 443,
                          "column": 77
                        },
                        "identifierName": "match"
                      },
                      "name": "match"
                    },
                    "computed": false
                  }
                ]
              },
              "leadingComments": null
            }
          ],
          "kind": "const",
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.match](http://emberjs.com/api/classes/Ember.computed.html#method_match)\n *\n * A computed property which matches the original value for the dependent\n * property against a given RegExp, returning `true` if they values matches\n * the RegExp and `false` if it does not.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { match } from 'ember-decorators/object/computed';\n *\n * export default class IsEmailValidComponent extends Component {\n *   email = 'tomster@emberjs.com';\n *\n *   @match('email', /^.+@.+\\..+$/) validEmail;\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - The property to match\n * @param {RegExp} pattern - The pattern to match against\n ",
              "start": 13440,
              "end": 14178,
              "loc": {
                "start": {
                  "line": 421,
                  "column": 0
                },
                "end": {
                  "line": 442,
                  "column": 3
                }
              }
            }
          ],
          "trailingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.max](http://emberjs.com/api/classes/Ember.computed.html#method_max)\n *\n * A computed property that calculates the maximum value in the dependent\n * array. This will return `-Infinity` when the dependent array is empty.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { max } from 'ember-decorators/object/computed';\n *\n * export default class MaxValueComponent extends Component {\n *   values = A([1, 2, 5, 10]);\n *\n *   @max('values') maxValue; // 10\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the array to find the max value of\n ",
              "start": 14260,
              "end": 14928,
              "loc": {
                "start": {
                  "line": 445,
                  "column": 0
                },
                "end": {
                  "line": 465,
                  "column": 3
                }
              }
            }
          ]
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.match](http://emberjs.com/api/classes/Ember.computed.html#method_match)\n *\n * A computed property which matches the original value for the dependent\n * property against a given RegExp, returning `true` if they values matches\n * the RegExp and `false` if it does not.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { match } from 'ember-decorators/object/computed';\n *\n * export default class IsEmailValidComponent extends Component {\n *   email = 'tomster@emberjs.com';\n *\n *   @match('email', /^.+@.+\\..+$/) validEmail;\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - The property to match\n * @param {RegExp} pattern - The pattern to match against\n ",
            "start": 13440,
            "end": 14178,
            "loc": {
              "start": {
                "line": 421,
                "column": 0
              },
              "end": {
                "line": 442,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.max](http://emberjs.com/api/classes/Ember.computed.html#method_max)\n *\n * A computed property that calculates the maximum value in the dependent\n * array. This will return `-Infinity` when the dependent array is empty.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { max } from 'ember-decorators/object/computed';\n *\n * export default class MaxValueComponent extends Component {\n *   values = A([1, 2, 5, 10]);\n *\n *   @max('values') maxValue; // 10\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the array to find the max value of\n ",
            "start": 14260,
            "end": 14928,
            "loc": {
              "start": {
                "line": 445,
                "column": 0
              },
              "end": {
                "line": 465,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 14929,
        "end": 15004,
        "loc": {
          "start": {
            "line": 466,
            "column": 0
          },
          "end": {
            "line": 466,
            "column": 75
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "VariableDeclaration",
          "start": 14936,
          "end": 15004,
          "loc": {
            "start": {
              "line": 466,
              "column": 7
            },
            "end": {
              "line": 466,
              "column": 75
            }
          },
          "declarations": [
            {
              "type": "VariableDeclarator",
              "start": 14942,
              "end": 15003,
              "loc": {
                "start": {
                  "line": 466,
                  "column": 13
                },
                "end": {
                  "line": 466,
                  "column": 74
                }
              },
              "id": {
                "type": "Identifier",
                "start": 14942,
                "end": 14945,
                "loc": {
                  "start": {
                    "line": 466,
                    "column": 13
                  },
                  "end": {
                    "line": 466,
                    "column": 16
                  },
                  "identifierName": "max"
                },
                "name": "max",
                "leadingComments": null
              },
              "init": {
                "type": "CallExpression",
                "start": 14948,
                "end": 15003,
                "loc": {
                  "start": {
                    "line": 466,
                    "column": 19
                  },
                  "end": {
                    "line": 466,
                    "column": 74
                  }
                },
                "callee": {
                  "type": "Identifier",
                  "start": 14948,
                  "end": 14983,
                  "loc": {
                    "start": {
                      "line": 466,
                      "column": 19
                    },
                    "end": {
                      "line": 466,
                      "column": 54
                    },
                    "identifierName": "decoratedPropertyWithRequiredParams"
                  },
                  "name": "decoratedPropertyWithRequiredParams"
                },
                "arguments": [
                  {
                    "type": "MemberExpression",
                    "start": 14984,
                    "end": 15002,
                    "loc": {
                      "start": {
                        "line": 466,
                        "column": 55
                      },
                      "end": {
                        "line": 466,
                        "column": 73
                      }
                    },
                    "object": {
                      "type": "MemberExpression",
                      "start": 14984,
                      "end": 14998,
                      "loc": {
                        "start": {
                          "line": 466,
                          "column": 55
                        },
                        "end": {
                          "line": 466,
                          "column": 69
                        }
                      },
                      "object": {
                        "type": "Identifier",
                        "start": 14984,
                        "end": 14989,
                        "loc": {
                          "start": {
                            "line": 466,
                            "column": 55
                          },
                          "end": {
                            "line": 466,
                            "column": 60
                          },
                          "identifierName": "Ember"
                        },
                        "name": "Ember"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 14990,
                        "end": 14998,
                        "loc": {
                          "start": {
                            "line": 466,
                            "column": 61
                          },
                          "end": {
                            "line": 466,
                            "column": 69
                          },
                          "identifierName": "computed"
                        },
                        "name": "computed"
                      },
                      "computed": false
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 14999,
                      "end": 15002,
                      "loc": {
                        "start": {
                          "line": 466,
                          "column": 70
                        },
                        "end": {
                          "line": 466,
                          "column": 73
                        },
                        "identifierName": "max"
                      },
                      "name": "max"
                    },
                    "computed": false
                  }
                ]
              },
              "leadingComments": null
            }
          ],
          "kind": "const",
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.max](http://emberjs.com/api/classes/Ember.computed.html#method_max)\n *\n * A computed property that calculates the maximum value in the dependent\n * array. This will return `-Infinity` when the dependent array is empty.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { max } from 'ember-decorators/object/computed';\n *\n * export default class MaxValueComponent extends Component {\n *   values = A([1, 2, 5, 10]);\n *\n *   @max('values') maxValue; // 10\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the array to find the max value of\n ",
              "start": 14260,
              "end": 14928,
              "loc": {
                "start": {
                  "line": 445,
                  "column": 0
                },
                "end": {
                  "line": 465,
                  "column": 3
                }
              }
            }
          ],
          "trailingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.min](http://emberjs.com/api/classes/Ember.computed.html#method_min)\n *\n * A computed property that calculates the minimum value in the dependent\n * array. This will return `Infinity` when the dependent array is empty.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { min } from 'ember-decorators/object/computed';\n *\n * export default class MinValueComponent extends Component {\n *   values = A([1, 2, 5, 10]);\n *\n *   @min('values') minValue; // 1\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the array to find the max value of\n ",
              "start": 15006,
              "end": 15672,
              "loc": {
                "start": {
                  "line": 468,
                  "column": 0
                },
                "end": {
                  "line": 488,
                  "column": 3
                }
              }
            }
          ]
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.max](http://emberjs.com/api/classes/Ember.computed.html#method_max)\n *\n * A computed property that calculates the maximum value in the dependent\n * array. This will return `-Infinity` when the dependent array is empty.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { max } from 'ember-decorators/object/computed';\n *\n * export default class MaxValueComponent extends Component {\n *   values = A([1, 2, 5, 10]);\n *\n *   @max('values') maxValue; // 10\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the array to find the max value of\n ",
            "start": 14260,
            "end": 14928,
            "loc": {
              "start": {
                "line": 445,
                "column": 0
              },
              "end": {
                "line": 465,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.min](http://emberjs.com/api/classes/Ember.computed.html#method_min)\n *\n * A computed property that calculates the minimum value in the dependent\n * array. This will return `Infinity` when the dependent array is empty.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { min } from 'ember-decorators/object/computed';\n *\n * export default class MinValueComponent extends Component {\n *   values = A([1, 2, 5, 10]);\n *\n *   @min('values') minValue; // 1\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the array to find the max value of\n ",
            "start": 15006,
            "end": 15672,
            "loc": {
              "start": {
                "line": 468,
                "column": 0
              },
              "end": {
                "line": 488,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 15673,
        "end": 15748,
        "loc": {
          "start": {
            "line": 489,
            "column": 0
          },
          "end": {
            "line": 489,
            "column": 75
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "VariableDeclaration",
          "start": 15680,
          "end": 15748,
          "loc": {
            "start": {
              "line": 489,
              "column": 7
            },
            "end": {
              "line": 489,
              "column": 75
            }
          },
          "declarations": [
            {
              "type": "VariableDeclarator",
              "start": 15686,
              "end": 15747,
              "loc": {
                "start": {
                  "line": 489,
                  "column": 13
                },
                "end": {
                  "line": 489,
                  "column": 74
                }
              },
              "id": {
                "type": "Identifier",
                "start": 15686,
                "end": 15689,
                "loc": {
                  "start": {
                    "line": 489,
                    "column": 13
                  },
                  "end": {
                    "line": 489,
                    "column": 16
                  },
                  "identifierName": "min"
                },
                "name": "min",
                "leadingComments": null
              },
              "init": {
                "type": "CallExpression",
                "start": 15692,
                "end": 15747,
                "loc": {
                  "start": {
                    "line": 489,
                    "column": 19
                  },
                  "end": {
                    "line": 489,
                    "column": 74
                  }
                },
                "callee": {
                  "type": "Identifier",
                  "start": 15692,
                  "end": 15727,
                  "loc": {
                    "start": {
                      "line": 489,
                      "column": 19
                    },
                    "end": {
                      "line": 489,
                      "column": 54
                    },
                    "identifierName": "decoratedPropertyWithRequiredParams"
                  },
                  "name": "decoratedPropertyWithRequiredParams"
                },
                "arguments": [
                  {
                    "type": "MemberExpression",
                    "start": 15728,
                    "end": 15746,
                    "loc": {
                      "start": {
                        "line": 489,
                        "column": 55
                      },
                      "end": {
                        "line": 489,
                        "column": 73
                      }
                    },
                    "object": {
                      "type": "MemberExpression",
                      "start": 15728,
                      "end": 15742,
                      "loc": {
                        "start": {
                          "line": 489,
                          "column": 55
                        },
                        "end": {
                          "line": 489,
                          "column": 69
                        }
                      },
                      "object": {
                        "type": "Identifier",
                        "start": 15728,
                        "end": 15733,
                        "loc": {
                          "start": {
                            "line": 489,
                            "column": 55
                          },
                          "end": {
                            "line": 489,
                            "column": 60
                          },
                          "identifierName": "Ember"
                        },
                        "name": "Ember"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 15734,
                        "end": 15742,
                        "loc": {
                          "start": {
                            "line": 489,
                            "column": 61
                          },
                          "end": {
                            "line": 489,
                            "column": 69
                          },
                          "identifierName": "computed"
                        },
                        "name": "computed"
                      },
                      "computed": false
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 15743,
                      "end": 15746,
                      "loc": {
                        "start": {
                          "line": 489,
                          "column": 70
                        },
                        "end": {
                          "line": 489,
                          "column": 73
                        },
                        "identifierName": "min"
                      },
                      "name": "min"
                    },
                    "computed": false
                  }
                ]
              },
              "leadingComments": null
            }
          ],
          "kind": "const",
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.min](http://emberjs.com/api/classes/Ember.computed.html#method_min)\n *\n * A computed property that calculates the minimum value in the dependent\n * array. This will return `Infinity` when the dependent array is empty.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { min } from 'ember-decorators/object/computed';\n *\n * export default class MinValueComponent extends Component {\n *   values = A([1, 2, 5, 10]);\n *\n *   @min('values') minValue; // 1\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the array to find the max value of\n ",
              "start": 15006,
              "end": 15672,
              "loc": {
                "start": {
                  "line": 468,
                  "column": 0
                },
                "end": {
                  "line": 488,
                  "column": 3
                }
              }
            }
          ],
          "trailingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.none](http://emberjs.com/api/classes/Ember.computed.html#method_none)\n *\n * A computed property that returns true if the value of the dependent property\n * is null or undefined. This avoids errors from JSLint complaining about use\n * of `==`, which can be technically confusing.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { none } from 'ember-decorators/object/computed';\n *\n * export default class NameDisplayComponent extends Component {\n *   firstName = null;\n *\n *   @none('firstName') isNameless; // true unless firstName is defined\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to check\n ",
              "start": 15750,
              "end": 16459,
              "loc": {
                "start": {
                  "line": 491,
                  "column": 0
                },
                "end": {
                  "line": 511,
                  "column": 3
                }
              }
            }
          ]
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.min](http://emberjs.com/api/classes/Ember.computed.html#method_min)\n *\n * A computed property that calculates the minimum value in the dependent\n * array. This will return `Infinity` when the dependent array is empty.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { min } from 'ember-decorators/object/computed';\n *\n * export default class MinValueComponent extends Component {\n *   values = A([1, 2, 5, 10]);\n *\n *   @min('values') minValue; // 1\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the array to find the max value of\n ",
            "start": 15006,
            "end": 15672,
            "loc": {
              "start": {
                "line": 468,
                "column": 0
              },
              "end": {
                "line": 488,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.none](http://emberjs.com/api/classes/Ember.computed.html#method_none)\n *\n * A computed property that returns true if the value of the dependent property\n * is null or undefined. This avoids errors from JSLint complaining about use\n * of `==`, which can be technically confusing.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { none } from 'ember-decorators/object/computed';\n *\n * export default class NameDisplayComponent extends Component {\n *   firstName = null;\n *\n *   @none('firstName') isNameless; // true unless firstName is defined\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to check\n ",
            "start": 15750,
            "end": 16459,
            "loc": {
              "start": {
                "line": 491,
                "column": 0
              },
              "end": {
                "line": 511,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 16460,
        "end": 16537,
        "loc": {
          "start": {
            "line": 512,
            "column": 0
          },
          "end": {
            "line": 512,
            "column": 77
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "VariableDeclaration",
          "start": 16467,
          "end": 16537,
          "loc": {
            "start": {
              "line": 512,
              "column": 7
            },
            "end": {
              "line": 512,
              "column": 77
            }
          },
          "declarations": [
            {
              "type": "VariableDeclarator",
              "start": 16473,
              "end": 16536,
              "loc": {
                "start": {
                  "line": 512,
                  "column": 13
                },
                "end": {
                  "line": 512,
                  "column": 76
                }
              },
              "id": {
                "type": "Identifier",
                "start": 16473,
                "end": 16477,
                "loc": {
                  "start": {
                    "line": 512,
                    "column": 13
                  },
                  "end": {
                    "line": 512,
                    "column": 17
                  },
                  "identifierName": "none"
                },
                "name": "none",
                "leadingComments": null
              },
              "init": {
                "type": "CallExpression",
                "start": 16480,
                "end": 16536,
                "loc": {
                  "start": {
                    "line": 512,
                    "column": 20
                  },
                  "end": {
                    "line": 512,
                    "column": 76
                  }
                },
                "callee": {
                  "type": "Identifier",
                  "start": 16480,
                  "end": 16515,
                  "loc": {
                    "start": {
                      "line": 512,
                      "column": 20
                    },
                    "end": {
                      "line": 512,
                      "column": 55
                    },
                    "identifierName": "decoratedPropertyWithRequiredParams"
                  },
                  "name": "decoratedPropertyWithRequiredParams"
                },
                "arguments": [
                  {
                    "type": "MemberExpression",
                    "start": 16516,
                    "end": 16535,
                    "loc": {
                      "start": {
                        "line": 512,
                        "column": 56
                      },
                      "end": {
                        "line": 512,
                        "column": 75
                      }
                    },
                    "object": {
                      "type": "MemberExpression",
                      "start": 16516,
                      "end": 16530,
                      "loc": {
                        "start": {
                          "line": 512,
                          "column": 56
                        },
                        "end": {
                          "line": 512,
                          "column": 70
                        }
                      },
                      "object": {
                        "type": "Identifier",
                        "start": 16516,
                        "end": 16521,
                        "loc": {
                          "start": {
                            "line": 512,
                            "column": 56
                          },
                          "end": {
                            "line": 512,
                            "column": 61
                          },
                          "identifierName": "Ember"
                        },
                        "name": "Ember"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 16522,
                        "end": 16530,
                        "loc": {
                          "start": {
                            "line": 512,
                            "column": 62
                          },
                          "end": {
                            "line": 512,
                            "column": 70
                          },
                          "identifierName": "computed"
                        },
                        "name": "computed"
                      },
                      "computed": false
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 16531,
                      "end": 16535,
                      "loc": {
                        "start": {
                          "line": 512,
                          "column": 71
                        },
                        "end": {
                          "line": 512,
                          "column": 75
                        },
                        "identifierName": "none"
                      },
                      "name": "none"
                    },
                    "computed": false
                  }
                ]
              },
              "leadingComments": null
            }
          ],
          "kind": "const",
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.none](http://emberjs.com/api/classes/Ember.computed.html#method_none)\n *\n * A computed property that returns true if the value of the dependent property\n * is null or undefined. This avoids errors from JSLint complaining about use\n * of `==`, which can be technically confusing.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { none } from 'ember-decorators/object/computed';\n *\n * export default class NameDisplayComponent extends Component {\n *   firstName = null;\n *\n *   @none('firstName') isNameless; // true unless firstName is defined\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to check\n ",
              "start": 15750,
              "end": 16459,
              "loc": {
                "start": {
                  "line": 491,
                  "column": 0
                },
                "end": {
                  "line": 511,
                  "column": 3
                }
              }
            }
          ],
          "trailingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.not](http://emberjs.com/api/classes/Ember.computed.html#method_not)\n *\n * A computed property that returns the inverse boolean value of the original\n * value for the dependent property.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { not } from 'ember-decorators/object/computed';\n *\n * export default class UserInfoComponent extends Component {\n *   loggedIn = false;\n *\n *   @not('loggedIn') isAnonymous; // true\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to `not`\n ",
              "start": 16539,
              "end": 17122,
              "loc": {
                "start": {
                  "line": 514,
                  "column": 0
                },
                "end": {
                  "line": 533,
                  "column": 3
                }
              }
            }
          ]
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.none](http://emberjs.com/api/classes/Ember.computed.html#method_none)\n *\n * A computed property that returns true if the value of the dependent property\n * is null or undefined. This avoids errors from JSLint complaining about use\n * of `==`, which can be technically confusing.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { none } from 'ember-decorators/object/computed';\n *\n * export default class NameDisplayComponent extends Component {\n *   firstName = null;\n *\n *   @none('firstName') isNameless; // true unless firstName is defined\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to check\n ",
            "start": 15750,
            "end": 16459,
            "loc": {
              "start": {
                "line": 491,
                "column": 0
              },
              "end": {
                "line": 511,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.not](http://emberjs.com/api/classes/Ember.computed.html#method_not)\n *\n * A computed property that returns the inverse boolean value of the original\n * value for the dependent property.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { not } from 'ember-decorators/object/computed';\n *\n * export default class UserInfoComponent extends Component {\n *   loggedIn = false;\n *\n *   @not('loggedIn') isAnonymous; // true\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to `not`\n ",
            "start": 16539,
            "end": 17122,
            "loc": {
              "start": {
                "line": 514,
                "column": 0
              },
              "end": {
                "line": 533,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 17123,
        "end": 17198,
        "loc": {
          "start": {
            "line": 534,
            "column": 0
          },
          "end": {
            "line": 534,
            "column": 75
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "VariableDeclaration",
          "start": 17130,
          "end": 17198,
          "loc": {
            "start": {
              "line": 534,
              "column": 7
            },
            "end": {
              "line": 534,
              "column": 75
            }
          },
          "declarations": [
            {
              "type": "VariableDeclarator",
              "start": 17136,
              "end": 17197,
              "loc": {
                "start": {
                  "line": 534,
                  "column": 13
                },
                "end": {
                  "line": 534,
                  "column": 74
                }
              },
              "id": {
                "type": "Identifier",
                "start": 17136,
                "end": 17139,
                "loc": {
                  "start": {
                    "line": 534,
                    "column": 13
                  },
                  "end": {
                    "line": 534,
                    "column": 16
                  },
                  "identifierName": "not"
                },
                "name": "not",
                "leadingComments": null
              },
              "init": {
                "type": "CallExpression",
                "start": 17142,
                "end": 17197,
                "loc": {
                  "start": {
                    "line": 534,
                    "column": 19
                  },
                  "end": {
                    "line": 534,
                    "column": 74
                  }
                },
                "callee": {
                  "type": "Identifier",
                  "start": 17142,
                  "end": 17177,
                  "loc": {
                    "start": {
                      "line": 534,
                      "column": 19
                    },
                    "end": {
                      "line": 534,
                      "column": 54
                    },
                    "identifierName": "decoratedPropertyWithRequiredParams"
                  },
                  "name": "decoratedPropertyWithRequiredParams"
                },
                "arguments": [
                  {
                    "type": "MemberExpression",
                    "start": 17178,
                    "end": 17196,
                    "loc": {
                      "start": {
                        "line": 534,
                        "column": 55
                      },
                      "end": {
                        "line": 534,
                        "column": 73
                      }
                    },
                    "object": {
                      "type": "MemberExpression",
                      "start": 17178,
                      "end": 17192,
                      "loc": {
                        "start": {
                          "line": 534,
                          "column": 55
                        },
                        "end": {
                          "line": 534,
                          "column": 69
                        }
                      },
                      "object": {
                        "type": "Identifier",
                        "start": 17178,
                        "end": 17183,
                        "loc": {
                          "start": {
                            "line": 534,
                            "column": 55
                          },
                          "end": {
                            "line": 534,
                            "column": 60
                          },
                          "identifierName": "Ember"
                        },
                        "name": "Ember"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 17184,
                        "end": 17192,
                        "loc": {
                          "start": {
                            "line": 534,
                            "column": 61
                          },
                          "end": {
                            "line": 534,
                            "column": 69
                          },
                          "identifierName": "computed"
                        },
                        "name": "computed"
                      },
                      "computed": false
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 17193,
                      "end": 17196,
                      "loc": {
                        "start": {
                          "line": 534,
                          "column": 70
                        },
                        "end": {
                          "line": 534,
                          "column": 73
                        },
                        "identifierName": "not"
                      },
                      "name": "not"
                    },
                    "computed": false
                  }
                ]
              },
              "leadingComments": null
            }
          ],
          "kind": "const",
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.not](http://emberjs.com/api/classes/Ember.computed.html#method_not)\n *\n * A computed property that returns the inverse boolean value of the original\n * value for the dependent property.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { not } from 'ember-decorators/object/computed';\n *\n * export default class UserInfoComponent extends Component {\n *   loggedIn = false;\n *\n *   @not('loggedIn') isAnonymous; // true\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to `not`\n ",
              "start": 16539,
              "end": 17122,
              "loc": {
                "start": {
                  "line": 514,
                  "column": 0
                },
                "end": {
                  "line": 533,
                  "column": 3
                }
              }
            }
          ],
          "trailingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.notEmpty](http://emberjs.com/api/classes/Ember.computed.html#method_notEmpty)\n *\n * A computed property that returns `true` if the value of the dependent\n * property is NOT null, an empty string, empty array, or empty function.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { notEmpty } from 'ember-decorators/object/computed';\n *\n * export default class GroceryBagComponent extends Component {\n *   groceryBag = A(['milk', 'eggs', 'apples']);\n *\n *   @notEmpty('groceryBag') hasGroceriesToPutAway; // true\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to check\n ",
              "start": 17200,
              "end": 17912,
              "loc": {
                "start": {
                  "line": 536,
                  "column": 0
                },
                "end": {
                  "line": 556,
                  "column": 3
                }
              }
            }
          ]
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.not](http://emberjs.com/api/classes/Ember.computed.html#method_not)\n *\n * A computed property that returns the inverse boolean value of the original\n * value for the dependent property.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { not } from 'ember-decorators/object/computed';\n *\n * export default class UserInfoComponent extends Component {\n *   loggedIn = false;\n *\n *   @not('loggedIn') isAnonymous; // true\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to `not`\n ",
            "start": 16539,
            "end": 17122,
            "loc": {
              "start": {
                "line": 514,
                "column": 0
              },
              "end": {
                "line": 533,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.notEmpty](http://emberjs.com/api/classes/Ember.computed.html#method_notEmpty)\n *\n * A computed property that returns `true` if the value of the dependent\n * property is NOT null, an empty string, empty array, or empty function.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { notEmpty } from 'ember-decorators/object/computed';\n *\n * export default class GroceryBagComponent extends Component {\n *   groceryBag = A(['milk', 'eggs', 'apples']);\n *\n *   @notEmpty('groceryBag') hasGroceriesToPutAway; // true\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to check\n ",
            "start": 17200,
            "end": 17912,
            "loc": {
              "start": {
                "line": 536,
                "column": 0
              },
              "end": {
                "line": 556,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 17913,
        "end": 17998,
        "loc": {
          "start": {
            "line": 557,
            "column": 0
          },
          "end": {
            "line": 557,
            "column": 85
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "VariableDeclaration",
          "start": 17920,
          "end": 17998,
          "loc": {
            "start": {
              "line": 557,
              "column": 7
            },
            "end": {
              "line": 557,
              "column": 85
            }
          },
          "declarations": [
            {
              "type": "VariableDeclarator",
              "start": 17926,
              "end": 17997,
              "loc": {
                "start": {
                  "line": 557,
                  "column": 13
                },
                "end": {
                  "line": 557,
                  "column": 84
                }
              },
              "id": {
                "type": "Identifier",
                "start": 17926,
                "end": 17934,
                "loc": {
                  "start": {
                    "line": 557,
                    "column": 13
                  },
                  "end": {
                    "line": 557,
                    "column": 21
                  },
                  "identifierName": "notEmpty"
                },
                "name": "notEmpty",
                "leadingComments": null
              },
              "init": {
                "type": "CallExpression",
                "start": 17937,
                "end": 17997,
                "loc": {
                  "start": {
                    "line": 557,
                    "column": 24
                  },
                  "end": {
                    "line": 557,
                    "column": 84
                  }
                },
                "callee": {
                  "type": "Identifier",
                  "start": 17937,
                  "end": 17972,
                  "loc": {
                    "start": {
                      "line": 557,
                      "column": 24
                    },
                    "end": {
                      "line": 557,
                      "column": 59
                    },
                    "identifierName": "decoratedPropertyWithRequiredParams"
                  },
                  "name": "decoratedPropertyWithRequiredParams"
                },
                "arguments": [
                  {
                    "type": "MemberExpression",
                    "start": 17973,
                    "end": 17996,
                    "loc": {
                      "start": {
                        "line": 557,
                        "column": 60
                      },
                      "end": {
                        "line": 557,
                        "column": 83
                      }
                    },
                    "object": {
                      "type": "MemberExpression",
                      "start": 17973,
                      "end": 17987,
                      "loc": {
                        "start": {
                          "line": 557,
                          "column": 60
                        },
                        "end": {
                          "line": 557,
                          "column": 74
                        }
                      },
                      "object": {
                        "type": "Identifier",
                        "start": 17973,
                        "end": 17978,
                        "loc": {
                          "start": {
                            "line": 557,
                            "column": 60
                          },
                          "end": {
                            "line": 557,
                            "column": 65
                          },
                          "identifierName": "Ember"
                        },
                        "name": "Ember"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 17979,
                        "end": 17987,
                        "loc": {
                          "start": {
                            "line": 557,
                            "column": 66
                          },
                          "end": {
                            "line": 557,
                            "column": 74
                          },
                          "identifierName": "computed"
                        },
                        "name": "computed"
                      },
                      "computed": false
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 17988,
                      "end": 17996,
                      "loc": {
                        "start": {
                          "line": 557,
                          "column": 75
                        },
                        "end": {
                          "line": 557,
                          "column": 83
                        },
                        "identifierName": "notEmpty"
                      },
                      "name": "notEmpty"
                    },
                    "computed": false
                  }
                ]
              },
              "leadingComments": null
            }
          ],
          "kind": "const",
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.notEmpty](http://emberjs.com/api/classes/Ember.computed.html#method_notEmpty)\n *\n * A computed property that returns `true` if the value of the dependent\n * property is NOT null, an empty string, empty array, or empty function.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { notEmpty } from 'ember-decorators/object/computed';\n *\n * export default class GroceryBagComponent extends Component {\n *   groceryBag = A(['milk', 'eggs', 'apples']);\n *\n *   @notEmpty('groceryBag') hasGroceriesToPutAway; // true\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to check\n ",
              "start": 17200,
              "end": 17912,
              "loc": {
                "start": {
                  "line": 536,
                  "column": 0
                },
                "end": {
                  "line": 556,
                  "column": 3
                }
              }
            }
          ],
          "trailingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.oneWay](http://emberjs.com/api/classes/Ember.computed.html#method_oneWay)\n *\n * Where `computed.alias` aliases `get` and `set`, and allows for bidirectional\n * data flow, `computed.oneWay` only provides an aliased `get`. The `set` will\n * not mutate the upstream property, rather causes the current property to\n * become the value set. This causes the downstream property to permanently\n * diverge from the upstream property.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { oneWay } from 'ember-decorators/object/computed';\n *\n * export default class UserProfileComponent extends Component {\n *   firstName = 'Joe';\n *\n *   @oneWay('firstName') originalName; // will always be 'Joe'\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to alias\n ",
              "start": 18000,
              "end": 18851,
              "loc": {
                "start": {
                  "line": 559,
                  "column": 0
                },
                "end": {
                  "line": 581,
                  "column": 3
                }
              }
            }
          ]
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.notEmpty](http://emberjs.com/api/classes/Ember.computed.html#method_notEmpty)\n *\n * A computed property that returns `true` if the value of the dependent\n * property is NOT null, an empty string, empty array, or empty function.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { notEmpty } from 'ember-decorators/object/computed';\n *\n * export default class GroceryBagComponent extends Component {\n *   groceryBag = A(['milk', 'eggs', 'apples']);\n *\n *   @notEmpty('groceryBag') hasGroceriesToPutAway; // true\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to check\n ",
            "start": 17200,
            "end": 17912,
            "loc": {
              "start": {
                "line": 536,
                "column": 0
              },
              "end": {
                "line": 556,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.oneWay](http://emberjs.com/api/classes/Ember.computed.html#method_oneWay)\n *\n * Where `computed.alias` aliases `get` and `set`, and allows for bidirectional\n * data flow, `computed.oneWay` only provides an aliased `get`. The `set` will\n * not mutate the upstream property, rather causes the current property to\n * become the value set. This causes the downstream property to permanently\n * diverge from the upstream property.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { oneWay } from 'ember-decorators/object/computed';\n *\n * export default class UserProfileComponent extends Component {\n *   firstName = 'Joe';\n *\n *   @oneWay('firstName') originalName; // will always be 'Joe'\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to alias\n ",
            "start": 18000,
            "end": 18851,
            "loc": {
              "start": {
                "line": 559,
                "column": 0
              },
              "end": {
                "line": 581,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 18852,
        "end": 18933,
        "loc": {
          "start": {
            "line": 582,
            "column": 0
          },
          "end": {
            "line": 582,
            "column": 81
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "VariableDeclaration",
          "start": 18859,
          "end": 18933,
          "loc": {
            "start": {
              "line": 582,
              "column": 7
            },
            "end": {
              "line": 582,
              "column": 81
            }
          },
          "declarations": [
            {
              "type": "VariableDeclarator",
              "start": 18865,
              "end": 18932,
              "loc": {
                "start": {
                  "line": 582,
                  "column": 13
                },
                "end": {
                  "line": 582,
                  "column": 80
                }
              },
              "id": {
                "type": "Identifier",
                "start": 18865,
                "end": 18871,
                "loc": {
                  "start": {
                    "line": 582,
                    "column": 13
                  },
                  "end": {
                    "line": 582,
                    "column": 19
                  },
                  "identifierName": "oneWay"
                },
                "name": "oneWay",
                "leadingComments": null
              },
              "init": {
                "type": "CallExpression",
                "start": 18874,
                "end": 18932,
                "loc": {
                  "start": {
                    "line": 582,
                    "column": 22
                  },
                  "end": {
                    "line": 582,
                    "column": 80
                  }
                },
                "callee": {
                  "type": "Identifier",
                  "start": 18874,
                  "end": 18909,
                  "loc": {
                    "start": {
                      "line": 582,
                      "column": 22
                    },
                    "end": {
                      "line": 582,
                      "column": 57
                    },
                    "identifierName": "decoratedPropertyWithRequiredParams"
                  },
                  "name": "decoratedPropertyWithRequiredParams"
                },
                "arguments": [
                  {
                    "type": "MemberExpression",
                    "start": 18910,
                    "end": 18931,
                    "loc": {
                      "start": {
                        "line": 582,
                        "column": 58
                      },
                      "end": {
                        "line": 582,
                        "column": 79
                      }
                    },
                    "object": {
                      "type": "MemberExpression",
                      "start": 18910,
                      "end": 18924,
                      "loc": {
                        "start": {
                          "line": 582,
                          "column": 58
                        },
                        "end": {
                          "line": 582,
                          "column": 72
                        }
                      },
                      "object": {
                        "type": "Identifier",
                        "start": 18910,
                        "end": 18915,
                        "loc": {
                          "start": {
                            "line": 582,
                            "column": 58
                          },
                          "end": {
                            "line": 582,
                            "column": 63
                          },
                          "identifierName": "Ember"
                        },
                        "name": "Ember"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 18916,
                        "end": 18924,
                        "loc": {
                          "start": {
                            "line": 582,
                            "column": 64
                          },
                          "end": {
                            "line": 582,
                            "column": 72
                          },
                          "identifierName": "computed"
                        },
                        "name": "computed"
                      },
                      "computed": false
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 18925,
                      "end": 18931,
                      "loc": {
                        "start": {
                          "line": 582,
                          "column": 73
                        },
                        "end": {
                          "line": 582,
                          "column": 79
                        },
                        "identifierName": "oneWay"
                      },
                      "name": "oneWay"
                    },
                    "computed": false
                  }
                ]
              },
              "leadingComments": null
            }
          ],
          "kind": "const",
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.oneWay](http://emberjs.com/api/classes/Ember.computed.html#method_oneWay)\n *\n * Where `computed.alias` aliases `get` and `set`, and allows for bidirectional\n * data flow, `computed.oneWay` only provides an aliased `get`. The `set` will\n * not mutate the upstream property, rather causes the current property to\n * become the value set. This causes the downstream property to permanently\n * diverge from the upstream property.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { oneWay } from 'ember-decorators/object/computed';\n *\n * export default class UserProfileComponent extends Component {\n *   firstName = 'Joe';\n *\n *   @oneWay('firstName') originalName; // will always be 'Joe'\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to alias\n ",
              "start": 18000,
              "end": 18851,
              "loc": {
                "start": {
                  "line": 559,
                  "column": 0
                },
                "end": {
                  "line": 581,
                  "column": 3
                }
              }
            }
          ],
          "trailingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.or](http://emberjs.com/api/classes/Ember.computed.html#method_or)\n *\n * A computed property which performs a logical or on the original values for\n * the provided dependent properties.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { or } from 'ember-decorators/object/computed';\n *\n * export default class OutfitFeaturesComponent extends Component {\n *   hasJacket = true;\n *   hasUmbrella = false;\n *\n *   @or('hasJacket', 'hasUmbrella') isReadyForRain; // true\n * }\n * ```\n *\n * @function\n * @param {...String} dependentKey - Key for the properties to `or`\n ",
              "start": 18935,
              "end": 19570,
              "loc": {
                "start": {
                  "line": 584,
                  "column": 0
                },
                "end": {
                  "line": 604,
                  "column": 3
                }
              }
            }
          ]
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.oneWay](http://emberjs.com/api/classes/Ember.computed.html#method_oneWay)\n *\n * Where `computed.alias` aliases `get` and `set`, and allows for bidirectional\n * data flow, `computed.oneWay` only provides an aliased `get`. The `set` will\n * not mutate the upstream property, rather causes the current property to\n * become the value set. This causes the downstream property to permanently\n * diverge from the upstream property.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { oneWay } from 'ember-decorators/object/computed';\n *\n * export default class UserProfileComponent extends Component {\n *   firstName = 'Joe';\n *\n *   @oneWay('firstName') originalName; // will always be 'Joe'\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to alias\n ",
            "start": 18000,
            "end": 18851,
            "loc": {
              "start": {
                "line": 559,
                "column": 0
              },
              "end": {
                "line": 581,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.or](http://emberjs.com/api/classes/Ember.computed.html#method_or)\n *\n * A computed property which performs a logical or on the original values for\n * the provided dependent properties.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { or } from 'ember-decorators/object/computed';\n *\n * export default class OutfitFeaturesComponent extends Component {\n *   hasJacket = true;\n *   hasUmbrella = false;\n *\n *   @or('hasJacket', 'hasUmbrella') isReadyForRain; // true\n * }\n * ```\n *\n * @function\n * @param {...String} dependentKey - Key for the properties to `or`\n ",
            "start": 18935,
            "end": 19570,
            "loc": {
              "start": {
                "line": 584,
                "column": 0
              },
              "end": {
                "line": 604,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 19571,
        "end": 19644,
        "loc": {
          "start": {
            "line": 605,
            "column": 0
          },
          "end": {
            "line": 605,
            "column": 73
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "VariableDeclaration",
          "start": 19578,
          "end": 19644,
          "loc": {
            "start": {
              "line": 605,
              "column": 7
            },
            "end": {
              "line": 605,
              "column": 73
            }
          },
          "declarations": [
            {
              "type": "VariableDeclarator",
              "start": 19584,
              "end": 19643,
              "loc": {
                "start": {
                  "line": 605,
                  "column": 13
                },
                "end": {
                  "line": 605,
                  "column": 72
                }
              },
              "id": {
                "type": "Identifier",
                "start": 19584,
                "end": 19586,
                "loc": {
                  "start": {
                    "line": 605,
                    "column": 13
                  },
                  "end": {
                    "line": 605,
                    "column": 15
                  },
                  "identifierName": "or"
                },
                "name": "or",
                "leadingComments": null
              },
              "init": {
                "type": "CallExpression",
                "start": 19589,
                "end": 19643,
                "loc": {
                  "start": {
                    "line": 605,
                    "column": 18
                  },
                  "end": {
                    "line": 605,
                    "column": 72
                  }
                },
                "callee": {
                  "type": "Identifier",
                  "start": 19589,
                  "end": 19624,
                  "loc": {
                    "start": {
                      "line": 605,
                      "column": 18
                    },
                    "end": {
                      "line": 605,
                      "column": 53
                    },
                    "identifierName": "decoratedPropertyWithRequiredParams"
                  },
                  "name": "decoratedPropertyWithRequiredParams"
                },
                "arguments": [
                  {
                    "type": "MemberExpression",
                    "start": 19625,
                    "end": 19642,
                    "loc": {
                      "start": {
                        "line": 605,
                        "column": 54
                      },
                      "end": {
                        "line": 605,
                        "column": 71
                      }
                    },
                    "object": {
                      "type": "MemberExpression",
                      "start": 19625,
                      "end": 19639,
                      "loc": {
                        "start": {
                          "line": 605,
                          "column": 54
                        },
                        "end": {
                          "line": 605,
                          "column": 68
                        }
                      },
                      "object": {
                        "type": "Identifier",
                        "start": 19625,
                        "end": 19630,
                        "loc": {
                          "start": {
                            "line": 605,
                            "column": 54
                          },
                          "end": {
                            "line": 605,
                            "column": 59
                          },
                          "identifierName": "Ember"
                        },
                        "name": "Ember"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 19631,
                        "end": 19639,
                        "loc": {
                          "start": {
                            "line": 605,
                            "column": 60
                          },
                          "end": {
                            "line": 605,
                            "column": 68
                          },
                          "identifierName": "computed"
                        },
                        "name": "computed"
                      },
                      "computed": false
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 19640,
                      "end": 19642,
                      "loc": {
                        "start": {
                          "line": 605,
                          "column": 69
                        },
                        "end": {
                          "line": 605,
                          "column": 71
                        },
                        "identifierName": "or"
                      },
                      "name": "or"
                    },
                    "computed": false
                  }
                ]
              },
              "leadingComments": null
            }
          ],
          "kind": "const",
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.or](http://emberjs.com/api/classes/Ember.computed.html#method_or)\n *\n * A computed property which performs a logical or on the original values for\n * the provided dependent properties.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { or } from 'ember-decorators/object/computed';\n *\n * export default class OutfitFeaturesComponent extends Component {\n *   hasJacket = true;\n *   hasUmbrella = false;\n *\n *   @or('hasJacket', 'hasUmbrella') isReadyForRain; // true\n * }\n * ```\n *\n * @function\n * @param {...String} dependentKey - Key for the properties to `or`\n ",
              "start": 18935,
              "end": 19570,
              "loc": {
                "start": {
                  "line": 584,
                  "column": 0
                },
                "end": {
                  "line": 604,
                  "column": 3
                }
              }
            }
          ],
          "trailingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.reads](http://emberjs.com/api/classes/Ember.computed.html#method_reads)\n *\n * This is a more semantically meaningful alias of `computed.oneWay`, whose\n * name is somewhat ambiguous as to which direction the data flows.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { reads } from 'ember-decorators/object/computed';\n *\n * export default class UserProfileComponent extends Component {\n *   first = 'Tomster';\n *\n *   @reads('first') firstName;\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to read\n ",
              "start": 19646,
              "end": 20256,
              "loc": {
                "start": {
                  "line": 607,
                  "column": 0
                },
                "end": {
                  "line": 626,
                  "column": 3
                }
              }
            }
          ]
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.or](http://emberjs.com/api/classes/Ember.computed.html#method_or)\n *\n * A computed property which performs a logical or on the original values for\n * the provided dependent properties.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { or } from 'ember-decorators/object/computed';\n *\n * export default class OutfitFeaturesComponent extends Component {\n *   hasJacket = true;\n *   hasUmbrella = false;\n *\n *   @or('hasJacket', 'hasUmbrella') isReadyForRain; // true\n * }\n * ```\n *\n * @function\n * @param {...String} dependentKey - Key for the properties to `or`\n ",
            "start": 18935,
            "end": 19570,
            "loc": {
              "start": {
                "line": 584,
                "column": 0
              },
              "end": {
                "line": 604,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.reads](http://emberjs.com/api/classes/Ember.computed.html#method_reads)\n *\n * This is a more semantically meaningful alias of `computed.oneWay`, whose\n * name is somewhat ambiguous as to which direction the data flows.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { reads } from 'ember-decorators/object/computed';\n *\n * export default class UserProfileComponent extends Component {\n *   first = 'Tomster';\n *\n *   @reads('first') firstName;\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to read\n ",
            "start": 19646,
            "end": 20256,
            "loc": {
              "start": {
                "line": 607,
                "column": 0
              },
              "end": {
                "line": 626,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 20257,
        "end": 20336,
        "loc": {
          "start": {
            "line": 627,
            "column": 0
          },
          "end": {
            "line": 627,
            "column": 79
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "VariableDeclaration",
          "start": 20264,
          "end": 20336,
          "loc": {
            "start": {
              "line": 627,
              "column": 7
            },
            "end": {
              "line": 627,
              "column": 79
            }
          },
          "declarations": [
            {
              "type": "VariableDeclarator",
              "start": 20270,
              "end": 20335,
              "loc": {
                "start": {
                  "line": 627,
                  "column": 13
                },
                "end": {
                  "line": 627,
                  "column": 78
                }
              },
              "id": {
                "type": "Identifier",
                "start": 20270,
                "end": 20275,
                "loc": {
                  "start": {
                    "line": 627,
                    "column": 13
                  },
                  "end": {
                    "line": 627,
                    "column": 18
                  },
                  "identifierName": "reads"
                },
                "name": "reads",
                "leadingComments": null
              },
              "init": {
                "type": "CallExpression",
                "start": 20278,
                "end": 20335,
                "loc": {
                  "start": {
                    "line": 627,
                    "column": 21
                  },
                  "end": {
                    "line": 627,
                    "column": 78
                  }
                },
                "callee": {
                  "type": "Identifier",
                  "start": 20278,
                  "end": 20313,
                  "loc": {
                    "start": {
                      "line": 627,
                      "column": 21
                    },
                    "end": {
                      "line": 627,
                      "column": 56
                    },
                    "identifierName": "decoratedPropertyWithRequiredParams"
                  },
                  "name": "decoratedPropertyWithRequiredParams"
                },
                "arguments": [
                  {
                    "type": "MemberExpression",
                    "start": 20314,
                    "end": 20334,
                    "loc": {
                      "start": {
                        "line": 627,
                        "column": 57
                      },
                      "end": {
                        "line": 627,
                        "column": 77
                      }
                    },
                    "object": {
                      "type": "MemberExpression",
                      "start": 20314,
                      "end": 20328,
                      "loc": {
                        "start": {
                          "line": 627,
                          "column": 57
                        },
                        "end": {
                          "line": 627,
                          "column": 71
                        }
                      },
                      "object": {
                        "type": "Identifier",
                        "start": 20314,
                        "end": 20319,
                        "loc": {
                          "start": {
                            "line": 627,
                            "column": 57
                          },
                          "end": {
                            "line": 627,
                            "column": 62
                          },
                          "identifierName": "Ember"
                        },
                        "name": "Ember"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 20320,
                        "end": 20328,
                        "loc": {
                          "start": {
                            "line": 627,
                            "column": 63
                          },
                          "end": {
                            "line": 627,
                            "column": 71
                          },
                          "identifierName": "computed"
                        },
                        "name": "computed"
                      },
                      "computed": false
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 20329,
                      "end": 20334,
                      "loc": {
                        "start": {
                          "line": 627,
                          "column": 72
                        },
                        "end": {
                          "line": 627,
                          "column": 77
                        },
                        "identifierName": "reads"
                      },
                      "name": "reads"
                    },
                    "computed": false
                  }
                ]
              },
              "leadingComments": null
            }
          ],
          "kind": "const",
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.reads](http://emberjs.com/api/classes/Ember.computed.html#method_reads)\n *\n * This is a more semantically meaningful alias of `computed.oneWay`, whose\n * name is somewhat ambiguous as to which direction the data flows.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { reads } from 'ember-decorators/object/computed';\n *\n * export default class UserProfileComponent extends Component {\n *   first = 'Tomster';\n *\n *   @reads('first') firstName;\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to read\n ",
              "start": 19646,
              "end": 20256,
              "loc": {
                "start": {
                  "line": 607,
                  "column": 0
                },
                "end": {
                  "line": 626,
                  "column": 3
                }
              }
            }
          ],
          "trailingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.setDiff](http://emberjs.com/api/classes/Ember.computed.html#method_setDiff)\n *\n * A computed property which returns a new array with all the properties from\n * the first dependent array that are not in the second dependent array.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { setDiff } from 'ember-decorators/object/computed';\n *\n * export default class FavoriteThingsComponent extends Component {\n *   likes = A([ 'tacos', 'puppies', 'pizza' ]);\n *   foods = A(['tacos', 'pizza']);\n *\n *   @setDiff('likes', 'foods') favoriteThingsThatArentFood; // ['puppies']\n * }\n * ```\n *\n * @function\n * @param {String} setAProperty - Keys for the first set\n * @param {String} setBProperty - Keys for the first set\n ",
              "start": 20338,
              "end": 21157,
              "loc": {
                "start": {
                  "line": 629,
                  "column": 0
                },
                "end": {
                  "line": 651,
                  "column": 3
                }
              }
            }
          ]
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.reads](http://emberjs.com/api/classes/Ember.computed.html#method_reads)\n *\n * This is a more semantically meaningful alias of `computed.oneWay`, whose\n * name is somewhat ambiguous as to which direction the data flows.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { reads } from 'ember-decorators/object/computed';\n *\n * export default class UserProfileComponent extends Component {\n *   first = 'Tomster';\n *\n *   @reads('first') firstName;\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to read\n ",
            "start": 19646,
            "end": 20256,
            "loc": {
              "start": {
                "line": 607,
                "column": 0
              },
              "end": {
                "line": 626,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.setDiff](http://emberjs.com/api/classes/Ember.computed.html#method_setDiff)\n *\n * A computed property which returns a new array with all the properties from\n * the first dependent array that are not in the second dependent array.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { setDiff } from 'ember-decorators/object/computed';\n *\n * export default class FavoriteThingsComponent extends Component {\n *   likes = A([ 'tacos', 'puppies', 'pizza' ]);\n *   foods = A(['tacos', 'pizza']);\n *\n *   @setDiff('likes', 'foods') favoriteThingsThatArentFood; // ['puppies']\n * }\n * ```\n *\n * @function\n * @param {String} setAProperty - Keys for the first set\n * @param {String} setBProperty - Keys for the first set\n ",
            "start": 20338,
            "end": 21157,
            "loc": {
              "start": {
                "line": 629,
                "column": 0
              },
              "end": {
                "line": 651,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 21158,
        "end": 21241,
        "loc": {
          "start": {
            "line": 652,
            "column": 0
          },
          "end": {
            "line": 652,
            "column": 83
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "VariableDeclaration",
          "start": 21165,
          "end": 21241,
          "loc": {
            "start": {
              "line": 652,
              "column": 7
            },
            "end": {
              "line": 652,
              "column": 83
            }
          },
          "declarations": [
            {
              "type": "VariableDeclarator",
              "start": 21171,
              "end": 21240,
              "loc": {
                "start": {
                  "line": 652,
                  "column": 13
                },
                "end": {
                  "line": 652,
                  "column": 82
                }
              },
              "id": {
                "type": "Identifier",
                "start": 21171,
                "end": 21178,
                "loc": {
                  "start": {
                    "line": 652,
                    "column": 13
                  },
                  "end": {
                    "line": 652,
                    "column": 20
                  },
                  "identifierName": "setDiff"
                },
                "name": "setDiff",
                "leadingComments": null
              },
              "init": {
                "type": "CallExpression",
                "start": 21181,
                "end": 21240,
                "loc": {
                  "start": {
                    "line": 652,
                    "column": 23
                  },
                  "end": {
                    "line": 652,
                    "column": 82
                  }
                },
                "callee": {
                  "type": "Identifier",
                  "start": 21181,
                  "end": 21216,
                  "loc": {
                    "start": {
                      "line": 652,
                      "column": 23
                    },
                    "end": {
                      "line": 652,
                      "column": 58
                    },
                    "identifierName": "decoratedPropertyWithRequiredParams"
                  },
                  "name": "decoratedPropertyWithRequiredParams"
                },
                "arguments": [
                  {
                    "type": "MemberExpression",
                    "start": 21217,
                    "end": 21239,
                    "loc": {
                      "start": {
                        "line": 652,
                        "column": 59
                      },
                      "end": {
                        "line": 652,
                        "column": 81
                      }
                    },
                    "object": {
                      "type": "MemberExpression",
                      "start": 21217,
                      "end": 21231,
                      "loc": {
                        "start": {
                          "line": 652,
                          "column": 59
                        },
                        "end": {
                          "line": 652,
                          "column": 73
                        }
                      },
                      "object": {
                        "type": "Identifier",
                        "start": 21217,
                        "end": 21222,
                        "loc": {
                          "start": {
                            "line": 652,
                            "column": 59
                          },
                          "end": {
                            "line": 652,
                            "column": 64
                          },
                          "identifierName": "Ember"
                        },
                        "name": "Ember"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 21223,
                        "end": 21231,
                        "loc": {
                          "start": {
                            "line": 652,
                            "column": 65
                          },
                          "end": {
                            "line": 652,
                            "column": 73
                          },
                          "identifierName": "computed"
                        },
                        "name": "computed"
                      },
                      "computed": false
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 21232,
                      "end": 21239,
                      "loc": {
                        "start": {
                          "line": 652,
                          "column": 74
                        },
                        "end": {
                          "line": 652,
                          "column": 81
                        },
                        "identifierName": "setDiff"
                      },
                      "name": "setDiff"
                    },
                    "computed": false
                  }
                ]
              },
              "leadingComments": null
            }
          ],
          "kind": "const",
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.setDiff](http://emberjs.com/api/classes/Ember.computed.html#method_setDiff)\n *\n * A computed property which returns a new array with all the properties from\n * the first dependent array that are not in the second dependent array.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { setDiff } from 'ember-decorators/object/computed';\n *\n * export default class FavoriteThingsComponent extends Component {\n *   likes = A([ 'tacos', 'puppies', 'pizza' ]);\n *   foods = A(['tacos', 'pizza']);\n *\n *   @setDiff('likes', 'foods') favoriteThingsThatArentFood; // ['puppies']\n * }\n * ```\n *\n * @function\n * @param {String} setAProperty - Keys for the first set\n * @param {String} setBProperty - Keys for the first set\n ",
              "start": 20338,
              "end": 21157,
              "loc": {
                "start": {
                  "line": 629,
                  "column": 0
                },
                "end": {
                  "line": 651,
                  "column": 3
                }
              }
            }
          ],
          "trailingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.sort](http://emberjs.com/api/classes/Ember.computed.html#method_sort)\n *\n * A computed property which returns a new array with all the properties from\n * the first dependent array sorted based on a property or sort function.\n *\n *\n * The callback method you provide should have the following signature:\n *\n * ```javascript\n * function(itemA, itemB);\n * ```\n * - `itemA` the first item to compare.\n * - `itemB` the second item to compare.\n *\n * This function should return negative number (e.g. `-1`) when `itemA` should\n * come before `itemB`. It should return positive number (e.g. `1`) when\n * `itemA` should come after `itemB`. If the `itemA` and `itemB` are equal this\n * function should return `0`.\n *\n * Therefore, if this function is comparing some numeric values, simple\n * `itemA - itemB` or `itemA.get( 'foo' ) - itemB.get( 'foo' )` can be used\n * instead of series of `if`.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { sort } from 'ember-decorators/object/computed';\n *\n * export default class SortNamesComponent extends Component {\n *   names = A([{name:'Link'},{name:'Zelda'},{name:'Ganon'},{name:'Navi'}]);\n *\n *   @sort('names')\n *   sortedNames(a, b){\n *     if (a.name > b.name) {\n *       return 1;\n *     } else if (a.name < b.name) {\n *       return -1;\n *     }\n *\n *     return 0;\n *   } // [{name:'Ganon'},{name:'Link'},{name:'Navi'},{name:'Zelda'}]\n *\n *   // alternative syntax:\n *\n *   @sort('names', function(a, b){\n *     if (a.name > b.name) {\n *       return 1;\n *     } else if (a.name < b.name) {\n *       return -1;\n *     }\n *\n *     return 0;\n *   }) sortedNames; // [{name:'Ganon'},{name:'Link'},{name:'Navi'},{name:'Zelda'}]\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - The key for the array that should be sorted\n * @param {Array<String>|Function(Any, Any): Number} sortDefinition - Sorting function or sort descriptor\n ",
              "start": 21243,
              "end": 23233,
              "loc": {
                "start": {
                  "line": 654,
                  "column": 0
                },
                "end": {
                  "line": 714,
                  "column": 3
                }
              }
            }
          ]
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.setDiff](http://emberjs.com/api/classes/Ember.computed.html#method_setDiff)\n *\n * A computed property which returns a new array with all the properties from\n * the first dependent array that are not in the second dependent array.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { setDiff } from 'ember-decorators/object/computed';\n *\n * export default class FavoriteThingsComponent extends Component {\n *   likes = A([ 'tacos', 'puppies', 'pizza' ]);\n *   foods = A(['tacos', 'pizza']);\n *\n *   @setDiff('likes', 'foods') favoriteThingsThatArentFood; // ['puppies']\n * }\n * ```\n *\n * @function\n * @param {String} setAProperty - Keys for the first set\n * @param {String} setBProperty - Keys for the first set\n ",
            "start": 20338,
            "end": 21157,
            "loc": {
              "start": {
                "line": 629,
                "column": 0
              },
              "end": {
                "line": 651,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.sort](http://emberjs.com/api/classes/Ember.computed.html#method_sort)\n *\n * A computed property which returns a new array with all the properties from\n * the first dependent array sorted based on a property or sort function.\n *\n *\n * The callback method you provide should have the following signature:\n *\n * ```javascript\n * function(itemA, itemB);\n * ```\n * - `itemA` the first item to compare.\n * - `itemB` the second item to compare.\n *\n * This function should return negative number (e.g. `-1`) when `itemA` should\n * come before `itemB`. It should return positive number (e.g. `1`) when\n * `itemA` should come after `itemB`. If the `itemA` and `itemB` are equal this\n * function should return `0`.\n *\n * Therefore, if this function is comparing some numeric values, simple\n * `itemA - itemB` or `itemA.get( 'foo' ) - itemB.get( 'foo' )` can be used\n * instead of series of `if`.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { sort } from 'ember-decorators/object/computed';\n *\n * export default class SortNamesComponent extends Component {\n *   names = A([{name:'Link'},{name:'Zelda'},{name:'Ganon'},{name:'Navi'}]);\n *\n *   @sort('names')\n *   sortedNames(a, b){\n *     if (a.name > b.name) {\n *       return 1;\n *     } else if (a.name < b.name) {\n *       return -1;\n *     }\n *\n *     return 0;\n *   } // [{name:'Ganon'},{name:'Link'},{name:'Navi'},{name:'Zelda'}]\n *\n *   // alternative syntax:\n *\n *   @sort('names', function(a, b){\n *     if (a.name > b.name) {\n *       return 1;\n *     } else if (a.name < b.name) {\n *       return -1;\n *     }\n *\n *     return 0;\n *   }) sortedNames; // [{name:'Ganon'},{name:'Link'},{name:'Navi'},{name:'Zelda'}]\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - The key for the array that should be sorted\n * @param {Array<String>|Function(Any, Any): Number} sortDefinition - Sorting function or sort descriptor\n ",
            "start": 21243,
            "end": 23233,
            "loc": {
              "start": {
                "line": 654,
                "column": 0
              },
              "end": {
                "line": 714,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 23234,
        "end": 23321,
        "loc": {
          "start": {
            "line": 715,
            "column": 0
          },
          "end": {
            "line": 715,
            "column": 87
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "VariableDeclaration",
          "start": 23241,
          "end": 23321,
          "loc": {
            "start": {
              "line": 715,
              "column": 7
            },
            "end": {
              "line": 715,
              "column": 87
            }
          },
          "declarations": [
            {
              "type": "VariableDeclarator",
              "start": 23247,
              "end": 23320,
              "loc": {
                "start": {
                  "line": 715,
                  "column": 13
                },
                "end": {
                  "line": 715,
                  "column": 86
                }
              },
              "id": {
                "type": "Identifier",
                "start": 23247,
                "end": 23251,
                "loc": {
                  "start": {
                    "line": 715,
                    "column": 13
                  },
                  "end": {
                    "line": 715,
                    "column": 17
                  },
                  "identifierName": "sort"
                },
                "name": "sort",
                "leadingComments": null
              },
              "init": {
                "type": "CallExpression",
                "start": 23254,
                "end": 23320,
                "loc": {
                  "start": {
                    "line": 715,
                    "column": 20
                  },
                  "end": {
                    "line": 715,
                    "column": 86
                  }
                },
                "callee": {
                  "type": "Identifier",
                  "start": 23254,
                  "end": 23299,
                  "loc": {
                    "start": {
                      "line": 715,
                      "column": 20
                    },
                    "end": {
                      "line": 715,
                      "column": 65
                    },
                    "identifierName": "decoratedPropertyWithEitherCallbackOrProperty"
                  },
                  "name": "decoratedPropertyWithEitherCallbackOrProperty"
                },
                "arguments": [
                  {
                    "type": "MemberExpression",
                    "start": 23300,
                    "end": 23319,
                    "loc": {
                      "start": {
                        "line": 715,
                        "column": 66
                      },
                      "end": {
                        "line": 715,
                        "column": 85
                      }
                    },
                    "object": {
                      "type": "MemberExpression",
                      "start": 23300,
                      "end": 23314,
                      "loc": {
                        "start": {
                          "line": 715,
                          "column": 66
                        },
                        "end": {
                          "line": 715,
                          "column": 80
                        }
                      },
                      "object": {
                        "type": "Identifier",
                        "start": 23300,
                        "end": 23305,
                        "loc": {
                          "start": {
                            "line": 715,
                            "column": 66
                          },
                          "end": {
                            "line": 715,
                            "column": 71
                          },
                          "identifierName": "Ember"
                        },
                        "name": "Ember"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 23306,
                        "end": 23314,
                        "loc": {
                          "start": {
                            "line": 715,
                            "column": 72
                          },
                          "end": {
                            "line": 715,
                            "column": 80
                          },
                          "identifierName": "computed"
                        },
                        "name": "computed"
                      },
                      "computed": false
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 23315,
                      "end": 23319,
                      "loc": {
                        "start": {
                          "line": 715,
                          "column": 81
                        },
                        "end": {
                          "line": 715,
                          "column": 85
                        },
                        "identifierName": "sort"
                      },
                      "name": "sort"
                    },
                    "computed": false
                  }
                ]
              },
              "leadingComments": null
            }
          ],
          "kind": "const",
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.sort](http://emberjs.com/api/classes/Ember.computed.html#method_sort)\n *\n * A computed property which returns a new array with all the properties from\n * the first dependent array sorted based on a property or sort function.\n *\n *\n * The callback method you provide should have the following signature:\n *\n * ```javascript\n * function(itemA, itemB);\n * ```\n * - `itemA` the first item to compare.\n * - `itemB` the second item to compare.\n *\n * This function should return negative number (e.g. `-1`) when `itemA` should\n * come before `itemB`. It should return positive number (e.g. `1`) when\n * `itemA` should come after `itemB`. If the `itemA` and `itemB` are equal this\n * function should return `0`.\n *\n * Therefore, if this function is comparing some numeric values, simple\n * `itemA - itemB` or `itemA.get( 'foo' ) - itemB.get( 'foo' )` can be used\n * instead of series of `if`.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { sort } from 'ember-decorators/object/computed';\n *\n * export default class SortNamesComponent extends Component {\n *   names = A([{name:'Link'},{name:'Zelda'},{name:'Ganon'},{name:'Navi'}]);\n *\n *   @sort('names')\n *   sortedNames(a, b){\n *     if (a.name > b.name) {\n *       return 1;\n *     } else if (a.name < b.name) {\n *       return -1;\n *     }\n *\n *     return 0;\n *   } // [{name:'Ganon'},{name:'Link'},{name:'Navi'},{name:'Zelda'}]\n *\n *   // alternative syntax:\n *\n *   @sort('names', function(a, b){\n *     if (a.name > b.name) {\n *       return 1;\n *     } else if (a.name < b.name) {\n *       return -1;\n *     }\n *\n *     return 0;\n *   }) sortedNames; // [{name:'Ganon'},{name:'Link'},{name:'Navi'},{name:'Zelda'}]\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - The key for the array that should be sorted\n * @param {Array<String>|Function(Any, Any): Number} sortDefinition - Sorting function or sort descriptor\n ",
              "start": 21243,
              "end": 23233,
              "loc": {
                "start": {
                  "line": 654,
                  "column": 0
                },
                "end": {
                  "line": 714,
                  "column": 3
                }
              }
            }
          ],
          "trailingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.sum](http://emberjs.com/api/classes/Ember.computed.html#method_sum)\n *\n * A computed property that returns the sum of the value in the dependent\n * array.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { sum } from 'ember-decorators/object/computed';\n *\n * export default class SumValuesComponent extends Component {\n *   values = A([1, 2, 3]);\n *\n *   @sum('values') total; // 6\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key of the array to sum up\n ",
              "start": 23323,
              "end": 23904,
              "loc": {
                "start": {
                  "line": 717,
                  "column": 0
                },
                "end": {
                  "line": 737,
                  "column": 3
                }
              }
            }
          ]
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.sort](http://emberjs.com/api/classes/Ember.computed.html#method_sort)\n *\n * A computed property which returns a new array with all the properties from\n * the first dependent array sorted based on a property or sort function.\n *\n *\n * The callback method you provide should have the following signature:\n *\n * ```javascript\n * function(itemA, itemB);\n * ```\n * - `itemA` the first item to compare.\n * - `itemB` the second item to compare.\n *\n * This function should return negative number (e.g. `-1`) when `itemA` should\n * come before `itemB`. It should return positive number (e.g. `1`) when\n * `itemA` should come after `itemB`. If the `itemA` and `itemB` are equal this\n * function should return `0`.\n *\n * Therefore, if this function is comparing some numeric values, simple\n * `itemA - itemB` or `itemA.get( 'foo' ) - itemB.get( 'foo' )` can be used\n * instead of series of `if`.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { sort } from 'ember-decorators/object/computed';\n *\n * export default class SortNamesComponent extends Component {\n *   names = A([{name:'Link'},{name:'Zelda'},{name:'Ganon'},{name:'Navi'}]);\n *\n *   @sort('names')\n *   sortedNames(a, b){\n *     if (a.name > b.name) {\n *       return 1;\n *     } else if (a.name < b.name) {\n *       return -1;\n *     }\n *\n *     return 0;\n *   } // [{name:'Ganon'},{name:'Link'},{name:'Navi'},{name:'Zelda'}]\n *\n *   // alternative syntax:\n *\n *   @sort('names', function(a, b){\n *     if (a.name > b.name) {\n *       return 1;\n *     } else if (a.name < b.name) {\n *       return -1;\n *     }\n *\n *     return 0;\n *   }) sortedNames; // [{name:'Ganon'},{name:'Link'},{name:'Navi'},{name:'Zelda'}]\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - The key for the array that should be sorted\n * @param {Array<String>|Function(Any, Any): Number} sortDefinition - Sorting function or sort descriptor\n ",
            "start": 21243,
            "end": 23233,
            "loc": {
              "start": {
                "line": 654,
                "column": 0
              },
              "end": {
                "line": 714,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.sum](http://emberjs.com/api/classes/Ember.computed.html#method_sum)\n *\n * A computed property that returns the sum of the value in the dependent\n * array.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { sum } from 'ember-decorators/object/computed';\n *\n * export default class SumValuesComponent extends Component {\n *   values = A([1, 2, 3]);\n *\n *   @sum('values') total; // 6\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key of the array to sum up\n ",
            "start": 23323,
            "end": 23904,
            "loc": {
              "start": {
                "line": 717,
                "column": 0
              },
              "end": {
                "line": 737,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 23905,
        "end": 23980,
        "loc": {
          "start": {
            "line": 738,
            "column": 0
          },
          "end": {
            "line": 738,
            "column": 75
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "VariableDeclaration",
          "start": 23912,
          "end": 23980,
          "loc": {
            "start": {
              "line": 738,
              "column": 7
            },
            "end": {
              "line": 738,
              "column": 75
            }
          },
          "declarations": [
            {
              "type": "VariableDeclarator",
              "start": 23918,
              "end": 23979,
              "loc": {
                "start": {
                  "line": 738,
                  "column": 13
                },
                "end": {
                  "line": 738,
                  "column": 74
                }
              },
              "id": {
                "type": "Identifier",
                "start": 23918,
                "end": 23921,
                "loc": {
                  "start": {
                    "line": 738,
                    "column": 13
                  },
                  "end": {
                    "line": 738,
                    "column": 16
                  },
                  "identifierName": "sum"
                },
                "name": "sum",
                "leadingComments": null
              },
              "init": {
                "type": "CallExpression",
                "start": 23924,
                "end": 23979,
                "loc": {
                  "start": {
                    "line": 738,
                    "column": 19
                  },
                  "end": {
                    "line": 738,
                    "column": 74
                  }
                },
                "callee": {
                  "type": "Identifier",
                  "start": 23924,
                  "end": 23959,
                  "loc": {
                    "start": {
                      "line": 738,
                      "column": 19
                    },
                    "end": {
                      "line": 738,
                      "column": 54
                    },
                    "identifierName": "decoratedPropertyWithRequiredParams"
                  },
                  "name": "decoratedPropertyWithRequiredParams"
                },
                "arguments": [
                  {
                    "type": "MemberExpression",
                    "start": 23960,
                    "end": 23978,
                    "loc": {
                      "start": {
                        "line": 738,
                        "column": 55
                      },
                      "end": {
                        "line": 738,
                        "column": 73
                      }
                    },
                    "object": {
                      "type": "MemberExpression",
                      "start": 23960,
                      "end": 23974,
                      "loc": {
                        "start": {
                          "line": 738,
                          "column": 55
                        },
                        "end": {
                          "line": 738,
                          "column": 69
                        }
                      },
                      "object": {
                        "type": "Identifier",
                        "start": 23960,
                        "end": 23965,
                        "loc": {
                          "start": {
                            "line": 738,
                            "column": 55
                          },
                          "end": {
                            "line": 738,
                            "column": 60
                          },
                          "identifierName": "Ember"
                        },
                        "name": "Ember"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 23966,
                        "end": 23974,
                        "loc": {
                          "start": {
                            "line": 738,
                            "column": 61
                          },
                          "end": {
                            "line": 738,
                            "column": 69
                          },
                          "identifierName": "computed"
                        },
                        "name": "computed"
                      },
                      "computed": false
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 23975,
                      "end": 23978,
                      "loc": {
                        "start": {
                          "line": 738,
                          "column": 70
                        },
                        "end": {
                          "line": 738,
                          "column": 73
                        },
                        "identifierName": "sum"
                      },
                      "name": "sum"
                    },
                    "computed": false
                  }
                ]
              },
              "leadingComments": null
            }
          ],
          "kind": "const",
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.sum](http://emberjs.com/api/classes/Ember.computed.html#method_sum)\n *\n * A computed property that returns the sum of the value in the dependent\n * array.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { sum } from 'ember-decorators/object/computed';\n *\n * export default class SumValuesComponent extends Component {\n *   values = A([1, 2, 3]);\n *\n *   @sum('values') total; // 6\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key of the array to sum up\n ",
              "start": 23323,
              "end": 23904,
              "loc": {
                "start": {
                  "line": 717,
                  "column": 0
                },
                "end": {
                  "line": 737,
                  "column": 3
                }
              }
            }
          ],
          "trailingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.union](http://emberjs.com/api/classes/Ember.computed.html#method_union)\n *\n * Alias for [union](http://emberjs.com/api/classes/Ember.computed.html#method_uniq).\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { union } from 'ember-decorators/object/computed';\n *\n * export default class LikesAndFoodsComponent extends Component {\n *   likes = A([ 'tacos', 'puppies', 'pizza' ]);\n *   foods = A(['tacos', 'pizza', 'ramen']);\n *\n *   @union('likes', 'foods') favorites; // ['tacos', 'puppies', 'pizza', 'ramen']\n * }\n * ```\n *\n * @function\n * @param {...String} dependentKeys - Keys of the arrays to union\n ",
              "start": 23982,
              "end": 24697,
              "loc": {
                "start": {
                  "line": 740,
                  "column": 0
                },
                "end": {
                  "line": 760,
                  "column": 3
                }
              }
            }
          ]
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.sum](http://emberjs.com/api/classes/Ember.computed.html#method_sum)\n *\n * A computed property that returns the sum of the value in the dependent\n * array.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { sum } from 'ember-decorators/object/computed';\n *\n * export default class SumValuesComponent extends Component {\n *   values = A([1, 2, 3]);\n *\n *   @sum('values') total; // 6\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key of the array to sum up\n ",
            "start": 23323,
            "end": 23904,
            "loc": {
              "start": {
                "line": 717,
                "column": 0
              },
              "end": {
                "line": 737,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.union](http://emberjs.com/api/classes/Ember.computed.html#method_union)\n *\n * Alias for [union](http://emberjs.com/api/classes/Ember.computed.html#method_uniq).\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { union } from 'ember-decorators/object/computed';\n *\n * export default class LikesAndFoodsComponent extends Component {\n *   likes = A([ 'tacos', 'puppies', 'pizza' ]);\n *   foods = A(['tacos', 'pizza', 'ramen']);\n *\n *   @union('likes', 'foods') favorites; // ['tacos', 'puppies', 'pizza', 'ramen']\n * }\n * ```\n *\n * @function\n * @param {...String} dependentKeys - Keys of the arrays to union\n ",
            "start": 23982,
            "end": 24697,
            "loc": {
              "start": {
                "line": 740,
                "column": 0
              },
              "end": {
                "line": 760,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 24698,
        "end": 24777,
        "loc": {
          "start": {
            "line": 761,
            "column": 0
          },
          "end": {
            "line": 761,
            "column": 79
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "VariableDeclaration",
          "start": 24705,
          "end": 24777,
          "loc": {
            "start": {
              "line": 761,
              "column": 7
            },
            "end": {
              "line": 761,
              "column": 79
            }
          },
          "declarations": [
            {
              "type": "VariableDeclarator",
              "start": 24711,
              "end": 24776,
              "loc": {
                "start": {
                  "line": 761,
                  "column": 13
                },
                "end": {
                  "line": 761,
                  "column": 78
                }
              },
              "id": {
                "type": "Identifier",
                "start": 24711,
                "end": 24716,
                "loc": {
                  "start": {
                    "line": 761,
                    "column": 13
                  },
                  "end": {
                    "line": 761,
                    "column": 18
                  },
                  "identifierName": "union"
                },
                "name": "union",
                "leadingComments": null
              },
              "init": {
                "type": "CallExpression",
                "start": 24719,
                "end": 24776,
                "loc": {
                  "start": {
                    "line": 761,
                    "column": 21
                  },
                  "end": {
                    "line": 761,
                    "column": 78
                  }
                },
                "callee": {
                  "type": "Identifier",
                  "start": 24719,
                  "end": 24754,
                  "loc": {
                    "start": {
                      "line": 761,
                      "column": 21
                    },
                    "end": {
                      "line": 761,
                      "column": 56
                    },
                    "identifierName": "decoratedPropertyWithRequiredParams"
                  },
                  "name": "decoratedPropertyWithRequiredParams"
                },
                "arguments": [
                  {
                    "type": "MemberExpression",
                    "start": 24755,
                    "end": 24775,
                    "loc": {
                      "start": {
                        "line": 761,
                        "column": 57
                      },
                      "end": {
                        "line": 761,
                        "column": 77
                      }
                    },
                    "object": {
                      "type": "MemberExpression",
                      "start": 24755,
                      "end": 24769,
                      "loc": {
                        "start": {
                          "line": 761,
                          "column": 57
                        },
                        "end": {
                          "line": 761,
                          "column": 71
                        }
                      },
                      "object": {
                        "type": "Identifier",
                        "start": 24755,
                        "end": 24760,
                        "loc": {
                          "start": {
                            "line": 761,
                            "column": 57
                          },
                          "end": {
                            "line": 761,
                            "column": 62
                          },
                          "identifierName": "Ember"
                        },
                        "name": "Ember"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 24761,
                        "end": 24769,
                        "loc": {
                          "start": {
                            "line": 761,
                            "column": 63
                          },
                          "end": {
                            "line": 761,
                            "column": 71
                          },
                          "identifierName": "computed"
                        },
                        "name": "computed"
                      },
                      "computed": false
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 24770,
                      "end": 24775,
                      "loc": {
                        "start": {
                          "line": 761,
                          "column": 72
                        },
                        "end": {
                          "line": 761,
                          "column": 77
                        },
                        "identifierName": "union"
                      },
                      "name": "union"
                    },
                    "computed": false
                  }
                ]
              },
              "leadingComments": null
            }
          ],
          "kind": "const",
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.union](http://emberjs.com/api/classes/Ember.computed.html#method_union)\n *\n * Alias for [union](http://emberjs.com/api/classes/Ember.computed.html#method_uniq).\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { union } from 'ember-decorators/object/computed';\n *\n * export default class LikesAndFoodsComponent extends Component {\n *   likes = A([ 'tacos', 'puppies', 'pizza' ]);\n *   foods = A(['tacos', 'pizza', 'ramen']);\n *\n *   @union('likes', 'foods') favorites; // ['tacos', 'puppies', 'pizza', 'ramen']\n * }\n * ```\n *\n * @function\n * @param {...String} dependentKeys - Keys of the arrays to union\n ",
              "start": 23982,
              "end": 24697,
              "loc": {
                "start": {
                  "line": 740,
                  "column": 0
                },
                "end": {
                  "line": 760,
                  "column": 3
                }
              }
            }
          ],
          "trailingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.uniq](http://emberjs.com/api/classes/Ember.computed.html#method_uniq)\n *\n * A computed property which returns a new array with all the unique elements from one or more dependent arrays.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { uniq } from 'ember-decorators/object/computed';\n *\n * export default class FavoriteThingsComponent extends Component {\n *   likes = A([ 'tacos', 'puppies', 'pizza' ]);\n *   foods = A(['tacos', 'pizza', 'ramen']);\n *\n *   @uniq('likes', 'foods') favorites; // ['tacos', 'puppies', 'pizza', 'ramen']\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key of the array to uniq\n ",
              "start": 24779,
              "end": 25511,
              "loc": {
                "start": {
                  "line": 763,
                  "column": 0
                },
                "end": {
                  "line": 783,
                  "column": 3
                }
              }
            }
          ]
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.union](http://emberjs.com/api/classes/Ember.computed.html#method_union)\n *\n * Alias for [union](http://emberjs.com/api/classes/Ember.computed.html#method_uniq).\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { union } from 'ember-decorators/object/computed';\n *\n * export default class LikesAndFoodsComponent extends Component {\n *   likes = A([ 'tacos', 'puppies', 'pizza' ]);\n *   foods = A(['tacos', 'pizza', 'ramen']);\n *\n *   @union('likes', 'foods') favorites; // ['tacos', 'puppies', 'pizza', 'ramen']\n * }\n * ```\n *\n * @function\n * @param {...String} dependentKeys - Keys of the arrays to union\n ",
            "start": 23982,
            "end": 24697,
            "loc": {
              "start": {
                "line": 740,
                "column": 0
              },
              "end": {
                "line": 760,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.uniq](http://emberjs.com/api/classes/Ember.computed.html#method_uniq)\n *\n * A computed property which returns a new array with all the unique elements from one or more dependent arrays.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { uniq } from 'ember-decorators/object/computed';\n *\n * export default class FavoriteThingsComponent extends Component {\n *   likes = A([ 'tacos', 'puppies', 'pizza' ]);\n *   foods = A(['tacos', 'pizza', 'ramen']);\n *\n *   @uniq('likes', 'foods') favorites; // ['tacos', 'puppies', 'pizza', 'ramen']\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key of the array to uniq\n ",
            "start": 24779,
            "end": 25511,
            "loc": {
              "start": {
                "line": 763,
                "column": 0
              },
              "end": {
                "line": 783,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 25512,
        "end": 25589,
        "loc": {
          "start": {
            "line": 784,
            "column": 0
          },
          "end": {
            "line": 784,
            "column": 77
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "VariableDeclaration",
          "start": 25519,
          "end": 25589,
          "loc": {
            "start": {
              "line": 784,
              "column": 7
            },
            "end": {
              "line": 784,
              "column": 77
            }
          },
          "declarations": [
            {
              "type": "VariableDeclarator",
              "start": 25525,
              "end": 25588,
              "loc": {
                "start": {
                  "line": 784,
                  "column": 13
                },
                "end": {
                  "line": 784,
                  "column": 76
                }
              },
              "id": {
                "type": "Identifier",
                "start": 25525,
                "end": 25529,
                "loc": {
                  "start": {
                    "line": 784,
                    "column": 13
                  },
                  "end": {
                    "line": 784,
                    "column": 17
                  },
                  "identifierName": "uniq"
                },
                "name": "uniq",
                "leadingComments": null
              },
              "init": {
                "type": "CallExpression",
                "start": 25532,
                "end": 25588,
                "loc": {
                  "start": {
                    "line": 784,
                    "column": 20
                  },
                  "end": {
                    "line": 784,
                    "column": 76
                  }
                },
                "callee": {
                  "type": "Identifier",
                  "start": 25532,
                  "end": 25567,
                  "loc": {
                    "start": {
                      "line": 784,
                      "column": 20
                    },
                    "end": {
                      "line": 784,
                      "column": 55
                    },
                    "identifierName": "decoratedPropertyWithRequiredParams"
                  },
                  "name": "decoratedPropertyWithRequiredParams"
                },
                "arguments": [
                  {
                    "type": "MemberExpression",
                    "start": 25568,
                    "end": 25587,
                    "loc": {
                      "start": {
                        "line": 784,
                        "column": 56
                      },
                      "end": {
                        "line": 784,
                        "column": 75
                      }
                    },
                    "object": {
                      "type": "MemberExpression",
                      "start": 25568,
                      "end": 25582,
                      "loc": {
                        "start": {
                          "line": 784,
                          "column": 56
                        },
                        "end": {
                          "line": 784,
                          "column": 70
                        }
                      },
                      "object": {
                        "type": "Identifier",
                        "start": 25568,
                        "end": 25573,
                        "loc": {
                          "start": {
                            "line": 784,
                            "column": 56
                          },
                          "end": {
                            "line": 784,
                            "column": 61
                          },
                          "identifierName": "Ember"
                        },
                        "name": "Ember"
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 25574,
                        "end": 25582,
                        "loc": {
                          "start": {
                            "line": 784,
                            "column": 62
                          },
                          "end": {
                            "line": 784,
                            "column": 70
                          },
                          "identifierName": "computed"
                        },
                        "name": "computed"
                      },
                      "computed": false
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 25583,
                      "end": 25587,
                      "loc": {
                        "start": {
                          "line": 784,
                          "column": 71
                        },
                        "end": {
                          "line": 784,
                          "column": 75
                        },
                        "identifierName": "uniq"
                      },
                      "name": "uniq"
                    },
                    "computed": false
                  }
                ]
              },
              "leadingComments": null
            }
          ],
          "kind": "const",
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.uniq](http://emberjs.com/api/classes/Ember.computed.html#method_uniq)\n *\n * A computed property which returns a new array with all the unique elements from one or more dependent arrays.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { uniq } from 'ember-decorators/object/computed';\n *\n * export default class FavoriteThingsComponent extends Component {\n *   likes = A([ 'tacos', 'puppies', 'pizza' ]);\n *   foods = A(['tacos', 'pizza', 'ramen']);\n *\n *   @uniq('likes', 'foods') favorites; // ['tacos', 'puppies', 'pizza', 'ramen']\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key of the array to uniq\n ",
              "start": 24779,
              "end": 25511,
              "loc": {
                "start": {
                  "line": 763,
                  "column": 0
                },
                "end": {
                  "line": 783,
                  "column": 3
                }
              }
            }
          ],
          "trailingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.uniqBy](http://emberjs.com/api/classes/Ember.computed.html#method_uniqBy)\n *\n * A computed property which returns a new array with all the unique elements\n * from an array, with uniqueness determined by a specific key.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { uniqBy } from 'ember-decorators/object/computed';\n *\n * export default class FruitBowlComponent extends Component {\n *   fruits = A([\n *     { name: 'banana', color: 'yellow' },\n *     { name: 'apple',  color: 'red' },\n *     { name: 'kiwi',   color: 'brown' },\n *     { name: 'cherry', color: 'red' },\n *     { name: 'lemon',  color: 'yellow' }\n *   ]);\n *\n *   @uniqBy('fruits', 'color') oneOfEachColor;\n *   // [\n *   //  { name: 'banana', color: 'yellow'},\n *   //  { name: 'apple',  color: 'red'},\n *   //  { name: 'kiwi',   color: 'brown'}\n *   // ]\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key of the array to uniq\n * @param {String} propertyKey - Key of the property on the objects of the array to determine uniqueness by\n ",
              "start": 25591,
              "end": 26722,
              "loc": {
                "start": {
                  "line": 786,
                  "column": 0
                },
                "end": {
                  "line": 818,
                  "column": 3
                }
              }
            }
          ]
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.uniq](http://emberjs.com/api/classes/Ember.computed.html#method_uniq)\n *\n * A computed property which returns a new array with all the unique elements from one or more dependent arrays.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { uniq } from 'ember-decorators/object/computed';\n *\n * export default class FavoriteThingsComponent extends Component {\n *   likes = A([ 'tacos', 'puppies', 'pizza' ]);\n *   foods = A(['tacos', 'pizza', 'ramen']);\n *\n *   @uniq('likes', 'foods') favorites; // ['tacos', 'puppies', 'pizza', 'ramen']\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key of the array to uniq\n ",
            "start": 24779,
            "end": 25511,
            "loc": {
              "start": {
                "line": 763,
                "column": 0
              },
              "end": {
                "line": 783,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.uniqBy](http://emberjs.com/api/classes/Ember.computed.html#method_uniqBy)\n *\n * A computed property which returns a new array with all the unique elements\n * from an array, with uniqueness determined by a specific key.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { uniqBy } from 'ember-decorators/object/computed';\n *\n * export default class FruitBowlComponent extends Component {\n *   fruits = A([\n *     { name: 'banana', color: 'yellow' },\n *     { name: 'apple',  color: 'red' },\n *     { name: 'kiwi',   color: 'brown' },\n *     { name: 'cherry', color: 'red' },\n *     { name: 'lemon',  color: 'yellow' }\n *   ]);\n *\n *   @uniqBy('fruits', 'color') oneOfEachColor;\n *   // [\n *   //  { name: 'banana', color: 'yellow'},\n *   //  { name: 'apple',  color: 'red'},\n *   //  { name: 'kiwi',   color: 'brown'}\n *   // ]\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key of the array to uniq\n * @param {String} propertyKey - Key of the property on the objects of the array to determine uniqueness by\n ",
            "start": 25591,
            "end": 26722,
            "loc": {
              "start": {
                "line": 786,
                "column": 0
              },
              "end": {
                "line": 818,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 26723,
        "end": 26925,
        "loc": {
          "start": {
            "line": 819,
            "column": 0
          },
          "end": {
            "line": 823,
            "column": 4
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "VariableDeclaration",
          "start": 26730,
          "end": 26925,
          "loc": {
            "start": {
              "line": 819,
              "column": 7
            },
            "end": {
              "line": 823,
              "column": 4
            }
          },
          "declarations": [
            {
              "type": "VariableDeclarator",
              "start": 26736,
              "end": 26924,
              "loc": {
                "start": {
                  "line": 819,
                  "column": 13
                },
                "end": {
                  "line": 823,
                  "column": 3
                }
              },
              "id": {
                "type": "Identifier",
                "start": 26736,
                "end": 26742,
                "loc": {
                  "start": {
                    "line": 819,
                    "column": 13
                  },
                  "end": {
                    "line": 819,
                    "column": 19
                  },
                  "identifierName": "uniqBy"
                },
                "name": "uniqBy",
                "leadingComments": null
              },
              "init": {
                "type": "ConditionalExpression",
                "start": 26745,
                "end": 26924,
                "loc": {
                  "start": {
                    "line": 819,
                    "column": 22
                  },
                  "end": {
                    "line": 823,
                    "column": 3
                  }
                },
                "test": {
                  "type": "Identifier",
                  "start": 26745,
                  "end": 26770,
                  "loc": {
                    "start": {
                      "line": 819,
                      "column": 22
                    },
                    "end": {
                      "line": 819,
                      "column": 47
                    },
                    "identifierName": "SUPPORTS_UNIQ_BY_COMPUTED"
                  },
                  "name": "SUPPORTS_UNIQ_BY_COMPUTED"
                },
                "consequent": {
                  "type": "CallExpression",
                  "start": 26775,
                  "end": 26833,
                  "loc": {
                    "start": {
                      "line": 820,
                      "column": 2
                    },
                    "end": {
                      "line": 820,
                      "column": 60
                    }
                  },
                  "callee": {
                    "type": "Identifier",
                    "start": 26775,
                    "end": 26810,
                    "loc": {
                      "start": {
                        "line": 820,
                        "column": 2
                      },
                      "end": {
                        "line": 820,
                        "column": 37
                      },
                      "identifierName": "decoratedPropertyWithRequiredParams"
                    },
                    "name": "decoratedPropertyWithRequiredParams"
                  },
                  "arguments": [
                    {
                      "type": "MemberExpression",
                      "start": 26811,
                      "end": 26832,
                      "loc": {
                        "start": {
                          "line": 820,
                          "column": 38
                        },
                        "end": {
                          "line": 820,
                          "column": 59
                        }
                      },
                      "object": {
                        "type": "MemberExpression",
                        "start": 26811,
                        "end": 26825,
                        "loc": {
                          "start": {
                            "line": 820,
                            "column": 38
                          },
                          "end": {
                            "line": 820,
                            "column": 52
                          }
                        },
                        "object": {
                          "type": "Identifier",
                          "start": 26811,
                          "end": 26816,
                          "loc": {
                            "start": {
                              "line": 820,
                              "column": 38
                            },
                            "end": {
                              "line": 820,
                              "column": 43
                            },
                            "identifierName": "Ember"
                          },
                          "name": "Ember"
                        },
                        "property": {
                          "type": "Identifier",
                          "start": 26817,
                          "end": 26825,
                          "loc": {
                            "start": {
                              "line": 820,
                              "column": 44
                            },
                            "end": {
                              "line": 820,
                              "column": 52
                            },
                            "identifierName": "computed"
                          },
                          "name": "computed"
                        },
                        "computed": false
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 26826,
                        "end": 26832,
                        "loc": {
                          "start": {
                            "line": 820,
                            "column": 53
                          },
                          "end": {
                            "line": 820,
                            "column": 59
                          },
                          "identifierName": "uniqBy"
                        },
                        "name": "uniqBy"
                      },
                      "computed": false
                    }
                  ]
                },
                "alternate": {
                  "type": "ArrowFunctionExpression",
                  "start": 26838,
                  "end": 26924,
                  "loc": {
                    "start": {
                      "line": 821,
                      "column": 2
                    },
                    "end": {
                      "line": 823,
                      "column": 3
                    }
                  },
                  "id": null,
                  "generator": false,
                  "expression": false,
                  "async": false,
                  "params": [],
                  "body": {
                    "type": "BlockStatement",
                    "start": 26844,
                    "end": 26924,
                    "loc": {
                      "start": {
                        "line": 821,
                        "column": 8
                      },
                      "end": {
                        "line": 823,
                        "column": 3
                      }
                    },
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "start": 26850,
                        "end": 26920,
                        "loc": {
                          "start": {
                            "line": 822,
                            "column": 4
                          },
                          "end": {
                            "line": 822,
                            "column": 74
                          }
                        },
                        "expression": {
                          "type": "CallExpression",
                          "start": 26850,
                          "end": 26919,
                          "loc": {
                            "start": {
                              "line": 822,
                              "column": 4
                            },
                            "end": {
                              "line": 822,
                              "column": 73
                            }
                          },
                          "callee": {
                            "type": "Identifier",
                            "start": 26850,
                            "end": 26856,
                            "loc": {
                              "start": {
                                "line": 822,
                                "column": 4
                              },
                              "end": {
                                "line": 822,
                                "column": 10
                              },
                              "identifierName": "assert"
                            },
                            "name": "assert"
                          },
                          "arguments": [
                            {
                              "type": "StringLiteral",
                              "start": 26857,
                              "end": 26911,
                              "loc": {
                                "start": {
                                  "line": 822,
                                  "column": 11
                                },
                                "end": {
                                  "line": 822,
                                  "column": 65
                                }
                              },
                              "extra": {
                                "rawValue": "uniqBy is only available from Ember.js v2.7 onwards.",
                                "raw": "'uniqBy is only available from Ember.js v2.7 onwards.'"
                              },
                              "value": "uniqBy is only available from Ember.js v2.7 onwards."
                            },
                            {
                              "type": "BooleanLiteral",
                              "start": 26913,
                              "end": 26918,
                              "loc": {
                                "start": {
                                  "line": 822,
                                  "column": 67
                                },
                                "end": {
                                  "line": 822,
                                  "column": 72
                                }
                              },
                              "value": false
                            }
                          ]
                        }
                      }
                    ],
                    "directives": []
                  }
                }
              },
              "leadingComments": null
            }
          ],
          "kind": "const",
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Decorator that wraps [Ember.computed.uniqBy](http://emberjs.com/api/classes/Ember.computed.html#method_uniqBy)\n *\n * A computed property which returns a new array with all the unique elements\n * from an array, with uniqueness determined by a specific key.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { uniqBy } from 'ember-decorators/object/computed';\n *\n * export default class FruitBowlComponent extends Component {\n *   fruits = A([\n *     { name: 'banana', color: 'yellow' },\n *     { name: 'apple',  color: 'red' },\n *     { name: 'kiwi',   color: 'brown' },\n *     { name: 'cherry', color: 'red' },\n *     { name: 'lemon',  color: 'yellow' }\n *   ]);\n *\n *   @uniqBy('fruits', 'color') oneOfEachColor;\n *   // [\n *   //  { name: 'banana', color: 'yellow'},\n *   //  { name: 'apple',  color: 'red'},\n *   //  { name: 'kiwi',   color: 'brown'}\n *   // ]\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key of the array to uniq\n * @param {String} propertyKey - Key of the property on the objects of the array to determine uniqueness by\n ",
              "start": 25591,
              "end": 26722,
              "loc": {
                "start": {
                  "line": 786,
                  "column": 0
                },
                "end": {
                  "line": 818,
                  "column": 3
                }
              }
            }
          ],
          "trailingComments": []
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Decorator that wraps [Ember.computed.uniqBy](http://emberjs.com/api/classes/Ember.computed.html#method_uniqBy)\n *\n * A computed property which returns a new array with all the unique elements\n * from an array, with uniqueness determined by a specific key.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { uniqBy } from 'ember-decorators/object/computed';\n *\n * export default class FruitBowlComponent extends Component {\n *   fruits = A([\n *     { name: 'banana', color: 'yellow' },\n *     { name: 'apple',  color: 'red' },\n *     { name: 'kiwi',   color: 'brown' },\n *     { name: 'cherry', color: 'red' },\n *     { name: 'lemon',  color: 'yellow' }\n *   ]);\n *\n *   @uniqBy('fruits', 'color') oneOfEachColor;\n *   // [\n *   //  { name: 'banana', color: 'yellow'},\n *   //  { name: 'apple',  color: 'red'},\n *   //  { name: 'kiwi',   color: 'brown'}\n *   // ]\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key of the array to uniq\n * @param {String} propertyKey - Key of the property on the objects of the array to determine uniqueness by\n ",
            "start": 25591,
            "end": 26722,
            "loc": {
              "start": {
                "line": 786,
                "column": 0
              },
              "end": {
                "line": 818,
                "column": 3
              }
            }
          }
        ]
      }
    ],
    "directives": []
  },
  "comments": [
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.alias](http://emberjs.com/api/classes/Ember.computed.html#method_alias)\n *\n * Creates a new property that is an alias for another property on an object.\n * Calls to get or set this property behave as though they were called on\n * the original property.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { alias } from 'ember-decorators/object/computed';\n *\n * export default class UserProfileComponent extends Component {\n *   person = {\n *     first: 'Joe'\n *   };\n *\n *   @alias('person.first') firstName;\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the aliased property\n ",
      "start": 331,
      "end": 1002,
      "loc": {
        "start": {
          "line": 13,
          "column": 0
        },
        "end": {
          "line": 35,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.and](http://emberjs.com/api/classes/Ember.computed.html#method_and)\n *\n * A computed property that performs a logical and on the original values\n * for the provided dependent properties.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { and } from 'ember-decorators/object/computed';\n *\n * export default class UserProfileComponent extends Component {\n *   person = {\n *     first: 'Joe'\n *   };\n *\n *   @and('person.{first,last}') hasFullName; // false\n * }\n * ```\n *\n * @function\n * @param {...String} dependentKeys - Keys for properties to `and`\n ",
      "start": 1084,
      "end": 1707,
      "loc": {
        "start": {
          "line": 38,
          "column": 0
        },
        "end": {
          "line": 59,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.bool](http://emberjs.com/api/classes/Ember.computed.html#method_bool)\n *\n * A computed property that converts the provided dependent property into a\n * boolean value.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { bool } from 'ember-decorators/object/computed';\n *\n * export default class MessagesNotificationComponent extends Component {\n *   messageCount = 1;\n *\n *   @bool('messageCount') hasMessages; // true\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to convert\n ",
      "start": 1785,
      "end": 2369,
      "loc": {
        "start": {
          "line": 62,
          "column": 0
        },
        "end": {
          "line": 81,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.collect](http://emberjs.com/api/classes/Ember.computed.html#method_collect)\n *\n * A computed property that returns the array of values for the provided\n * dependent properties.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { collect } from 'ember-decorators/object/computed';\n *\n * export default class CameraEquipmentComponent extends Component {\n *   light = 'strobe';\n *   lens = '35mm prime';\n *\n *   @collect('light', 'lens') equipment; // ['strobe', '35mm prime']\n * }\n * ```\n *\n * @function\n * @param {...String} dependentKeys - Keys for the properties to collect\n ",
      "start": 2449,
      "end": 3096,
      "loc": {
        "start": {
          "line": 84,
          "column": 0
        },
        "end": {
          "line": 104,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.deprecatingAlias](http://emberjs.com/api/classes/Ember.computed.html#method_deprecatingAlias)\n *\n * Creates a new property that is an alias for another property on an object.\n * Calls to get or set this property behave as though they were called on\n * the original property, but will also trigger a deprecation warning.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { deprecatingAlias } from 'ember-decorators/object/computed';\n *\n * export default class UserProfileComponent extends {\n *   person = {\n *     first: 'Joe'\n *   };\n *\n *   @deprecatingAlias('person.first', {\n *     id: 'user-profile.firstName',\n *     until: '3.0.0',\n *     url: 'https://example.com/deprecations/user-profile.firstName'\n *   }) firstName;\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to alias\n * @param {Object} options\n ",
      "start": 3182,
      "end": 4100,
      "loc": {
        "start": {
          "line": 107,
          "column": 0
        },
        "end": {
          "line": 134,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.empty](http://emberjs.com/api/classes/Ember.computed.html#method_empty)\n *\n * A computed property that returns `true` if the value of the dependent\n * property is null, an empty string, empty array, or empty function.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { empty } from 'ember-decorators/object/computed';\n *\n * export default class FoodItemsComponent extends Component {\n *   items = A(['taco', 'burrito']);\n *\n *   @empty('items') isEmpty; // false\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key of the property to check emptiness of\n ",
      "start": 4204,
      "end": 4881,
      "loc": {
        "start": {
          "line": 137,
          "column": 0
        },
        "end": {
          "line": 157,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.equal](http://emberjs.com/api/classes/Ember.computed.html#method_equal)\n *\n * A computed property that returns true if the dependent properties are equal.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { equal } from 'ember-decorators/object/computed';\n *\n * export default class NapTimeComponent extends Component {\n *   state = 'sleepy';\n *\n *   @equal('state', 'sleepy') napTime; // true\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to check\n * @param {Any} value - Value to compare the dependent property to\n ",
      "start": 4963,
      "end": 5588,
      "loc": {
        "start": {
          "line": 160,
          "column": 0
        },
        "end": {
          "line": 179,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.filter](http://emberjs.com/api/classes/Ember.computed.html#method_filter)\n *\n * Filters the items in the array by the provided callback.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { filter } from 'ember-decorators/object/computed';\n *\n * export default class ChoresListComponent extends Component {\n *   chores = A([\n *     { name: 'cook', done: true },\n *     { name: 'clean', done: true },\n *     { name: 'write more unit tests', done: false }\n *   ]);\n *\n *   @filter('chores')\n *   remainingChores(chore, index, array) {\n *     return !chore.done;\n *   } // [{name: 'write more unit tests', done: false}]\n *\n *   // alternative syntax:\n *\n *   @filter('chores', function(chore, index, array) {\n *     return !chore.done;\n *   }) remainingChores; // [{name: 'write more unit tests', done: false}]\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the array to filter\n * @param {Function(item: Any, index: Number, array: Array<Any>): Boolean} callback - The function to filter with\n ",
      "start": 5670,
      "end": 6790,
      "loc": {
        "start": {
          "line": 182,
          "column": 0
        },
        "end": {
          "line": 215,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.filterBy](http://emberjs.com/api/classes/Ember.computed.html#method_filterBy)\n *\n * Filters the array by the property and value.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { filterBy } from 'ember-decorators/object/computed';\n *\n * export default class ChoresListComponent extends Component {\n *   chores = A([\n *     { name: 'cook', done: true },\n *     { name: 'clean', done: true },\n *     { name: 'write more unit tests', done: false }\n *   ]);\n *\n *   @filterBy('chores', 'done', false) remainingChores; // [{name: 'write more unit tests', done: false}]\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the array to filter\n * @param {String} propertyKey - Property of the array items to filter by\n * @param {Any} value - Value to filter by\n ",
      "start": 6876,
      "end": 7758,
      "loc": {
        "start": {
          "line": 218,
          "column": 0
        },
        "end": {
          "line": 243,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.gt](http://emberjs.com/api/classes/Ember.computed.html#method_gt)\n *\n * A computed property that returns `true` if the provided dependent property\n * is greater than the provided value.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { gt } from 'ember-decorators/object/computed';\n *\n * export default class CatPartyComponent extends Component {\n *   totalCats = 11;\n *\n *   @gt('totalCats', 10) isCatParty; // true\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to compare\n * @param {Number} value - Value to compare against\n ",
      "start": 7846,
      "end": 8483,
      "loc": {
        "start": {
          "line": 246,
          "column": 0
        },
        "end": {
          "line": 266,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.gte](http://emberjs.com/api/classes/Ember.computed.html#method_gte)\n *\n * A computed property that returns `true` if the provided dependent property\n * is greater than or equal to the provided value.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { gte } from 'ember-decorators/object/computed';\n *\n * export default class PlayerListComponent extends Component {\n *   totalPlayers = 14;\n *\n *   @gte('totalPlayers', 14) hasEnoughPlayers; // true\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to compare\n * @param {Number} value - Value to compare against\n ",
      "start": 8559,
      "end": 9226,
      "loc": {
        "start": {
          "line": 269,
          "column": 0
        },
        "end": {
          "line": 289,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.intersect](http://emberjs.com/api/classes/Ember.computed.html#method_intersect)\n *\n * A computed property which returns a new array with all the duplicated\n * elements from two or more dependent arrays.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { intersect } from 'ember-decorators/object/computed';\n *\n * export default class FoodListComponent extends Component {\n *   likes = A([ 'tacos', 'puppies', 'pizza' ]);\n *   foods = A(['tacos', 'pizza']);\n *\n *   @intersect('likes', 'foods') favoriteFoods; // ['tacos', 'pizza']\n * }\n * ```\n *\n * @function\n * @param {...String} dependentKeys - Keys of the arrays to intersect\n ",
      "start": 9304,
      "end": 10043,
      "loc": {
        "start": {
          "line": 292,
          "column": 0
        },
        "end": {
          "line": 313,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.lt](http://emberjs.com/api/classes/Ember.computed.html#method_lt)\n *\n * A computed property that returns `true` if the provided dependent property\n * is less than the provided value.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { lt } from 'ember-decorators/object/computed';\n *\n * export default class DogPartyComponent extends Component {\n *   totalDogs = 3;\n *\n *   @lt('totalDogs', 10) isDogParty; // true\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to compare\n * @param {Number} value - Value to compare against\n ",
      "start": 10133,
      "end": 10766,
      "loc": {
        "start": {
          "line": 316,
          "column": 0
        },
        "end": {
          "line": 336,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.lte](http://emberjs.com/api/classes/Ember.computed.html#method_lte)\n *\n * A computed property that returns `true` if the provided dependent property\n * is less than or equal to the provided value.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { lte } from 'ember-decorators/object/computed';\n *\n * export default class PlayerListComponent extends Component {\n *   totalPlayers = 14;\n *\n *   @lte('totalPlayers', 14) hasEnoughPlayers; // true\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to compare\n * @param {Number} value - Value to compare against\n ",
      "start": 10842,
      "end": 11506,
      "loc": {
        "start": {
          "line": 339,
          "column": 0
        },
        "end": {
          "line": 359,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.map](http://emberjs.com/api/classes/Ember.computed.html#method_map)\n *\n * Returns an array mapped via the callback\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { map } from 'ember-decorators/object/computed';\n *\n * export default class ChoresListComponent extends Component {\n *   chores = A(['clean', 'write more unit tests']);\n *\n *   @map('chores')\n *   loudChores(chore, index) {\n *     return chore.toUpperCase() + '!';\n *   } // ['CLEAN!', 'WRITE MORE UNIT TESTS!']\n *\n *   // alternative syntax:\n *\n *   @map('chores', function(chore, index) {\n *     return chore.toUpperCase() + '!';\n *   }) loudChores; // ['CLEAN!', 'WRITE MORE UNIT TESTS!']\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the array to map over\n * @param {Function(item: Any, index: Number): Any} callback - Function to map over the array\n ",
      "start": 11584,
      "end": 12536,
      "loc": {
        "start": {
          "line": 362,
          "column": 0
        },
        "end": {
          "line": 391,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.mapBy](http://emberjs.com/api/classes/Ember.computed.html#method_mapBy)\n *\n * Returns an array mapped to the specified key.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { mapBy } from 'ember-decorators/object/computed';\n *\n * export default class PeopleListComponent extends Component {\n *   people = A([\n *     {name: \"George\", age: 5},\n *     {name: \"Stella\", age: 10},\n *     {name: \"Violet\", age: 7}\n *   ]);\n *\n *   @mapBy('people', 'age') ages; // [5, 10, 7]\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the array to map over\n * @param {String} propertyKey - Property of the array items to map by\n ",
      "start": 12616,
      "end": 13358,
      "loc": {
        "start": {
          "line": 394,
          "column": 0
        },
        "end": {
          "line": 418,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.match](http://emberjs.com/api/classes/Ember.computed.html#method_match)\n *\n * A computed property which matches the original value for the dependent\n * property against a given RegExp, returning `true` if they values matches\n * the RegExp and `false` if it does not.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { match } from 'ember-decorators/object/computed';\n *\n * export default class IsEmailValidComponent extends Component {\n *   email = 'tomster@emberjs.com';\n *\n *   @match('email', /^.+@.+\\..+$/) validEmail;\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - The property to match\n * @param {RegExp} pattern - The pattern to match against\n ",
      "start": 13440,
      "end": 14178,
      "loc": {
        "start": {
          "line": 421,
          "column": 0
        },
        "end": {
          "line": 442,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.max](http://emberjs.com/api/classes/Ember.computed.html#method_max)\n *\n * A computed property that calculates the maximum value in the dependent\n * array. This will return `-Infinity` when the dependent array is empty.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { max } from 'ember-decorators/object/computed';\n *\n * export default class MaxValueComponent extends Component {\n *   values = A([1, 2, 5, 10]);\n *\n *   @max('values') maxValue; // 10\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the array to find the max value of\n ",
      "start": 14260,
      "end": 14928,
      "loc": {
        "start": {
          "line": 445,
          "column": 0
        },
        "end": {
          "line": 465,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.min](http://emberjs.com/api/classes/Ember.computed.html#method_min)\n *\n * A computed property that calculates the minimum value in the dependent\n * array. This will return `Infinity` when the dependent array is empty.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { min } from 'ember-decorators/object/computed';\n *\n * export default class MinValueComponent extends Component {\n *   values = A([1, 2, 5, 10]);\n *\n *   @min('values') minValue; // 1\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the array to find the max value of\n ",
      "start": 15006,
      "end": 15672,
      "loc": {
        "start": {
          "line": 468,
          "column": 0
        },
        "end": {
          "line": 488,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.none](http://emberjs.com/api/classes/Ember.computed.html#method_none)\n *\n * A computed property that returns true if the value of the dependent property\n * is null or undefined. This avoids errors from JSLint complaining about use\n * of `==`, which can be technically confusing.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { none } from 'ember-decorators/object/computed';\n *\n * export default class NameDisplayComponent extends Component {\n *   firstName = null;\n *\n *   @none('firstName') isNameless; // true unless firstName is defined\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to check\n ",
      "start": 15750,
      "end": 16459,
      "loc": {
        "start": {
          "line": 491,
          "column": 0
        },
        "end": {
          "line": 511,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.not](http://emberjs.com/api/classes/Ember.computed.html#method_not)\n *\n * A computed property that returns the inverse boolean value of the original\n * value for the dependent property.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { not } from 'ember-decorators/object/computed';\n *\n * export default class UserInfoComponent extends Component {\n *   loggedIn = false;\n *\n *   @not('loggedIn') isAnonymous; // true\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to `not`\n ",
      "start": 16539,
      "end": 17122,
      "loc": {
        "start": {
          "line": 514,
          "column": 0
        },
        "end": {
          "line": 533,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.notEmpty](http://emberjs.com/api/classes/Ember.computed.html#method_notEmpty)\n *\n * A computed property that returns `true` if the value of the dependent\n * property is NOT null, an empty string, empty array, or empty function.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { notEmpty } from 'ember-decorators/object/computed';\n *\n * export default class GroceryBagComponent extends Component {\n *   groceryBag = A(['milk', 'eggs', 'apples']);\n *\n *   @notEmpty('groceryBag') hasGroceriesToPutAway; // true\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to check\n ",
      "start": 17200,
      "end": 17912,
      "loc": {
        "start": {
          "line": 536,
          "column": 0
        },
        "end": {
          "line": 556,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.oneWay](http://emberjs.com/api/classes/Ember.computed.html#method_oneWay)\n *\n * Where `computed.alias` aliases `get` and `set`, and allows for bidirectional\n * data flow, `computed.oneWay` only provides an aliased `get`. The `set` will\n * not mutate the upstream property, rather causes the current property to\n * become the value set. This causes the downstream property to permanently\n * diverge from the upstream property.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { oneWay } from 'ember-decorators/object/computed';\n *\n * export default class UserProfileComponent extends Component {\n *   firstName = 'Joe';\n *\n *   @oneWay('firstName') originalName; // will always be 'Joe'\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to alias\n ",
      "start": 18000,
      "end": 18851,
      "loc": {
        "start": {
          "line": 559,
          "column": 0
        },
        "end": {
          "line": 581,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.or](http://emberjs.com/api/classes/Ember.computed.html#method_or)\n *\n * A computed property which performs a logical or on the original values for\n * the provided dependent properties.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { or } from 'ember-decorators/object/computed';\n *\n * export default class OutfitFeaturesComponent extends Component {\n *   hasJacket = true;\n *   hasUmbrella = false;\n *\n *   @or('hasJacket', 'hasUmbrella') isReadyForRain; // true\n * }\n * ```\n *\n * @function\n * @param {...String} dependentKey - Key for the properties to `or`\n ",
      "start": 18935,
      "end": 19570,
      "loc": {
        "start": {
          "line": 584,
          "column": 0
        },
        "end": {
          "line": 604,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.reads](http://emberjs.com/api/classes/Ember.computed.html#method_reads)\n *\n * This is a more semantically meaningful alias of `computed.oneWay`, whose\n * name is somewhat ambiguous as to which direction the data flows.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { reads } from 'ember-decorators/object/computed';\n *\n * export default class UserProfileComponent extends Component {\n *   first = 'Tomster';\n *\n *   @reads('first') firstName;\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to read\n ",
      "start": 19646,
      "end": 20256,
      "loc": {
        "start": {
          "line": 607,
          "column": 0
        },
        "end": {
          "line": 626,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.setDiff](http://emberjs.com/api/classes/Ember.computed.html#method_setDiff)\n *\n * A computed property which returns a new array with all the properties from\n * the first dependent array that are not in the second dependent array.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { setDiff } from 'ember-decorators/object/computed';\n *\n * export default class FavoriteThingsComponent extends Component {\n *   likes = A([ 'tacos', 'puppies', 'pizza' ]);\n *   foods = A(['tacos', 'pizza']);\n *\n *   @setDiff('likes', 'foods') favoriteThingsThatArentFood; // ['puppies']\n * }\n * ```\n *\n * @function\n * @param {String} setAProperty - Keys for the first set\n * @param {String} setBProperty - Keys for the first set\n ",
      "start": 20338,
      "end": 21157,
      "loc": {
        "start": {
          "line": 629,
          "column": 0
        },
        "end": {
          "line": 651,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.sort](http://emberjs.com/api/classes/Ember.computed.html#method_sort)\n *\n * A computed property which returns a new array with all the properties from\n * the first dependent array sorted based on a property or sort function.\n *\n *\n * The callback method you provide should have the following signature:\n *\n * ```javascript\n * function(itemA, itemB);\n * ```\n * - `itemA` the first item to compare.\n * - `itemB` the second item to compare.\n *\n * This function should return negative number (e.g. `-1`) when `itemA` should\n * come before `itemB`. It should return positive number (e.g. `1`) when\n * `itemA` should come after `itemB`. If the `itemA` and `itemB` are equal this\n * function should return `0`.\n *\n * Therefore, if this function is comparing some numeric values, simple\n * `itemA - itemB` or `itemA.get( 'foo' ) - itemB.get( 'foo' )` can be used\n * instead of series of `if`.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { sort } from 'ember-decorators/object/computed';\n *\n * export default class SortNamesComponent extends Component {\n *   names = A([{name:'Link'},{name:'Zelda'},{name:'Ganon'},{name:'Navi'}]);\n *\n *   @sort('names')\n *   sortedNames(a, b){\n *     if (a.name > b.name) {\n *       return 1;\n *     } else if (a.name < b.name) {\n *       return -1;\n *     }\n *\n *     return 0;\n *   } // [{name:'Ganon'},{name:'Link'},{name:'Navi'},{name:'Zelda'}]\n *\n *   // alternative syntax:\n *\n *   @sort('names', function(a, b){\n *     if (a.name > b.name) {\n *       return 1;\n *     } else if (a.name < b.name) {\n *       return -1;\n *     }\n *\n *     return 0;\n *   }) sortedNames; // [{name:'Ganon'},{name:'Link'},{name:'Navi'},{name:'Zelda'}]\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - The key for the array that should be sorted\n * @param {Array<String>|Function(Any, Any): Number} sortDefinition - Sorting function or sort descriptor\n ",
      "start": 21243,
      "end": 23233,
      "loc": {
        "start": {
          "line": 654,
          "column": 0
        },
        "end": {
          "line": 714,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.sum](http://emberjs.com/api/classes/Ember.computed.html#method_sum)\n *\n * A computed property that returns the sum of the value in the dependent\n * array.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { sum } from 'ember-decorators/object/computed';\n *\n * export default class SumValuesComponent extends Component {\n *   values = A([1, 2, 3]);\n *\n *   @sum('values') total; // 6\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key of the array to sum up\n ",
      "start": 23323,
      "end": 23904,
      "loc": {
        "start": {
          "line": 717,
          "column": 0
        },
        "end": {
          "line": 737,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.union](http://emberjs.com/api/classes/Ember.computed.html#method_union)\n *\n * Alias for [union](http://emberjs.com/api/classes/Ember.computed.html#method_uniq).\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { union } from 'ember-decorators/object/computed';\n *\n * export default class LikesAndFoodsComponent extends Component {\n *   likes = A([ 'tacos', 'puppies', 'pizza' ]);\n *   foods = A(['tacos', 'pizza', 'ramen']);\n *\n *   @union('likes', 'foods') favorites; // ['tacos', 'puppies', 'pizza', 'ramen']\n * }\n * ```\n *\n * @function\n * @param {...String} dependentKeys - Keys of the arrays to union\n ",
      "start": 23982,
      "end": 24697,
      "loc": {
        "start": {
          "line": 740,
          "column": 0
        },
        "end": {
          "line": 760,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.uniq](http://emberjs.com/api/classes/Ember.computed.html#method_uniq)\n *\n * A computed property which returns a new array with all the unique elements from one or more dependent arrays.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { uniq } from 'ember-decorators/object/computed';\n *\n * export default class FavoriteThingsComponent extends Component {\n *   likes = A([ 'tacos', 'puppies', 'pizza' ]);\n *   foods = A(['tacos', 'pizza', 'ramen']);\n *\n *   @uniq('likes', 'foods') favorites; // ['tacos', 'puppies', 'pizza', 'ramen']\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key of the array to uniq\n ",
      "start": 24779,
      "end": 25511,
      "loc": {
        "start": {
          "line": 763,
          "column": 0
        },
        "end": {
          "line": 783,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.uniqBy](http://emberjs.com/api/classes/Ember.computed.html#method_uniqBy)\n *\n * A computed property which returns a new array with all the unique elements\n * from an array, with uniqueness determined by a specific key.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { uniqBy } from 'ember-decorators/object/computed';\n *\n * export default class FruitBowlComponent extends Component {\n *   fruits = A([\n *     { name: 'banana', color: 'yellow' },\n *     { name: 'apple',  color: 'red' },\n *     { name: 'kiwi',   color: 'brown' },\n *     { name: 'cherry', color: 'red' },\n *     { name: 'lemon',  color: 'yellow' }\n *   ]);\n *\n *   @uniqBy('fruits', 'color') oneOfEachColor;\n *   // [\n *   //  { name: 'banana', color: 'yellow'},\n *   //  { name: 'apple',  color: 'red'},\n *   //  { name: 'kiwi',   color: 'brown'}\n *   // ]\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key of the array to uniq\n * @param {String} propertyKey - Key of the property on the objects of the array to determine uniqueness by\n ",
      "start": 25591,
      "end": 26722,
      "loc": {
        "start": {
          "line": 786,
          "column": 0
        },
        "end": {
          "line": 818,
          "column": 3
        }
      }
    }
  ],
  "tokens": [
    {
      "type": {
        "label": "import",
        "keyword": "import",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "import",
      "start": 0,
      "end": 6,
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 1,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "Ember",
      "start": 7,
      "end": 12,
      "loc": {
        "start": {
          "line": 1,
          "column": 7
        },
        "end": {
          "line": 1,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "from",
      "start": 13,
      "end": 17,
      "loc": {
        "start": {
          "line": 1,
          "column": 13
        },
        "end": {
          "line": 1,
          "column": 17
        }
      }
    },
    {
      "type": {
        "label": "string",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "ember",
      "start": 18,
      "end": 25,
      "loc": {
        "start": {
          "line": 1,
          "column": 18
        },
        "end": {
          "line": 1,
          "column": 25
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 25,
      "end": 26,
      "loc": {
        "start": {
          "line": 1,
          "column": 25
        },
        "end": {
          "line": 1,
          "column": 26
        }
      }
    },
    {
      "type": {
        "label": "import",
        "keyword": "import",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "import",
      "start": 27,
      "end": 33,
      "loc": {
        "start": {
          "line": 2,
          "column": 0
        },
        "end": {
          "line": 2,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 34,
      "end": 35,
      "loc": {
        "start": {
          "line": 2,
          "column": 7
        },
        "end": {
          "line": 2,
          "column": 8
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "assert",
      "start": 36,
      "end": 42,
      "loc": {
        "start": {
          "line": 2,
          "column": 9
        },
        "end": {
          "line": 2,
          "column": 15
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 43,
      "end": 44,
      "loc": {
        "start": {
          "line": 2,
          "column": 16
        },
        "end": {
          "line": 2,
          "column": 17
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "from",
      "start": 45,
      "end": 49,
      "loc": {
        "start": {
          "line": 2,
          "column": 18
        },
        "end": {
          "line": 2,
          "column": 22
        }
      }
    },
    {
      "type": {
        "label": "string",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "@ember/debug",
      "start": 50,
      "end": 64,
      "loc": {
        "start": {
          "line": 2,
          "column": 23
        },
        "end": {
          "line": 2,
          "column": 37
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 64,
      "end": 65,
      "loc": {
        "start": {
          "line": 2,
          "column": 37
        },
        "end": {
          "line": 2,
          "column": 38
        }
      }
    },
    {
      "type": {
        "label": "import",
        "keyword": "import",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "import",
      "start": 66,
      "end": 72,
      "loc": {
        "start": {
          "line": 3,
          "column": 0
        },
        "end": {
          "line": 3,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 73,
      "end": 74,
      "loc": {
        "start": {
          "line": 3,
          "column": 7
        },
        "end": {
          "line": 3,
          "column": 8
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "decoratedPropertyWithRequiredParams",
      "start": 77,
      "end": 112,
      "loc": {
        "start": {
          "line": 4,
          "column": 2
        },
        "end": {
          "line": 4,
          "column": 37
        }
      }
    },
    {
      "type": {
        "label": ",",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 112,
      "end": 113,
      "loc": {
        "start": {
          "line": 4,
          "column": 37
        },
        "end": {
          "line": 4,
          "column": 38
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "decoratedPropertyWithOptionalCallback",
      "start": 116,
      "end": 153,
      "loc": {
        "start": {
          "line": 5,
          "column": 2
        },
        "end": {
          "line": 5,
          "column": 39
        }
      }
    },
    {
      "type": {
        "label": ",",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 153,
      "end": 154,
      "loc": {
        "start": {
          "line": 5,
          "column": 39
        },
        "end": {
          "line": 5,
          "column": 40
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "decoratedPropertyWithEitherCallbackOrProperty",
      "start": 157,
      "end": 202,
      "loc": {
        "start": {
          "line": 6,
          "column": 2
        },
        "end": {
          "line": 6,
          "column": 47
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 203,
      "end": 204,
      "loc": {
        "start": {
          "line": 7,
          "column": 0
        },
        "end": {
          "line": 7,
          "column": 1
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "from",
      "start": 205,
      "end": 209,
      "loc": {
        "start": {
          "line": 7,
          "column": 2
        },
        "end": {
          "line": 7,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "string",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "@ember-decorators/utils/decorator-macros",
      "start": 210,
      "end": 252,
      "loc": {
        "start": {
          "line": 7,
          "column": 7
        },
        "end": {
          "line": 7,
          "column": 49
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 252,
      "end": 253,
      "loc": {
        "start": {
          "line": 7,
          "column": 49
        },
        "end": {
          "line": 7,
          "column": 50
        }
      }
    },
    {
      "type": {
        "label": "import",
        "keyword": "import",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "import",
      "start": 255,
      "end": 261,
      "loc": {
        "start": {
          "line": 9,
          "column": 0
        },
        "end": {
          "line": 9,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 262,
      "end": 263,
      "loc": {
        "start": {
          "line": 9,
          "column": 7
        },
        "end": {
          "line": 9,
          "column": 8
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "SUPPORTS_UNIQ_BY_COMPUTED",
      "start": 266,
      "end": 291,
      "loc": {
        "start": {
          "line": 10,
          "column": 2
        },
        "end": {
          "line": 10,
          "column": 27
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 292,
      "end": 293,
      "loc": {
        "start": {
          "line": 11,
          "column": 0
        },
        "end": {
          "line": 11,
          "column": 1
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "from",
      "start": 294,
      "end": 298,
      "loc": {
        "start": {
          "line": 11,
          "column": 2
        },
        "end": {
          "line": 11,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "string",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "ember-compatibility-helpers",
      "start": 299,
      "end": 328,
      "loc": {
        "start": {
          "line": 11,
          "column": 7
        },
        "end": {
          "line": 11,
          "column": 36
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 328,
      "end": 329,
      "loc": {
        "start": {
          "line": 11,
          "column": 36
        },
        "end": {
          "line": 11,
          "column": 37
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.alias](http://emberjs.com/api/classes/Ember.computed.html#method_alias)\n *\n * Creates a new property that is an alias for another property on an object.\n * Calls to get or set this property behave as though they were called on\n * the original property.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { alias } from 'ember-decorators/object/computed';\n *\n * export default class UserProfileComponent extends Component {\n *   person = {\n *     first: 'Joe'\n *   };\n *\n *   @alias('person.first') firstName;\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the aliased property\n ",
      "start": 331,
      "end": 1002,
      "loc": {
        "start": {
          "line": 13,
          "column": 0
        },
        "end": {
          "line": 35,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 1003,
      "end": 1009,
      "loc": {
        "start": {
          "line": 36,
          "column": 0
        },
        "end": {
          "line": 36,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "const",
        "keyword": "const",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "const",
      "start": 1010,
      "end": 1015,
      "loc": {
        "start": {
          "line": 36,
          "column": 7
        },
        "end": {
          "line": 36,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "alias",
      "start": 1016,
      "end": 1021,
      "loc": {
        "start": {
          "line": 36,
          "column": 13
        },
        "end": {
          "line": 36,
          "column": 18
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 1022,
      "end": 1023,
      "loc": {
        "start": {
          "line": 36,
          "column": 19
        },
        "end": {
          "line": 36,
          "column": 20
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "decoratedPropertyWithRequiredParams",
      "start": 1024,
      "end": 1059,
      "loc": {
        "start": {
          "line": 36,
          "column": 21
        },
        "end": {
          "line": 36,
          "column": 56
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1059,
      "end": 1060,
      "loc": {
        "start": {
          "line": 36,
          "column": 56
        },
        "end": {
          "line": 36,
          "column": 57
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "Ember",
      "start": 1060,
      "end": 1065,
      "loc": {
        "start": {
          "line": 36,
          "column": 57
        },
        "end": {
          "line": 36,
          "column": 62
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1065,
      "end": 1066,
      "loc": {
        "start": {
          "line": 36,
          "column": 62
        },
        "end": {
          "line": 36,
          "column": 63
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "computed",
      "start": 1066,
      "end": 1074,
      "loc": {
        "start": {
          "line": 36,
          "column": 63
        },
        "end": {
          "line": 36,
          "column": 71
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1074,
      "end": 1075,
      "loc": {
        "start": {
          "line": 36,
          "column": 71
        },
        "end": {
          "line": 36,
          "column": 72
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "alias",
      "start": 1075,
      "end": 1080,
      "loc": {
        "start": {
          "line": 36,
          "column": 72
        },
        "end": {
          "line": 36,
          "column": 77
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1080,
      "end": 1081,
      "loc": {
        "start": {
          "line": 36,
          "column": 77
        },
        "end": {
          "line": 36,
          "column": 78
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1081,
      "end": 1082,
      "loc": {
        "start": {
          "line": 36,
          "column": 78
        },
        "end": {
          "line": 36,
          "column": 79
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.and](http://emberjs.com/api/classes/Ember.computed.html#method_and)\n *\n * A computed property that performs a logical and on the original values\n * for the provided dependent properties.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { and } from 'ember-decorators/object/computed';\n *\n * export default class UserProfileComponent extends Component {\n *   person = {\n *     first: 'Joe'\n *   };\n *\n *   @and('person.{first,last}') hasFullName; // false\n * }\n * ```\n *\n * @function\n * @param {...String} dependentKeys - Keys for properties to `and`\n ",
      "start": 1084,
      "end": 1707,
      "loc": {
        "start": {
          "line": 38,
          "column": 0
        },
        "end": {
          "line": 59,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 1708,
      "end": 1714,
      "loc": {
        "start": {
          "line": 60,
          "column": 0
        },
        "end": {
          "line": 60,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "const",
        "keyword": "const",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "const",
      "start": 1715,
      "end": 1720,
      "loc": {
        "start": {
          "line": 60,
          "column": 7
        },
        "end": {
          "line": 60,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "and",
      "start": 1721,
      "end": 1724,
      "loc": {
        "start": {
          "line": 60,
          "column": 13
        },
        "end": {
          "line": 60,
          "column": 16
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 1725,
      "end": 1726,
      "loc": {
        "start": {
          "line": 60,
          "column": 17
        },
        "end": {
          "line": 60,
          "column": 18
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "decoratedPropertyWithRequiredParams",
      "start": 1727,
      "end": 1762,
      "loc": {
        "start": {
          "line": 60,
          "column": 19
        },
        "end": {
          "line": 60,
          "column": 54
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1762,
      "end": 1763,
      "loc": {
        "start": {
          "line": 60,
          "column": 54
        },
        "end": {
          "line": 60,
          "column": 55
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "Ember",
      "start": 1763,
      "end": 1768,
      "loc": {
        "start": {
          "line": 60,
          "column": 55
        },
        "end": {
          "line": 60,
          "column": 60
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1768,
      "end": 1769,
      "loc": {
        "start": {
          "line": 60,
          "column": 60
        },
        "end": {
          "line": 60,
          "column": 61
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "computed",
      "start": 1769,
      "end": 1777,
      "loc": {
        "start": {
          "line": 60,
          "column": 61
        },
        "end": {
          "line": 60,
          "column": 69
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1777,
      "end": 1778,
      "loc": {
        "start": {
          "line": 60,
          "column": 69
        },
        "end": {
          "line": 60,
          "column": 70
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "and",
      "start": 1778,
      "end": 1781,
      "loc": {
        "start": {
          "line": 60,
          "column": 70
        },
        "end": {
          "line": 60,
          "column": 73
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1781,
      "end": 1782,
      "loc": {
        "start": {
          "line": 60,
          "column": 73
        },
        "end": {
          "line": 60,
          "column": 74
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1782,
      "end": 1783,
      "loc": {
        "start": {
          "line": 60,
          "column": 74
        },
        "end": {
          "line": 60,
          "column": 75
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.bool](http://emberjs.com/api/classes/Ember.computed.html#method_bool)\n *\n * A computed property that converts the provided dependent property into a\n * boolean value.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { bool } from 'ember-decorators/object/computed';\n *\n * export default class MessagesNotificationComponent extends Component {\n *   messageCount = 1;\n *\n *   @bool('messageCount') hasMessages; // true\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to convert\n ",
      "start": 1785,
      "end": 2369,
      "loc": {
        "start": {
          "line": 62,
          "column": 0
        },
        "end": {
          "line": 81,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 2370,
      "end": 2376,
      "loc": {
        "start": {
          "line": 82,
          "column": 0
        },
        "end": {
          "line": 82,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "const",
        "keyword": "const",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "const",
      "start": 2377,
      "end": 2382,
      "loc": {
        "start": {
          "line": 82,
          "column": 7
        },
        "end": {
          "line": 82,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "bool",
      "start": 2383,
      "end": 2387,
      "loc": {
        "start": {
          "line": 82,
          "column": 13
        },
        "end": {
          "line": 82,
          "column": 17
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 2388,
      "end": 2389,
      "loc": {
        "start": {
          "line": 82,
          "column": 18
        },
        "end": {
          "line": 82,
          "column": 19
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "decoratedPropertyWithRequiredParams",
      "start": 2390,
      "end": 2425,
      "loc": {
        "start": {
          "line": 82,
          "column": 20
        },
        "end": {
          "line": 82,
          "column": 55
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 2425,
      "end": 2426,
      "loc": {
        "start": {
          "line": 82,
          "column": 55
        },
        "end": {
          "line": 82,
          "column": 56
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "Ember",
      "start": 2426,
      "end": 2431,
      "loc": {
        "start": {
          "line": 82,
          "column": 56
        },
        "end": {
          "line": 82,
          "column": 61
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 2431,
      "end": 2432,
      "loc": {
        "start": {
          "line": 82,
          "column": 61
        },
        "end": {
          "line": 82,
          "column": 62
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "computed",
      "start": 2432,
      "end": 2440,
      "loc": {
        "start": {
          "line": 82,
          "column": 62
        },
        "end": {
          "line": 82,
          "column": 70
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 2440,
      "end": 2441,
      "loc": {
        "start": {
          "line": 82,
          "column": 70
        },
        "end": {
          "line": 82,
          "column": 71
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "bool",
      "start": 2441,
      "end": 2445,
      "loc": {
        "start": {
          "line": 82,
          "column": 71
        },
        "end": {
          "line": 82,
          "column": 75
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 2445,
      "end": 2446,
      "loc": {
        "start": {
          "line": 82,
          "column": 75
        },
        "end": {
          "line": 82,
          "column": 76
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 2446,
      "end": 2447,
      "loc": {
        "start": {
          "line": 82,
          "column": 76
        },
        "end": {
          "line": 82,
          "column": 77
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.collect](http://emberjs.com/api/classes/Ember.computed.html#method_collect)\n *\n * A computed property that returns the array of values for the provided\n * dependent properties.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { collect } from 'ember-decorators/object/computed';\n *\n * export default class CameraEquipmentComponent extends Component {\n *   light = 'strobe';\n *   lens = '35mm prime';\n *\n *   @collect('light', 'lens') equipment; // ['strobe', '35mm prime']\n * }\n * ```\n *\n * @function\n * @param {...String} dependentKeys - Keys for the properties to collect\n ",
      "start": 2449,
      "end": 3096,
      "loc": {
        "start": {
          "line": 84,
          "column": 0
        },
        "end": {
          "line": 104,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 3097,
      "end": 3103,
      "loc": {
        "start": {
          "line": 105,
          "column": 0
        },
        "end": {
          "line": 105,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "const",
        "keyword": "const",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "const",
      "start": 3104,
      "end": 3109,
      "loc": {
        "start": {
          "line": 105,
          "column": 7
        },
        "end": {
          "line": 105,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "collect",
      "start": 3110,
      "end": 3117,
      "loc": {
        "start": {
          "line": 105,
          "column": 13
        },
        "end": {
          "line": 105,
          "column": 20
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 3118,
      "end": 3119,
      "loc": {
        "start": {
          "line": 105,
          "column": 21
        },
        "end": {
          "line": 105,
          "column": 22
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "decoratedPropertyWithRequiredParams",
      "start": 3120,
      "end": 3155,
      "loc": {
        "start": {
          "line": 105,
          "column": 23
        },
        "end": {
          "line": 105,
          "column": 58
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 3155,
      "end": 3156,
      "loc": {
        "start": {
          "line": 105,
          "column": 58
        },
        "end": {
          "line": 105,
          "column": 59
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "Ember",
      "start": 3156,
      "end": 3161,
      "loc": {
        "start": {
          "line": 105,
          "column": 59
        },
        "end": {
          "line": 105,
          "column": 64
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 3161,
      "end": 3162,
      "loc": {
        "start": {
          "line": 105,
          "column": 64
        },
        "end": {
          "line": 105,
          "column": 65
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "computed",
      "start": 3162,
      "end": 3170,
      "loc": {
        "start": {
          "line": 105,
          "column": 65
        },
        "end": {
          "line": 105,
          "column": 73
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 3170,
      "end": 3171,
      "loc": {
        "start": {
          "line": 105,
          "column": 73
        },
        "end": {
          "line": 105,
          "column": 74
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "collect",
      "start": 3171,
      "end": 3178,
      "loc": {
        "start": {
          "line": 105,
          "column": 74
        },
        "end": {
          "line": 105,
          "column": 81
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 3178,
      "end": 3179,
      "loc": {
        "start": {
          "line": 105,
          "column": 81
        },
        "end": {
          "line": 105,
          "column": 82
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 3179,
      "end": 3180,
      "loc": {
        "start": {
          "line": 105,
          "column": 82
        },
        "end": {
          "line": 105,
          "column": 83
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.deprecatingAlias](http://emberjs.com/api/classes/Ember.computed.html#method_deprecatingAlias)\n *\n * Creates a new property that is an alias for another property on an object.\n * Calls to get or set this property behave as though they were called on\n * the original property, but will also trigger a deprecation warning.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { deprecatingAlias } from 'ember-decorators/object/computed';\n *\n * export default class UserProfileComponent extends {\n *   person = {\n *     first: 'Joe'\n *   };\n *\n *   @deprecatingAlias('person.first', {\n *     id: 'user-profile.firstName',\n *     until: '3.0.0',\n *     url: 'https://example.com/deprecations/user-profile.firstName'\n *   }) firstName;\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to alias\n * @param {Object} options\n ",
      "start": 3182,
      "end": 4100,
      "loc": {
        "start": {
          "line": 107,
          "column": 0
        },
        "end": {
          "line": 134,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 4101,
      "end": 4107,
      "loc": {
        "start": {
          "line": 135,
          "column": 0
        },
        "end": {
          "line": 135,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "const",
        "keyword": "const",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "const",
      "start": 4108,
      "end": 4113,
      "loc": {
        "start": {
          "line": 135,
          "column": 7
        },
        "end": {
          "line": 135,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "deprecatingAlias",
      "start": 4114,
      "end": 4130,
      "loc": {
        "start": {
          "line": 135,
          "column": 13
        },
        "end": {
          "line": 135,
          "column": 29
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 4131,
      "end": 4132,
      "loc": {
        "start": {
          "line": 135,
          "column": 30
        },
        "end": {
          "line": 135,
          "column": 31
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "decoratedPropertyWithRequiredParams",
      "start": 4133,
      "end": 4168,
      "loc": {
        "start": {
          "line": 135,
          "column": 32
        },
        "end": {
          "line": 135,
          "column": 67
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 4168,
      "end": 4169,
      "loc": {
        "start": {
          "line": 135,
          "column": 67
        },
        "end": {
          "line": 135,
          "column": 68
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "Ember",
      "start": 4169,
      "end": 4174,
      "loc": {
        "start": {
          "line": 135,
          "column": 68
        },
        "end": {
          "line": 135,
          "column": 73
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 4174,
      "end": 4175,
      "loc": {
        "start": {
          "line": 135,
          "column": 73
        },
        "end": {
          "line": 135,
          "column": 74
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "computed",
      "start": 4175,
      "end": 4183,
      "loc": {
        "start": {
          "line": 135,
          "column": 74
        },
        "end": {
          "line": 135,
          "column": 82
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 4183,
      "end": 4184,
      "loc": {
        "start": {
          "line": 135,
          "column": 82
        },
        "end": {
          "line": 135,
          "column": 83
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "deprecatingAlias",
      "start": 4184,
      "end": 4200,
      "loc": {
        "start": {
          "line": 135,
          "column": 83
        },
        "end": {
          "line": 135,
          "column": 99
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 4200,
      "end": 4201,
      "loc": {
        "start": {
          "line": 135,
          "column": 99
        },
        "end": {
          "line": 135,
          "column": 100
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 4201,
      "end": 4202,
      "loc": {
        "start": {
          "line": 135,
          "column": 100
        },
        "end": {
          "line": 135,
          "column": 101
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.empty](http://emberjs.com/api/classes/Ember.computed.html#method_empty)\n *\n * A computed property that returns `true` if the value of the dependent\n * property is null, an empty string, empty array, or empty function.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { empty } from 'ember-decorators/object/computed';\n *\n * export default class FoodItemsComponent extends Component {\n *   items = A(['taco', 'burrito']);\n *\n *   @empty('items') isEmpty; // false\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key of the property to check emptiness of\n ",
      "start": 4204,
      "end": 4881,
      "loc": {
        "start": {
          "line": 137,
          "column": 0
        },
        "end": {
          "line": 157,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 4882,
      "end": 4888,
      "loc": {
        "start": {
          "line": 158,
          "column": 0
        },
        "end": {
          "line": 158,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "const",
        "keyword": "const",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "const",
      "start": 4889,
      "end": 4894,
      "loc": {
        "start": {
          "line": 158,
          "column": 7
        },
        "end": {
          "line": 158,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "empty",
      "start": 4895,
      "end": 4900,
      "loc": {
        "start": {
          "line": 158,
          "column": 13
        },
        "end": {
          "line": 158,
          "column": 18
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 4901,
      "end": 4902,
      "loc": {
        "start": {
          "line": 158,
          "column": 19
        },
        "end": {
          "line": 158,
          "column": 20
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "decoratedPropertyWithRequiredParams",
      "start": 4903,
      "end": 4938,
      "loc": {
        "start": {
          "line": 158,
          "column": 21
        },
        "end": {
          "line": 158,
          "column": 56
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 4938,
      "end": 4939,
      "loc": {
        "start": {
          "line": 158,
          "column": 56
        },
        "end": {
          "line": 158,
          "column": 57
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "Ember",
      "start": 4939,
      "end": 4944,
      "loc": {
        "start": {
          "line": 158,
          "column": 57
        },
        "end": {
          "line": 158,
          "column": 62
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 4944,
      "end": 4945,
      "loc": {
        "start": {
          "line": 158,
          "column": 62
        },
        "end": {
          "line": 158,
          "column": 63
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "computed",
      "start": 4945,
      "end": 4953,
      "loc": {
        "start": {
          "line": 158,
          "column": 63
        },
        "end": {
          "line": 158,
          "column": 71
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 4953,
      "end": 4954,
      "loc": {
        "start": {
          "line": 158,
          "column": 71
        },
        "end": {
          "line": 158,
          "column": 72
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "empty",
      "start": 4954,
      "end": 4959,
      "loc": {
        "start": {
          "line": 158,
          "column": 72
        },
        "end": {
          "line": 158,
          "column": 77
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 4959,
      "end": 4960,
      "loc": {
        "start": {
          "line": 158,
          "column": 77
        },
        "end": {
          "line": 158,
          "column": 78
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 4960,
      "end": 4961,
      "loc": {
        "start": {
          "line": 158,
          "column": 78
        },
        "end": {
          "line": 158,
          "column": 79
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.equal](http://emberjs.com/api/classes/Ember.computed.html#method_equal)\n *\n * A computed property that returns true if the dependent properties are equal.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { equal } from 'ember-decorators/object/computed';\n *\n * export default class NapTimeComponent extends Component {\n *   state = 'sleepy';\n *\n *   @equal('state', 'sleepy') napTime; // true\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to check\n * @param {Any} value - Value to compare the dependent property to\n ",
      "start": 4963,
      "end": 5588,
      "loc": {
        "start": {
          "line": 160,
          "column": 0
        },
        "end": {
          "line": 179,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 5589,
      "end": 5595,
      "loc": {
        "start": {
          "line": 180,
          "column": 0
        },
        "end": {
          "line": 180,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "const",
        "keyword": "const",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "const",
      "start": 5596,
      "end": 5601,
      "loc": {
        "start": {
          "line": 180,
          "column": 7
        },
        "end": {
          "line": 180,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "equal",
      "start": 5602,
      "end": 5607,
      "loc": {
        "start": {
          "line": 180,
          "column": 13
        },
        "end": {
          "line": 180,
          "column": 18
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 5608,
      "end": 5609,
      "loc": {
        "start": {
          "line": 180,
          "column": 19
        },
        "end": {
          "line": 180,
          "column": 20
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "decoratedPropertyWithRequiredParams",
      "start": 5610,
      "end": 5645,
      "loc": {
        "start": {
          "line": 180,
          "column": 21
        },
        "end": {
          "line": 180,
          "column": 56
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 5645,
      "end": 5646,
      "loc": {
        "start": {
          "line": 180,
          "column": 56
        },
        "end": {
          "line": 180,
          "column": 57
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "Ember",
      "start": 5646,
      "end": 5651,
      "loc": {
        "start": {
          "line": 180,
          "column": 57
        },
        "end": {
          "line": 180,
          "column": 62
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 5651,
      "end": 5652,
      "loc": {
        "start": {
          "line": 180,
          "column": 62
        },
        "end": {
          "line": 180,
          "column": 63
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "computed",
      "start": 5652,
      "end": 5660,
      "loc": {
        "start": {
          "line": 180,
          "column": 63
        },
        "end": {
          "line": 180,
          "column": 71
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 5660,
      "end": 5661,
      "loc": {
        "start": {
          "line": 180,
          "column": 71
        },
        "end": {
          "line": 180,
          "column": 72
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "equal",
      "start": 5661,
      "end": 5666,
      "loc": {
        "start": {
          "line": 180,
          "column": 72
        },
        "end": {
          "line": 180,
          "column": 77
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 5666,
      "end": 5667,
      "loc": {
        "start": {
          "line": 180,
          "column": 77
        },
        "end": {
          "line": 180,
          "column": 78
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 5667,
      "end": 5668,
      "loc": {
        "start": {
          "line": 180,
          "column": 78
        },
        "end": {
          "line": 180,
          "column": 79
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.filter](http://emberjs.com/api/classes/Ember.computed.html#method_filter)\n *\n * Filters the items in the array by the provided callback.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { filter } from 'ember-decorators/object/computed';\n *\n * export default class ChoresListComponent extends Component {\n *   chores = A([\n *     { name: 'cook', done: true },\n *     { name: 'clean', done: true },\n *     { name: 'write more unit tests', done: false }\n *   ]);\n *\n *   @filter('chores')\n *   remainingChores(chore, index, array) {\n *     return !chore.done;\n *   } // [{name: 'write more unit tests', done: false}]\n *\n *   // alternative syntax:\n *\n *   @filter('chores', function(chore, index, array) {\n *     return !chore.done;\n *   }) remainingChores; // [{name: 'write more unit tests', done: false}]\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the array to filter\n * @param {Function(item: Any, index: Number, array: Array<Any>): Boolean} callback - The function to filter with\n ",
      "start": 5670,
      "end": 6790,
      "loc": {
        "start": {
          "line": 182,
          "column": 0
        },
        "end": {
          "line": 215,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 6791,
      "end": 6797,
      "loc": {
        "start": {
          "line": 216,
          "column": 0
        },
        "end": {
          "line": 216,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "const",
        "keyword": "const",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "const",
      "start": 6798,
      "end": 6803,
      "loc": {
        "start": {
          "line": 216,
          "column": 7
        },
        "end": {
          "line": 216,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "filter",
      "start": 6804,
      "end": 6810,
      "loc": {
        "start": {
          "line": 216,
          "column": 13
        },
        "end": {
          "line": 216,
          "column": 19
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 6811,
      "end": 6812,
      "loc": {
        "start": {
          "line": 216,
          "column": 20
        },
        "end": {
          "line": 216,
          "column": 21
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "decoratedPropertyWithOptionalCallback",
      "start": 6813,
      "end": 6850,
      "loc": {
        "start": {
          "line": 216,
          "column": 22
        },
        "end": {
          "line": 216,
          "column": 59
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 6850,
      "end": 6851,
      "loc": {
        "start": {
          "line": 216,
          "column": 59
        },
        "end": {
          "line": 216,
          "column": 60
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "Ember",
      "start": 6851,
      "end": 6856,
      "loc": {
        "start": {
          "line": 216,
          "column": 60
        },
        "end": {
          "line": 216,
          "column": 65
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 6856,
      "end": 6857,
      "loc": {
        "start": {
          "line": 216,
          "column": 65
        },
        "end": {
          "line": 216,
          "column": 66
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "computed",
      "start": 6857,
      "end": 6865,
      "loc": {
        "start": {
          "line": 216,
          "column": 66
        },
        "end": {
          "line": 216,
          "column": 74
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 6865,
      "end": 6866,
      "loc": {
        "start": {
          "line": 216,
          "column": 74
        },
        "end": {
          "line": 216,
          "column": 75
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "filter",
      "start": 6866,
      "end": 6872,
      "loc": {
        "start": {
          "line": 216,
          "column": 75
        },
        "end": {
          "line": 216,
          "column": 81
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 6872,
      "end": 6873,
      "loc": {
        "start": {
          "line": 216,
          "column": 81
        },
        "end": {
          "line": 216,
          "column": 82
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 6873,
      "end": 6874,
      "loc": {
        "start": {
          "line": 216,
          "column": 82
        },
        "end": {
          "line": 216,
          "column": 83
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.filterBy](http://emberjs.com/api/classes/Ember.computed.html#method_filterBy)\n *\n * Filters the array by the property and value.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { filterBy } from 'ember-decorators/object/computed';\n *\n * export default class ChoresListComponent extends Component {\n *   chores = A([\n *     { name: 'cook', done: true },\n *     { name: 'clean', done: true },\n *     { name: 'write more unit tests', done: false }\n *   ]);\n *\n *   @filterBy('chores', 'done', false) remainingChores; // [{name: 'write more unit tests', done: false}]\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the array to filter\n * @param {String} propertyKey - Property of the array items to filter by\n * @param {Any} value - Value to filter by\n ",
      "start": 6876,
      "end": 7758,
      "loc": {
        "start": {
          "line": 218,
          "column": 0
        },
        "end": {
          "line": 243,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 7759,
      "end": 7765,
      "loc": {
        "start": {
          "line": 244,
          "column": 0
        },
        "end": {
          "line": 244,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "const",
        "keyword": "const",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "const",
      "start": 7766,
      "end": 7771,
      "loc": {
        "start": {
          "line": 244,
          "column": 7
        },
        "end": {
          "line": 244,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "filterBy",
      "start": 7772,
      "end": 7780,
      "loc": {
        "start": {
          "line": 244,
          "column": 13
        },
        "end": {
          "line": 244,
          "column": 21
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 7781,
      "end": 7782,
      "loc": {
        "start": {
          "line": 244,
          "column": 22
        },
        "end": {
          "line": 244,
          "column": 23
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "decoratedPropertyWithRequiredParams",
      "start": 7783,
      "end": 7818,
      "loc": {
        "start": {
          "line": 244,
          "column": 24
        },
        "end": {
          "line": 244,
          "column": 59
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 7818,
      "end": 7819,
      "loc": {
        "start": {
          "line": 244,
          "column": 59
        },
        "end": {
          "line": 244,
          "column": 60
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "Ember",
      "start": 7819,
      "end": 7824,
      "loc": {
        "start": {
          "line": 244,
          "column": 60
        },
        "end": {
          "line": 244,
          "column": 65
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 7824,
      "end": 7825,
      "loc": {
        "start": {
          "line": 244,
          "column": 65
        },
        "end": {
          "line": 244,
          "column": 66
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "computed",
      "start": 7825,
      "end": 7833,
      "loc": {
        "start": {
          "line": 244,
          "column": 66
        },
        "end": {
          "line": 244,
          "column": 74
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 7833,
      "end": 7834,
      "loc": {
        "start": {
          "line": 244,
          "column": 74
        },
        "end": {
          "line": 244,
          "column": 75
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "filterBy",
      "start": 7834,
      "end": 7842,
      "loc": {
        "start": {
          "line": 244,
          "column": 75
        },
        "end": {
          "line": 244,
          "column": 83
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 7842,
      "end": 7843,
      "loc": {
        "start": {
          "line": 244,
          "column": 83
        },
        "end": {
          "line": 244,
          "column": 84
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 7843,
      "end": 7844,
      "loc": {
        "start": {
          "line": 244,
          "column": 84
        },
        "end": {
          "line": 244,
          "column": 85
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.gt](http://emberjs.com/api/classes/Ember.computed.html#method_gt)\n *\n * A computed property that returns `true` if the provided dependent property\n * is greater than the provided value.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { gt } from 'ember-decorators/object/computed';\n *\n * export default class CatPartyComponent extends Component {\n *   totalCats = 11;\n *\n *   @gt('totalCats', 10) isCatParty; // true\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to compare\n * @param {Number} value - Value to compare against\n ",
      "start": 7846,
      "end": 8483,
      "loc": {
        "start": {
          "line": 246,
          "column": 0
        },
        "end": {
          "line": 266,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 8484,
      "end": 8490,
      "loc": {
        "start": {
          "line": 267,
          "column": 0
        },
        "end": {
          "line": 267,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "const",
        "keyword": "const",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "const",
      "start": 8491,
      "end": 8496,
      "loc": {
        "start": {
          "line": 267,
          "column": 7
        },
        "end": {
          "line": 267,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "gt",
      "start": 8497,
      "end": 8499,
      "loc": {
        "start": {
          "line": 267,
          "column": 13
        },
        "end": {
          "line": 267,
          "column": 15
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 8500,
      "end": 8501,
      "loc": {
        "start": {
          "line": 267,
          "column": 16
        },
        "end": {
          "line": 267,
          "column": 17
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "decoratedPropertyWithRequiredParams",
      "start": 8502,
      "end": 8537,
      "loc": {
        "start": {
          "line": 267,
          "column": 18
        },
        "end": {
          "line": 267,
          "column": 53
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 8537,
      "end": 8538,
      "loc": {
        "start": {
          "line": 267,
          "column": 53
        },
        "end": {
          "line": 267,
          "column": 54
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "Ember",
      "start": 8538,
      "end": 8543,
      "loc": {
        "start": {
          "line": 267,
          "column": 54
        },
        "end": {
          "line": 267,
          "column": 59
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 8543,
      "end": 8544,
      "loc": {
        "start": {
          "line": 267,
          "column": 59
        },
        "end": {
          "line": 267,
          "column": 60
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "computed",
      "start": 8544,
      "end": 8552,
      "loc": {
        "start": {
          "line": 267,
          "column": 60
        },
        "end": {
          "line": 267,
          "column": 68
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 8552,
      "end": 8553,
      "loc": {
        "start": {
          "line": 267,
          "column": 68
        },
        "end": {
          "line": 267,
          "column": 69
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "gt",
      "start": 8553,
      "end": 8555,
      "loc": {
        "start": {
          "line": 267,
          "column": 69
        },
        "end": {
          "line": 267,
          "column": 71
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 8555,
      "end": 8556,
      "loc": {
        "start": {
          "line": 267,
          "column": 71
        },
        "end": {
          "line": 267,
          "column": 72
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 8556,
      "end": 8557,
      "loc": {
        "start": {
          "line": 267,
          "column": 72
        },
        "end": {
          "line": 267,
          "column": 73
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.gte](http://emberjs.com/api/classes/Ember.computed.html#method_gte)\n *\n * A computed property that returns `true` if the provided dependent property\n * is greater than or equal to the provided value.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { gte } from 'ember-decorators/object/computed';\n *\n * export default class PlayerListComponent extends Component {\n *   totalPlayers = 14;\n *\n *   @gte('totalPlayers', 14) hasEnoughPlayers; // true\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to compare\n * @param {Number} value - Value to compare against\n ",
      "start": 8559,
      "end": 9226,
      "loc": {
        "start": {
          "line": 269,
          "column": 0
        },
        "end": {
          "line": 289,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 9227,
      "end": 9233,
      "loc": {
        "start": {
          "line": 290,
          "column": 0
        },
        "end": {
          "line": 290,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "const",
        "keyword": "const",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "const",
      "start": 9234,
      "end": 9239,
      "loc": {
        "start": {
          "line": 290,
          "column": 7
        },
        "end": {
          "line": 290,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "gte",
      "start": 9240,
      "end": 9243,
      "loc": {
        "start": {
          "line": 290,
          "column": 13
        },
        "end": {
          "line": 290,
          "column": 16
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 9244,
      "end": 9245,
      "loc": {
        "start": {
          "line": 290,
          "column": 17
        },
        "end": {
          "line": 290,
          "column": 18
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "decoratedPropertyWithRequiredParams",
      "start": 9246,
      "end": 9281,
      "loc": {
        "start": {
          "line": 290,
          "column": 19
        },
        "end": {
          "line": 290,
          "column": 54
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 9281,
      "end": 9282,
      "loc": {
        "start": {
          "line": 290,
          "column": 54
        },
        "end": {
          "line": 290,
          "column": 55
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "Ember",
      "start": 9282,
      "end": 9287,
      "loc": {
        "start": {
          "line": 290,
          "column": 55
        },
        "end": {
          "line": 290,
          "column": 60
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 9287,
      "end": 9288,
      "loc": {
        "start": {
          "line": 290,
          "column": 60
        },
        "end": {
          "line": 290,
          "column": 61
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "computed",
      "start": 9288,
      "end": 9296,
      "loc": {
        "start": {
          "line": 290,
          "column": 61
        },
        "end": {
          "line": 290,
          "column": 69
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 9296,
      "end": 9297,
      "loc": {
        "start": {
          "line": 290,
          "column": 69
        },
        "end": {
          "line": 290,
          "column": 70
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "gte",
      "start": 9297,
      "end": 9300,
      "loc": {
        "start": {
          "line": 290,
          "column": 70
        },
        "end": {
          "line": 290,
          "column": 73
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 9300,
      "end": 9301,
      "loc": {
        "start": {
          "line": 290,
          "column": 73
        },
        "end": {
          "line": 290,
          "column": 74
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 9301,
      "end": 9302,
      "loc": {
        "start": {
          "line": 290,
          "column": 74
        },
        "end": {
          "line": 290,
          "column": 75
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.intersect](http://emberjs.com/api/classes/Ember.computed.html#method_intersect)\n *\n * A computed property which returns a new array with all the duplicated\n * elements from two or more dependent arrays.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { intersect } from 'ember-decorators/object/computed';\n *\n * export default class FoodListComponent extends Component {\n *   likes = A([ 'tacos', 'puppies', 'pizza' ]);\n *   foods = A(['tacos', 'pizza']);\n *\n *   @intersect('likes', 'foods') favoriteFoods; // ['tacos', 'pizza']\n * }\n * ```\n *\n * @function\n * @param {...String} dependentKeys - Keys of the arrays to intersect\n ",
      "start": 9304,
      "end": 10043,
      "loc": {
        "start": {
          "line": 292,
          "column": 0
        },
        "end": {
          "line": 313,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 10044,
      "end": 10050,
      "loc": {
        "start": {
          "line": 314,
          "column": 0
        },
        "end": {
          "line": 314,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "const",
        "keyword": "const",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "const",
      "start": 10051,
      "end": 10056,
      "loc": {
        "start": {
          "line": 314,
          "column": 7
        },
        "end": {
          "line": 314,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "intersect",
      "start": 10057,
      "end": 10066,
      "loc": {
        "start": {
          "line": 314,
          "column": 13
        },
        "end": {
          "line": 314,
          "column": 22
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 10067,
      "end": 10068,
      "loc": {
        "start": {
          "line": 314,
          "column": 23
        },
        "end": {
          "line": 314,
          "column": 24
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "decoratedPropertyWithRequiredParams",
      "start": 10069,
      "end": 10104,
      "loc": {
        "start": {
          "line": 314,
          "column": 25
        },
        "end": {
          "line": 314,
          "column": 60
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 10104,
      "end": 10105,
      "loc": {
        "start": {
          "line": 314,
          "column": 60
        },
        "end": {
          "line": 314,
          "column": 61
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "Ember",
      "start": 10105,
      "end": 10110,
      "loc": {
        "start": {
          "line": 314,
          "column": 61
        },
        "end": {
          "line": 314,
          "column": 66
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 10110,
      "end": 10111,
      "loc": {
        "start": {
          "line": 314,
          "column": 66
        },
        "end": {
          "line": 314,
          "column": 67
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "computed",
      "start": 10111,
      "end": 10119,
      "loc": {
        "start": {
          "line": 314,
          "column": 67
        },
        "end": {
          "line": 314,
          "column": 75
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 10119,
      "end": 10120,
      "loc": {
        "start": {
          "line": 314,
          "column": 75
        },
        "end": {
          "line": 314,
          "column": 76
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "intersect",
      "start": 10120,
      "end": 10129,
      "loc": {
        "start": {
          "line": 314,
          "column": 76
        },
        "end": {
          "line": 314,
          "column": 85
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 10129,
      "end": 10130,
      "loc": {
        "start": {
          "line": 314,
          "column": 85
        },
        "end": {
          "line": 314,
          "column": 86
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 10130,
      "end": 10131,
      "loc": {
        "start": {
          "line": 314,
          "column": 86
        },
        "end": {
          "line": 314,
          "column": 87
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.lt](http://emberjs.com/api/classes/Ember.computed.html#method_lt)\n *\n * A computed property that returns `true` if the provided dependent property\n * is less than the provided value.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { lt } from 'ember-decorators/object/computed';\n *\n * export default class DogPartyComponent extends Component {\n *   totalDogs = 3;\n *\n *   @lt('totalDogs', 10) isDogParty; // true\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to compare\n * @param {Number} value - Value to compare against\n ",
      "start": 10133,
      "end": 10766,
      "loc": {
        "start": {
          "line": 316,
          "column": 0
        },
        "end": {
          "line": 336,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 10767,
      "end": 10773,
      "loc": {
        "start": {
          "line": 337,
          "column": 0
        },
        "end": {
          "line": 337,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "const",
        "keyword": "const",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "const",
      "start": 10774,
      "end": 10779,
      "loc": {
        "start": {
          "line": 337,
          "column": 7
        },
        "end": {
          "line": 337,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "lt",
      "start": 10780,
      "end": 10782,
      "loc": {
        "start": {
          "line": 337,
          "column": 13
        },
        "end": {
          "line": 337,
          "column": 15
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 10783,
      "end": 10784,
      "loc": {
        "start": {
          "line": 337,
          "column": 16
        },
        "end": {
          "line": 337,
          "column": 17
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "decoratedPropertyWithRequiredParams",
      "start": 10785,
      "end": 10820,
      "loc": {
        "start": {
          "line": 337,
          "column": 18
        },
        "end": {
          "line": 337,
          "column": 53
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 10820,
      "end": 10821,
      "loc": {
        "start": {
          "line": 337,
          "column": 53
        },
        "end": {
          "line": 337,
          "column": 54
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "Ember",
      "start": 10821,
      "end": 10826,
      "loc": {
        "start": {
          "line": 337,
          "column": 54
        },
        "end": {
          "line": 337,
          "column": 59
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 10826,
      "end": 10827,
      "loc": {
        "start": {
          "line": 337,
          "column": 59
        },
        "end": {
          "line": 337,
          "column": 60
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "computed",
      "start": 10827,
      "end": 10835,
      "loc": {
        "start": {
          "line": 337,
          "column": 60
        },
        "end": {
          "line": 337,
          "column": 68
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 10835,
      "end": 10836,
      "loc": {
        "start": {
          "line": 337,
          "column": 68
        },
        "end": {
          "line": 337,
          "column": 69
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "lt",
      "start": 10836,
      "end": 10838,
      "loc": {
        "start": {
          "line": 337,
          "column": 69
        },
        "end": {
          "line": 337,
          "column": 71
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 10838,
      "end": 10839,
      "loc": {
        "start": {
          "line": 337,
          "column": 71
        },
        "end": {
          "line": 337,
          "column": 72
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 10839,
      "end": 10840,
      "loc": {
        "start": {
          "line": 337,
          "column": 72
        },
        "end": {
          "line": 337,
          "column": 73
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.lte](http://emberjs.com/api/classes/Ember.computed.html#method_lte)\n *\n * A computed property that returns `true` if the provided dependent property\n * is less than or equal to the provided value.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { lte } from 'ember-decorators/object/computed';\n *\n * export default class PlayerListComponent extends Component {\n *   totalPlayers = 14;\n *\n *   @lte('totalPlayers', 14) hasEnoughPlayers; // true\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to compare\n * @param {Number} value - Value to compare against\n ",
      "start": 10842,
      "end": 11506,
      "loc": {
        "start": {
          "line": 339,
          "column": 0
        },
        "end": {
          "line": 359,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 11507,
      "end": 11513,
      "loc": {
        "start": {
          "line": 360,
          "column": 0
        },
        "end": {
          "line": 360,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "const",
        "keyword": "const",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "const",
      "start": 11514,
      "end": 11519,
      "loc": {
        "start": {
          "line": 360,
          "column": 7
        },
        "end": {
          "line": 360,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "lte",
      "start": 11520,
      "end": 11523,
      "loc": {
        "start": {
          "line": 360,
          "column": 13
        },
        "end": {
          "line": 360,
          "column": 16
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 11524,
      "end": 11525,
      "loc": {
        "start": {
          "line": 360,
          "column": 17
        },
        "end": {
          "line": 360,
          "column": 18
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "decoratedPropertyWithRequiredParams",
      "start": 11526,
      "end": 11561,
      "loc": {
        "start": {
          "line": 360,
          "column": 19
        },
        "end": {
          "line": 360,
          "column": 54
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 11561,
      "end": 11562,
      "loc": {
        "start": {
          "line": 360,
          "column": 54
        },
        "end": {
          "line": 360,
          "column": 55
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "Ember",
      "start": 11562,
      "end": 11567,
      "loc": {
        "start": {
          "line": 360,
          "column": 55
        },
        "end": {
          "line": 360,
          "column": 60
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 11567,
      "end": 11568,
      "loc": {
        "start": {
          "line": 360,
          "column": 60
        },
        "end": {
          "line": 360,
          "column": 61
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "computed",
      "start": 11568,
      "end": 11576,
      "loc": {
        "start": {
          "line": 360,
          "column": 61
        },
        "end": {
          "line": 360,
          "column": 69
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 11576,
      "end": 11577,
      "loc": {
        "start": {
          "line": 360,
          "column": 69
        },
        "end": {
          "line": 360,
          "column": 70
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "lte",
      "start": 11577,
      "end": 11580,
      "loc": {
        "start": {
          "line": 360,
          "column": 70
        },
        "end": {
          "line": 360,
          "column": 73
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 11580,
      "end": 11581,
      "loc": {
        "start": {
          "line": 360,
          "column": 73
        },
        "end": {
          "line": 360,
          "column": 74
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 11581,
      "end": 11582,
      "loc": {
        "start": {
          "line": 360,
          "column": 74
        },
        "end": {
          "line": 360,
          "column": 75
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.map](http://emberjs.com/api/classes/Ember.computed.html#method_map)\n *\n * Returns an array mapped via the callback\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { map } from 'ember-decorators/object/computed';\n *\n * export default class ChoresListComponent extends Component {\n *   chores = A(['clean', 'write more unit tests']);\n *\n *   @map('chores')\n *   loudChores(chore, index) {\n *     return chore.toUpperCase() + '!';\n *   } // ['CLEAN!', 'WRITE MORE UNIT TESTS!']\n *\n *   // alternative syntax:\n *\n *   @map('chores', function(chore, index) {\n *     return chore.toUpperCase() + '!';\n *   }) loudChores; // ['CLEAN!', 'WRITE MORE UNIT TESTS!']\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the array to map over\n * @param {Function(item: Any, index: Number): Any} callback - Function to map over the array\n ",
      "start": 11584,
      "end": 12536,
      "loc": {
        "start": {
          "line": 362,
          "column": 0
        },
        "end": {
          "line": 391,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 12537,
      "end": 12543,
      "loc": {
        "start": {
          "line": 392,
          "column": 0
        },
        "end": {
          "line": 392,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "const",
        "keyword": "const",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "const",
      "start": 12544,
      "end": 12549,
      "loc": {
        "start": {
          "line": 392,
          "column": 7
        },
        "end": {
          "line": 392,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "map",
      "start": 12550,
      "end": 12553,
      "loc": {
        "start": {
          "line": 392,
          "column": 13
        },
        "end": {
          "line": 392,
          "column": 16
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 12554,
      "end": 12555,
      "loc": {
        "start": {
          "line": 392,
          "column": 17
        },
        "end": {
          "line": 392,
          "column": 18
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "decoratedPropertyWithOptionalCallback",
      "start": 12556,
      "end": 12593,
      "loc": {
        "start": {
          "line": 392,
          "column": 19
        },
        "end": {
          "line": 392,
          "column": 56
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 12593,
      "end": 12594,
      "loc": {
        "start": {
          "line": 392,
          "column": 56
        },
        "end": {
          "line": 392,
          "column": 57
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "Ember",
      "start": 12594,
      "end": 12599,
      "loc": {
        "start": {
          "line": 392,
          "column": 57
        },
        "end": {
          "line": 392,
          "column": 62
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 12599,
      "end": 12600,
      "loc": {
        "start": {
          "line": 392,
          "column": 62
        },
        "end": {
          "line": 392,
          "column": 63
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "computed",
      "start": 12600,
      "end": 12608,
      "loc": {
        "start": {
          "line": 392,
          "column": 63
        },
        "end": {
          "line": 392,
          "column": 71
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 12608,
      "end": 12609,
      "loc": {
        "start": {
          "line": 392,
          "column": 71
        },
        "end": {
          "line": 392,
          "column": 72
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "map",
      "start": 12609,
      "end": 12612,
      "loc": {
        "start": {
          "line": 392,
          "column": 72
        },
        "end": {
          "line": 392,
          "column": 75
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 12612,
      "end": 12613,
      "loc": {
        "start": {
          "line": 392,
          "column": 75
        },
        "end": {
          "line": 392,
          "column": 76
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 12613,
      "end": 12614,
      "loc": {
        "start": {
          "line": 392,
          "column": 76
        },
        "end": {
          "line": 392,
          "column": 77
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.mapBy](http://emberjs.com/api/classes/Ember.computed.html#method_mapBy)\n *\n * Returns an array mapped to the specified key.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { mapBy } from 'ember-decorators/object/computed';\n *\n * export default class PeopleListComponent extends Component {\n *   people = A([\n *     {name: \"George\", age: 5},\n *     {name: \"Stella\", age: 10},\n *     {name: \"Violet\", age: 7}\n *   ]);\n *\n *   @mapBy('people', 'age') ages; // [5, 10, 7]\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the array to map over\n * @param {String} propertyKey - Property of the array items to map by\n ",
      "start": 12616,
      "end": 13358,
      "loc": {
        "start": {
          "line": 394,
          "column": 0
        },
        "end": {
          "line": 418,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 13359,
      "end": 13365,
      "loc": {
        "start": {
          "line": 419,
          "column": 0
        },
        "end": {
          "line": 419,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "const",
        "keyword": "const",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "const",
      "start": 13366,
      "end": 13371,
      "loc": {
        "start": {
          "line": 419,
          "column": 7
        },
        "end": {
          "line": 419,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "mapBy",
      "start": 13372,
      "end": 13377,
      "loc": {
        "start": {
          "line": 419,
          "column": 13
        },
        "end": {
          "line": 419,
          "column": 18
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 13378,
      "end": 13379,
      "loc": {
        "start": {
          "line": 419,
          "column": 19
        },
        "end": {
          "line": 419,
          "column": 20
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "decoratedPropertyWithRequiredParams",
      "start": 13380,
      "end": 13415,
      "loc": {
        "start": {
          "line": 419,
          "column": 21
        },
        "end": {
          "line": 419,
          "column": 56
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 13415,
      "end": 13416,
      "loc": {
        "start": {
          "line": 419,
          "column": 56
        },
        "end": {
          "line": 419,
          "column": 57
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "Ember",
      "start": 13416,
      "end": 13421,
      "loc": {
        "start": {
          "line": 419,
          "column": 57
        },
        "end": {
          "line": 419,
          "column": 62
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 13421,
      "end": 13422,
      "loc": {
        "start": {
          "line": 419,
          "column": 62
        },
        "end": {
          "line": 419,
          "column": 63
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "computed",
      "start": 13422,
      "end": 13430,
      "loc": {
        "start": {
          "line": 419,
          "column": 63
        },
        "end": {
          "line": 419,
          "column": 71
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 13430,
      "end": 13431,
      "loc": {
        "start": {
          "line": 419,
          "column": 71
        },
        "end": {
          "line": 419,
          "column": 72
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "mapBy",
      "start": 13431,
      "end": 13436,
      "loc": {
        "start": {
          "line": 419,
          "column": 72
        },
        "end": {
          "line": 419,
          "column": 77
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 13436,
      "end": 13437,
      "loc": {
        "start": {
          "line": 419,
          "column": 77
        },
        "end": {
          "line": 419,
          "column": 78
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 13437,
      "end": 13438,
      "loc": {
        "start": {
          "line": 419,
          "column": 78
        },
        "end": {
          "line": 419,
          "column": 79
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.match](http://emberjs.com/api/classes/Ember.computed.html#method_match)\n *\n * A computed property which matches the original value for the dependent\n * property against a given RegExp, returning `true` if they values matches\n * the RegExp and `false` if it does not.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { match } from 'ember-decorators/object/computed';\n *\n * export default class IsEmailValidComponent extends Component {\n *   email = 'tomster@emberjs.com';\n *\n *   @match('email', /^.+@.+\\..+$/) validEmail;\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - The property to match\n * @param {RegExp} pattern - The pattern to match against\n ",
      "start": 13440,
      "end": 14178,
      "loc": {
        "start": {
          "line": 421,
          "column": 0
        },
        "end": {
          "line": 442,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 14179,
      "end": 14185,
      "loc": {
        "start": {
          "line": 443,
          "column": 0
        },
        "end": {
          "line": 443,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "const",
        "keyword": "const",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "const",
      "start": 14186,
      "end": 14191,
      "loc": {
        "start": {
          "line": 443,
          "column": 7
        },
        "end": {
          "line": 443,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "match",
      "start": 14192,
      "end": 14197,
      "loc": {
        "start": {
          "line": 443,
          "column": 13
        },
        "end": {
          "line": 443,
          "column": 18
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 14198,
      "end": 14199,
      "loc": {
        "start": {
          "line": 443,
          "column": 19
        },
        "end": {
          "line": 443,
          "column": 20
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "decoratedPropertyWithRequiredParams",
      "start": 14200,
      "end": 14235,
      "loc": {
        "start": {
          "line": 443,
          "column": 21
        },
        "end": {
          "line": 443,
          "column": 56
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 14235,
      "end": 14236,
      "loc": {
        "start": {
          "line": 443,
          "column": 56
        },
        "end": {
          "line": 443,
          "column": 57
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "Ember",
      "start": 14236,
      "end": 14241,
      "loc": {
        "start": {
          "line": 443,
          "column": 57
        },
        "end": {
          "line": 443,
          "column": 62
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 14241,
      "end": 14242,
      "loc": {
        "start": {
          "line": 443,
          "column": 62
        },
        "end": {
          "line": 443,
          "column": 63
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "computed",
      "start": 14242,
      "end": 14250,
      "loc": {
        "start": {
          "line": 443,
          "column": 63
        },
        "end": {
          "line": 443,
          "column": 71
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 14250,
      "end": 14251,
      "loc": {
        "start": {
          "line": 443,
          "column": 71
        },
        "end": {
          "line": 443,
          "column": 72
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "match",
      "start": 14251,
      "end": 14256,
      "loc": {
        "start": {
          "line": 443,
          "column": 72
        },
        "end": {
          "line": 443,
          "column": 77
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 14256,
      "end": 14257,
      "loc": {
        "start": {
          "line": 443,
          "column": 77
        },
        "end": {
          "line": 443,
          "column": 78
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 14257,
      "end": 14258,
      "loc": {
        "start": {
          "line": 443,
          "column": 78
        },
        "end": {
          "line": 443,
          "column": 79
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.max](http://emberjs.com/api/classes/Ember.computed.html#method_max)\n *\n * A computed property that calculates the maximum value in the dependent\n * array. This will return `-Infinity` when the dependent array is empty.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { max } from 'ember-decorators/object/computed';\n *\n * export default class MaxValueComponent extends Component {\n *   values = A([1, 2, 5, 10]);\n *\n *   @max('values') maxValue; // 10\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the array to find the max value of\n ",
      "start": 14260,
      "end": 14928,
      "loc": {
        "start": {
          "line": 445,
          "column": 0
        },
        "end": {
          "line": 465,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 14929,
      "end": 14935,
      "loc": {
        "start": {
          "line": 466,
          "column": 0
        },
        "end": {
          "line": 466,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "const",
        "keyword": "const",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "const",
      "start": 14936,
      "end": 14941,
      "loc": {
        "start": {
          "line": 466,
          "column": 7
        },
        "end": {
          "line": 466,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "max",
      "start": 14942,
      "end": 14945,
      "loc": {
        "start": {
          "line": 466,
          "column": 13
        },
        "end": {
          "line": 466,
          "column": 16
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 14946,
      "end": 14947,
      "loc": {
        "start": {
          "line": 466,
          "column": 17
        },
        "end": {
          "line": 466,
          "column": 18
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "decoratedPropertyWithRequiredParams",
      "start": 14948,
      "end": 14983,
      "loc": {
        "start": {
          "line": 466,
          "column": 19
        },
        "end": {
          "line": 466,
          "column": 54
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 14983,
      "end": 14984,
      "loc": {
        "start": {
          "line": 466,
          "column": 54
        },
        "end": {
          "line": 466,
          "column": 55
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "Ember",
      "start": 14984,
      "end": 14989,
      "loc": {
        "start": {
          "line": 466,
          "column": 55
        },
        "end": {
          "line": 466,
          "column": 60
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 14989,
      "end": 14990,
      "loc": {
        "start": {
          "line": 466,
          "column": 60
        },
        "end": {
          "line": 466,
          "column": 61
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "computed",
      "start": 14990,
      "end": 14998,
      "loc": {
        "start": {
          "line": 466,
          "column": 61
        },
        "end": {
          "line": 466,
          "column": 69
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 14998,
      "end": 14999,
      "loc": {
        "start": {
          "line": 466,
          "column": 69
        },
        "end": {
          "line": 466,
          "column": 70
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "max",
      "start": 14999,
      "end": 15002,
      "loc": {
        "start": {
          "line": 466,
          "column": 70
        },
        "end": {
          "line": 466,
          "column": 73
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 15002,
      "end": 15003,
      "loc": {
        "start": {
          "line": 466,
          "column": 73
        },
        "end": {
          "line": 466,
          "column": 74
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 15003,
      "end": 15004,
      "loc": {
        "start": {
          "line": 466,
          "column": 74
        },
        "end": {
          "line": 466,
          "column": 75
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.min](http://emberjs.com/api/classes/Ember.computed.html#method_min)\n *\n * A computed property that calculates the minimum value in the dependent\n * array. This will return `Infinity` when the dependent array is empty.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { min } from 'ember-decorators/object/computed';\n *\n * export default class MinValueComponent extends Component {\n *   values = A([1, 2, 5, 10]);\n *\n *   @min('values') minValue; // 1\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the array to find the max value of\n ",
      "start": 15006,
      "end": 15672,
      "loc": {
        "start": {
          "line": 468,
          "column": 0
        },
        "end": {
          "line": 488,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 15673,
      "end": 15679,
      "loc": {
        "start": {
          "line": 489,
          "column": 0
        },
        "end": {
          "line": 489,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "const",
        "keyword": "const",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "const",
      "start": 15680,
      "end": 15685,
      "loc": {
        "start": {
          "line": 489,
          "column": 7
        },
        "end": {
          "line": 489,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "min",
      "start": 15686,
      "end": 15689,
      "loc": {
        "start": {
          "line": 489,
          "column": 13
        },
        "end": {
          "line": 489,
          "column": 16
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 15690,
      "end": 15691,
      "loc": {
        "start": {
          "line": 489,
          "column": 17
        },
        "end": {
          "line": 489,
          "column": 18
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "decoratedPropertyWithRequiredParams",
      "start": 15692,
      "end": 15727,
      "loc": {
        "start": {
          "line": 489,
          "column": 19
        },
        "end": {
          "line": 489,
          "column": 54
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 15727,
      "end": 15728,
      "loc": {
        "start": {
          "line": 489,
          "column": 54
        },
        "end": {
          "line": 489,
          "column": 55
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "Ember",
      "start": 15728,
      "end": 15733,
      "loc": {
        "start": {
          "line": 489,
          "column": 55
        },
        "end": {
          "line": 489,
          "column": 60
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 15733,
      "end": 15734,
      "loc": {
        "start": {
          "line": 489,
          "column": 60
        },
        "end": {
          "line": 489,
          "column": 61
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "computed",
      "start": 15734,
      "end": 15742,
      "loc": {
        "start": {
          "line": 489,
          "column": 61
        },
        "end": {
          "line": 489,
          "column": 69
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 15742,
      "end": 15743,
      "loc": {
        "start": {
          "line": 489,
          "column": 69
        },
        "end": {
          "line": 489,
          "column": 70
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "min",
      "start": 15743,
      "end": 15746,
      "loc": {
        "start": {
          "line": 489,
          "column": 70
        },
        "end": {
          "line": 489,
          "column": 73
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 15746,
      "end": 15747,
      "loc": {
        "start": {
          "line": 489,
          "column": 73
        },
        "end": {
          "line": 489,
          "column": 74
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 15747,
      "end": 15748,
      "loc": {
        "start": {
          "line": 489,
          "column": 74
        },
        "end": {
          "line": 489,
          "column": 75
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.none](http://emberjs.com/api/classes/Ember.computed.html#method_none)\n *\n * A computed property that returns true if the value of the dependent property\n * is null or undefined. This avoids errors from JSLint complaining about use\n * of `==`, which can be technically confusing.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { none } from 'ember-decorators/object/computed';\n *\n * export default class NameDisplayComponent extends Component {\n *   firstName = null;\n *\n *   @none('firstName') isNameless; // true unless firstName is defined\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to check\n ",
      "start": 15750,
      "end": 16459,
      "loc": {
        "start": {
          "line": 491,
          "column": 0
        },
        "end": {
          "line": 511,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 16460,
      "end": 16466,
      "loc": {
        "start": {
          "line": 512,
          "column": 0
        },
        "end": {
          "line": 512,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "const",
        "keyword": "const",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "const",
      "start": 16467,
      "end": 16472,
      "loc": {
        "start": {
          "line": 512,
          "column": 7
        },
        "end": {
          "line": 512,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "none",
      "start": 16473,
      "end": 16477,
      "loc": {
        "start": {
          "line": 512,
          "column": 13
        },
        "end": {
          "line": 512,
          "column": 17
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 16478,
      "end": 16479,
      "loc": {
        "start": {
          "line": 512,
          "column": 18
        },
        "end": {
          "line": 512,
          "column": 19
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "decoratedPropertyWithRequiredParams",
      "start": 16480,
      "end": 16515,
      "loc": {
        "start": {
          "line": 512,
          "column": 20
        },
        "end": {
          "line": 512,
          "column": 55
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 16515,
      "end": 16516,
      "loc": {
        "start": {
          "line": 512,
          "column": 55
        },
        "end": {
          "line": 512,
          "column": 56
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "Ember",
      "start": 16516,
      "end": 16521,
      "loc": {
        "start": {
          "line": 512,
          "column": 56
        },
        "end": {
          "line": 512,
          "column": 61
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 16521,
      "end": 16522,
      "loc": {
        "start": {
          "line": 512,
          "column": 61
        },
        "end": {
          "line": 512,
          "column": 62
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "computed",
      "start": 16522,
      "end": 16530,
      "loc": {
        "start": {
          "line": 512,
          "column": 62
        },
        "end": {
          "line": 512,
          "column": 70
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 16530,
      "end": 16531,
      "loc": {
        "start": {
          "line": 512,
          "column": 70
        },
        "end": {
          "line": 512,
          "column": 71
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "none",
      "start": 16531,
      "end": 16535,
      "loc": {
        "start": {
          "line": 512,
          "column": 71
        },
        "end": {
          "line": 512,
          "column": 75
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 16535,
      "end": 16536,
      "loc": {
        "start": {
          "line": 512,
          "column": 75
        },
        "end": {
          "line": 512,
          "column": 76
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 16536,
      "end": 16537,
      "loc": {
        "start": {
          "line": 512,
          "column": 76
        },
        "end": {
          "line": 512,
          "column": 77
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.not](http://emberjs.com/api/classes/Ember.computed.html#method_not)\n *\n * A computed property that returns the inverse boolean value of the original\n * value for the dependent property.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { not } from 'ember-decorators/object/computed';\n *\n * export default class UserInfoComponent extends Component {\n *   loggedIn = false;\n *\n *   @not('loggedIn') isAnonymous; // true\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to `not`\n ",
      "start": 16539,
      "end": 17122,
      "loc": {
        "start": {
          "line": 514,
          "column": 0
        },
        "end": {
          "line": 533,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 17123,
      "end": 17129,
      "loc": {
        "start": {
          "line": 534,
          "column": 0
        },
        "end": {
          "line": 534,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "const",
        "keyword": "const",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "const",
      "start": 17130,
      "end": 17135,
      "loc": {
        "start": {
          "line": 534,
          "column": 7
        },
        "end": {
          "line": 534,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "not",
      "start": 17136,
      "end": 17139,
      "loc": {
        "start": {
          "line": 534,
          "column": 13
        },
        "end": {
          "line": 534,
          "column": 16
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 17140,
      "end": 17141,
      "loc": {
        "start": {
          "line": 534,
          "column": 17
        },
        "end": {
          "line": 534,
          "column": 18
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "decoratedPropertyWithRequiredParams",
      "start": 17142,
      "end": 17177,
      "loc": {
        "start": {
          "line": 534,
          "column": 19
        },
        "end": {
          "line": 534,
          "column": 54
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 17177,
      "end": 17178,
      "loc": {
        "start": {
          "line": 534,
          "column": 54
        },
        "end": {
          "line": 534,
          "column": 55
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "Ember",
      "start": 17178,
      "end": 17183,
      "loc": {
        "start": {
          "line": 534,
          "column": 55
        },
        "end": {
          "line": 534,
          "column": 60
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 17183,
      "end": 17184,
      "loc": {
        "start": {
          "line": 534,
          "column": 60
        },
        "end": {
          "line": 534,
          "column": 61
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "computed",
      "start": 17184,
      "end": 17192,
      "loc": {
        "start": {
          "line": 534,
          "column": 61
        },
        "end": {
          "line": 534,
          "column": 69
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 17192,
      "end": 17193,
      "loc": {
        "start": {
          "line": 534,
          "column": 69
        },
        "end": {
          "line": 534,
          "column": 70
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "not",
      "start": 17193,
      "end": 17196,
      "loc": {
        "start": {
          "line": 534,
          "column": 70
        },
        "end": {
          "line": 534,
          "column": 73
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 17196,
      "end": 17197,
      "loc": {
        "start": {
          "line": 534,
          "column": 73
        },
        "end": {
          "line": 534,
          "column": 74
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 17197,
      "end": 17198,
      "loc": {
        "start": {
          "line": 534,
          "column": 74
        },
        "end": {
          "line": 534,
          "column": 75
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.notEmpty](http://emberjs.com/api/classes/Ember.computed.html#method_notEmpty)\n *\n * A computed property that returns `true` if the value of the dependent\n * property is NOT null, an empty string, empty array, or empty function.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { notEmpty } from 'ember-decorators/object/computed';\n *\n * export default class GroceryBagComponent extends Component {\n *   groceryBag = A(['milk', 'eggs', 'apples']);\n *\n *   @notEmpty('groceryBag') hasGroceriesToPutAway; // true\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to check\n ",
      "start": 17200,
      "end": 17912,
      "loc": {
        "start": {
          "line": 536,
          "column": 0
        },
        "end": {
          "line": 556,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 17913,
      "end": 17919,
      "loc": {
        "start": {
          "line": 557,
          "column": 0
        },
        "end": {
          "line": 557,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "const",
        "keyword": "const",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "const",
      "start": 17920,
      "end": 17925,
      "loc": {
        "start": {
          "line": 557,
          "column": 7
        },
        "end": {
          "line": 557,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "notEmpty",
      "start": 17926,
      "end": 17934,
      "loc": {
        "start": {
          "line": 557,
          "column": 13
        },
        "end": {
          "line": 557,
          "column": 21
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 17935,
      "end": 17936,
      "loc": {
        "start": {
          "line": 557,
          "column": 22
        },
        "end": {
          "line": 557,
          "column": 23
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "decoratedPropertyWithRequiredParams",
      "start": 17937,
      "end": 17972,
      "loc": {
        "start": {
          "line": 557,
          "column": 24
        },
        "end": {
          "line": 557,
          "column": 59
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 17972,
      "end": 17973,
      "loc": {
        "start": {
          "line": 557,
          "column": 59
        },
        "end": {
          "line": 557,
          "column": 60
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "Ember",
      "start": 17973,
      "end": 17978,
      "loc": {
        "start": {
          "line": 557,
          "column": 60
        },
        "end": {
          "line": 557,
          "column": 65
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 17978,
      "end": 17979,
      "loc": {
        "start": {
          "line": 557,
          "column": 65
        },
        "end": {
          "line": 557,
          "column": 66
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "computed",
      "start": 17979,
      "end": 17987,
      "loc": {
        "start": {
          "line": 557,
          "column": 66
        },
        "end": {
          "line": 557,
          "column": 74
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 17987,
      "end": 17988,
      "loc": {
        "start": {
          "line": 557,
          "column": 74
        },
        "end": {
          "line": 557,
          "column": 75
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "notEmpty",
      "start": 17988,
      "end": 17996,
      "loc": {
        "start": {
          "line": 557,
          "column": 75
        },
        "end": {
          "line": 557,
          "column": 83
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 17996,
      "end": 17997,
      "loc": {
        "start": {
          "line": 557,
          "column": 83
        },
        "end": {
          "line": 557,
          "column": 84
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 17997,
      "end": 17998,
      "loc": {
        "start": {
          "line": 557,
          "column": 84
        },
        "end": {
          "line": 557,
          "column": 85
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.oneWay](http://emberjs.com/api/classes/Ember.computed.html#method_oneWay)\n *\n * Where `computed.alias` aliases `get` and `set`, and allows for bidirectional\n * data flow, `computed.oneWay` only provides an aliased `get`. The `set` will\n * not mutate the upstream property, rather causes the current property to\n * become the value set. This causes the downstream property to permanently\n * diverge from the upstream property.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { oneWay } from 'ember-decorators/object/computed';\n *\n * export default class UserProfileComponent extends Component {\n *   firstName = 'Joe';\n *\n *   @oneWay('firstName') originalName; // will always be 'Joe'\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to alias\n ",
      "start": 18000,
      "end": 18851,
      "loc": {
        "start": {
          "line": 559,
          "column": 0
        },
        "end": {
          "line": 581,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 18852,
      "end": 18858,
      "loc": {
        "start": {
          "line": 582,
          "column": 0
        },
        "end": {
          "line": 582,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "const",
        "keyword": "const",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "const",
      "start": 18859,
      "end": 18864,
      "loc": {
        "start": {
          "line": 582,
          "column": 7
        },
        "end": {
          "line": 582,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "oneWay",
      "start": 18865,
      "end": 18871,
      "loc": {
        "start": {
          "line": 582,
          "column": 13
        },
        "end": {
          "line": 582,
          "column": 19
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 18872,
      "end": 18873,
      "loc": {
        "start": {
          "line": 582,
          "column": 20
        },
        "end": {
          "line": 582,
          "column": 21
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "decoratedPropertyWithRequiredParams",
      "start": 18874,
      "end": 18909,
      "loc": {
        "start": {
          "line": 582,
          "column": 22
        },
        "end": {
          "line": 582,
          "column": 57
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 18909,
      "end": 18910,
      "loc": {
        "start": {
          "line": 582,
          "column": 57
        },
        "end": {
          "line": 582,
          "column": 58
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "Ember",
      "start": 18910,
      "end": 18915,
      "loc": {
        "start": {
          "line": 582,
          "column": 58
        },
        "end": {
          "line": 582,
          "column": 63
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 18915,
      "end": 18916,
      "loc": {
        "start": {
          "line": 582,
          "column": 63
        },
        "end": {
          "line": 582,
          "column": 64
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "computed",
      "start": 18916,
      "end": 18924,
      "loc": {
        "start": {
          "line": 582,
          "column": 64
        },
        "end": {
          "line": 582,
          "column": 72
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 18924,
      "end": 18925,
      "loc": {
        "start": {
          "line": 582,
          "column": 72
        },
        "end": {
          "line": 582,
          "column": 73
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "oneWay",
      "start": 18925,
      "end": 18931,
      "loc": {
        "start": {
          "line": 582,
          "column": 73
        },
        "end": {
          "line": 582,
          "column": 79
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 18931,
      "end": 18932,
      "loc": {
        "start": {
          "line": 582,
          "column": 79
        },
        "end": {
          "line": 582,
          "column": 80
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 18932,
      "end": 18933,
      "loc": {
        "start": {
          "line": 582,
          "column": 80
        },
        "end": {
          "line": 582,
          "column": 81
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.or](http://emberjs.com/api/classes/Ember.computed.html#method_or)\n *\n * A computed property which performs a logical or on the original values for\n * the provided dependent properties.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { or } from 'ember-decorators/object/computed';\n *\n * export default class OutfitFeaturesComponent extends Component {\n *   hasJacket = true;\n *   hasUmbrella = false;\n *\n *   @or('hasJacket', 'hasUmbrella') isReadyForRain; // true\n * }\n * ```\n *\n * @function\n * @param {...String} dependentKey - Key for the properties to `or`\n ",
      "start": 18935,
      "end": 19570,
      "loc": {
        "start": {
          "line": 584,
          "column": 0
        },
        "end": {
          "line": 604,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 19571,
      "end": 19577,
      "loc": {
        "start": {
          "line": 605,
          "column": 0
        },
        "end": {
          "line": 605,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "const",
        "keyword": "const",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "const",
      "start": 19578,
      "end": 19583,
      "loc": {
        "start": {
          "line": 605,
          "column": 7
        },
        "end": {
          "line": 605,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "or",
      "start": 19584,
      "end": 19586,
      "loc": {
        "start": {
          "line": 605,
          "column": 13
        },
        "end": {
          "line": 605,
          "column": 15
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 19587,
      "end": 19588,
      "loc": {
        "start": {
          "line": 605,
          "column": 16
        },
        "end": {
          "line": 605,
          "column": 17
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "decoratedPropertyWithRequiredParams",
      "start": 19589,
      "end": 19624,
      "loc": {
        "start": {
          "line": 605,
          "column": 18
        },
        "end": {
          "line": 605,
          "column": 53
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 19624,
      "end": 19625,
      "loc": {
        "start": {
          "line": 605,
          "column": 53
        },
        "end": {
          "line": 605,
          "column": 54
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "Ember",
      "start": 19625,
      "end": 19630,
      "loc": {
        "start": {
          "line": 605,
          "column": 54
        },
        "end": {
          "line": 605,
          "column": 59
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 19630,
      "end": 19631,
      "loc": {
        "start": {
          "line": 605,
          "column": 59
        },
        "end": {
          "line": 605,
          "column": 60
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "computed",
      "start": 19631,
      "end": 19639,
      "loc": {
        "start": {
          "line": 605,
          "column": 60
        },
        "end": {
          "line": 605,
          "column": 68
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 19639,
      "end": 19640,
      "loc": {
        "start": {
          "line": 605,
          "column": 68
        },
        "end": {
          "line": 605,
          "column": 69
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "or",
      "start": 19640,
      "end": 19642,
      "loc": {
        "start": {
          "line": 605,
          "column": 69
        },
        "end": {
          "line": 605,
          "column": 71
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 19642,
      "end": 19643,
      "loc": {
        "start": {
          "line": 605,
          "column": 71
        },
        "end": {
          "line": 605,
          "column": 72
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 19643,
      "end": 19644,
      "loc": {
        "start": {
          "line": 605,
          "column": 72
        },
        "end": {
          "line": 605,
          "column": 73
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.reads](http://emberjs.com/api/classes/Ember.computed.html#method_reads)\n *\n * This is a more semantically meaningful alias of `computed.oneWay`, whose\n * name is somewhat ambiguous as to which direction the data flows.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { reads } from 'ember-decorators/object/computed';\n *\n * export default class UserProfileComponent extends Component {\n *   first = 'Tomster';\n *\n *   @reads('first') firstName;\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key for the property to read\n ",
      "start": 19646,
      "end": 20256,
      "loc": {
        "start": {
          "line": 607,
          "column": 0
        },
        "end": {
          "line": 626,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 20257,
      "end": 20263,
      "loc": {
        "start": {
          "line": 627,
          "column": 0
        },
        "end": {
          "line": 627,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "const",
        "keyword": "const",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "const",
      "start": 20264,
      "end": 20269,
      "loc": {
        "start": {
          "line": 627,
          "column": 7
        },
        "end": {
          "line": 627,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "reads",
      "start": 20270,
      "end": 20275,
      "loc": {
        "start": {
          "line": 627,
          "column": 13
        },
        "end": {
          "line": 627,
          "column": 18
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 20276,
      "end": 20277,
      "loc": {
        "start": {
          "line": 627,
          "column": 19
        },
        "end": {
          "line": 627,
          "column": 20
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "decoratedPropertyWithRequiredParams",
      "start": 20278,
      "end": 20313,
      "loc": {
        "start": {
          "line": 627,
          "column": 21
        },
        "end": {
          "line": 627,
          "column": 56
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 20313,
      "end": 20314,
      "loc": {
        "start": {
          "line": 627,
          "column": 56
        },
        "end": {
          "line": 627,
          "column": 57
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "Ember",
      "start": 20314,
      "end": 20319,
      "loc": {
        "start": {
          "line": 627,
          "column": 57
        },
        "end": {
          "line": 627,
          "column": 62
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 20319,
      "end": 20320,
      "loc": {
        "start": {
          "line": 627,
          "column": 62
        },
        "end": {
          "line": 627,
          "column": 63
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "computed",
      "start": 20320,
      "end": 20328,
      "loc": {
        "start": {
          "line": 627,
          "column": 63
        },
        "end": {
          "line": 627,
          "column": 71
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 20328,
      "end": 20329,
      "loc": {
        "start": {
          "line": 627,
          "column": 71
        },
        "end": {
          "line": 627,
          "column": 72
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "reads",
      "start": 20329,
      "end": 20334,
      "loc": {
        "start": {
          "line": 627,
          "column": 72
        },
        "end": {
          "line": 627,
          "column": 77
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 20334,
      "end": 20335,
      "loc": {
        "start": {
          "line": 627,
          "column": 77
        },
        "end": {
          "line": 627,
          "column": 78
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 20335,
      "end": 20336,
      "loc": {
        "start": {
          "line": 627,
          "column": 78
        },
        "end": {
          "line": 627,
          "column": 79
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.setDiff](http://emberjs.com/api/classes/Ember.computed.html#method_setDiff)\n *\n * A computed property which returns a new array with all the properties from\n * the first dependent array that are not in the second dependent array.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { setDiff } from 'ember-decorators/object/computed';\n *\n * export default class FavoriteThingsComponent extends Component {\n *   likes = A([ 'tacos', 'puppies', 'pizza' ]);\n *   foods = A(['tacos', 'pizza']);\n *\n *   @setDiff('likes', 'foods') favoriteThingsThatArentFood; // ['puppies']\n * }\n * ```\n *\n * @function\n * @param {String} setAProperty - Keys for the first set\n * @param {String} setBProperty - Keys for the first set\n ",
      "start": 20338,
      "end": 21157,
      "loc": {
        "start": {
          "line": 629,
          "column": 0
        },
        "end": {
          "line": 651,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 21158,
      "end": 21164,
      "loc": {
        "start": {
          "line": 652,
          "column": 0
        },
        "end": {
          "line": 652,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "const",
        "keyword": "const",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "const",
      "start": 21165,
      "end": 21170,
      "loc": {
        "start": {
          "line": 652,
          "column": 7
        },
        "end": {
          "line": 652,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "setDiff",
      "start": 21171,
      "end": 21178,
      "loc": {
        "start": {
          "line": 652,
          "column": 13
        },
        "end": {
          "line": 652,
          "column": 20
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 21179,
      "end": 21180,
      "loc": {
        "start": {
          "line": 652,
          "column": 21
        },
        "end": {
          "line": 652,
          "column": 22
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "decoratedPropertyWithRequiredParams",
      "start": 21181,
      "end": 21216,
      "loc": {
        "start": {
          "line": 652,
          "column": 23
        },
        "end": {
          "line": 652,
          "column": 58
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 21216,
      "end": 21217,
      "loc": {
        "start": {
          "line": 652,
          "column": 58
        },
        "end": {
          "line": 652,
          "column": 59
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "Ember",
      "start": 21217,
      "end": 21222,
      "loc": {
        "start": {
          "line": 652,
          "column": 59
        },
        "end": {
          "line": 652,
          "column": 64
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 21222,
      "end": 21223,
      "loc": {
        "start": {
          "line": 652,
          "column": 64
        },
        "end": {
          "line": 652,
          "column": 65
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "computed",
      "start": 21223,
      "end": 21231,
      "loc": {
        "start": {
          "line": 652,
          "column": 65
        },
        "end": {
          "line": 652,
          "column": 73
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 21231,
      "end": 21232,
      "loc": {
        "start": {
          "line": 652,
          "column": 73
        },
        "end": {
          "line": 652,
          "column": 74
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "setDiff",
      "start": 21232,
      "end": 21239,
      "loc": {
        "start": {
          "line": 652,
          "column": 74
        },
        "end": {
          "line": 652,
          "column": 81
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 21239,
      "end": 21240,
      "loc": {
        "start": {
          "line": 652,
          "column": 81
        },
        "end": {
          "line": 652,
          "column": 82
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 21240,
      "end": 21241,
      "loc": {
        "start": {
          "line": 652,
          "column": 82
        },
        "end": {
          "line": 652,
          "column": 83
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.sort](http://emberjs.com/api/classes/Ember.computed.html#method_sort)\n *\n * A computed property which returns a new array with all the properties from\n * the first dependent array sorted based on a property or sort function.\n *\n *\n * The callback method you provide should have the following signature:\n *\n * ```javascript\n * function(itemA, itemB);\n * ```\n * - `itemA` the first item to compare.\n * - `itemB` the second item to compare.\n *\n * This function should return negative number (e.g. `-1`) when `itemA` should\n * come before `itemB`. It should return positive number (e.g. `1`) when\n * `itemA` should come after `itemB`. If the `itemA` and `itemB` are equal this\n * function should return `0`.\n *\n * Therefore, if this function is comparing some numeric values, simple\n * `itemA - itemB` or `itemA.get( 'foo' ) - itemB.get( 'foo' )` can be used\n * instead of series of `if`.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { sort } from 'ember-decorators/object/computed';\n *\n * export default class SortNamesComponent extends Component {\n *   names = A([{name:'Link'},{name:'Zelda'},{name:'Ganon'},{name:'Navi'}]);\n *\n *   @sort('names')\n *   sortedNames(a, b){\n *     if (a.name > b.name) {\n *       return 1;\n *     } else if (a.name < b.name) {\n *       return -1;\n *     }\n *\n *     return 0;\n *   } // [{name:'Ganon'},{name:'Link'},{name:'Navi'},{name:'Zelda'}]\n *\n *   // alternative syntax:\n *\n *   @sort('names', function(a, b){\n *     if (a.name > b.name) {\n *       return 1;\n *     } else if (a.name < b.name) {\n *       return -1;\n *     }\n *\n *     return 0;\n *   }) sortedNames; // [{name:'Ganon'},{name:'Link'},{name:'Navi'},{name:'Zelda'}]\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - The key for the array that should be sorted\n * @param {Array<String>|Function(Any, Any): Number} sortDefinition - Sorting function or sort descriptor\n ",
      "start": 21243,
      "end": 23233,
      "loc": {
        "start": {
          "line": 654,
          "column": 0
        },
        "end": {
          "line": 714,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 23234,
      "end": 23240,
      "loc": {
        "start": {
          "line": 715,
          "column": 0
        },
        "end": {
          "line": 715,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "const",
        "keyword": "const",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "const",
      "start": 23241,
      "end": 23246,
      "loc": {
        "start": {
          "line": 715,
          "column": 7
        },
        "end": {
          "line": 715,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "sort",
      "start": 23247,
      "end": 23251,
      "loc": {
        "start": {
          "line": 715,
          "column": 13
        },
        "end": {
          "line": 715,
          "column": 17
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 23252,
      "end": 23253,
      "loc": {
        "start": {
          "line": 715,
          "column": 18
        },
        "end": {
          "line": 715,
          "column": 19
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "decoratedPropertyWithEitherCallbackOrProperty",
      "start": 23254,
      "end": 23299,
      "loc": {
        "start": {
          "line": 715,
          "column": 20
        },
        "end": {
          "line": 715,
          "column": 65
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 23299,
      "end": 23300,
      "loc": {
        "start": {
          "line": 715,
          "column": 65
        },
        "end": {
          "line": 715,
          "column": 66
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "Ember",
      "start": 23300,
      "end": 23305,
      "loc": {
        "start": {
          "line": 715,
          "column": 66
        },
        "end": {
          "line": 715,
          "column": 71
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 23305,
      "end": 23306,
      "loc": {
        "start": {
          "line": 715,
          "column": 71
        },
        "end": {
          "line": 715,
          "column": 72
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "computed",
      "start": 23306,
      "end": 23314,
      "loc": {
        "start": {
          "line": 715,
          "column": 72
        },
        "end": {
          "line": 715,
          "column": 80
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 23314,
      "end": 23315,
      "loc": {
        "start": {
          "line": 715,
          "column": 80
        },
        "end": {
          "line": 715,
          "column": 81
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "sort",
      "start": 23315,
      "end": 23319,
      "loc": {
        "start": {
          "line": 715,
          "column": 81
        },
        "end": {
          "line": 715,
          "column": 85
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 23319,
      "end": 23320,
      "loc": {
        "start": {
          "line": 715,
          "column": 85
        },
        "end": {
          "line": 715,
          "column": 86
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 23320,
      "end": 23321,
      "loc": {
        "start": {
          "line": 715,
          "column": 86
        },
        "end": {
          "line": 715,
          "column": 87
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.sum](http://emberjs.com/api/classes/Ember.computed.html#method_sum)\n *\n * A computed property that returns the sum of the value in the dependent\n * array.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { sum } from 'ember-decorators/object/computed';\n *\n * export default class SumValuesComponent extends Component {\n *   values = A([1, 2, 3]);\n *\n *   @sum('values') total; // 6\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key of the array to sum up\n ",
      "start": 23323,
      "end": 23904,
      "loc": {
        "start": {
          "line": 717,
          "column": 0
        },
        "end": {
          "line": 737,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 23905,
      "end": 23911,
      "loc": {
        "start": {
          "line": 738,
          "column": 0
        },
        "end": {
          "line": 738,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "const",
        "keyword": "const",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "const",
      "start": 23912,
      "end": 23917,
      "loc": {
        "start": {
          "line": 738,
          "column": 7
        },
        "end": {
          "line": 738,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "sum",
      "start": 23918,
      "end": 23921,
      "loc": {
        "start": {
          "line": 738,
          "column": 13
        },
        "end": {
          "line": 738,
          "column": 16
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 23922,
      "end": 23923,
      "loc": {
        "start": {
          "line": 738,
          "column": 17
        },
        "end": {
          "line": 738,
          "column": 18
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "decoratedPropertyWithRequiredParams",
      "start": 23924,
      "end": 23959,
      "loc": {
        "start": {
          "line": 738,
          "column": 19
        },
        "end": {
          "line": 738,
          "column": 54
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 23959,
      "end": 23960,
      "loc": {
        "start": {
          "line": 738,
          "column": 54
        },
        "end": {
          "line": 738,
          "column": 55
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "Ember",
      "start": 23960,
      "end": 23965,
      "loc": {
        "start": {
          "line": 738,
          "column": 55
        },
        "end": {
          "line": 738,
          "column": 60
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 23965,
      "end": 23966,
      "loc": {
        "start": {
          "line": 738,
          "column": 60
        },
        "end": {
          "line": 738,
          "column": 61
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "computed",
      "start": 23966,
      "end": 23974,
      "loc": {
        "start": {
          "line": 738,
          "column": 61
        },
        "end": {
          "line": 738,
          "column": 69
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 23974,
      "end": 23975,
      "loc": {
        "start": {
          "line": 738,
          "column": 69
        },
        "end": {
          "line": 738,
          "column": 70
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "sum",
      "start": 23975,
      "end": 23978,
      "loc": {
        "start": {
          "line": 738,
          "column": 70
        },
        "end": {
          "line": 738,
          "column": 73
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 23978,
      "end": 23979,
      "loc": {
        "start": {
          "line": 738,
          "column": 73
        },
        "end": {
          "line": 738,
          "column": 74
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 23979,
      "end": 23980,
      "loc": {
        "start": {
          "line": 738,
          "column": 74
        },
        "end": {
          "line": 738,
          "column": 75
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.union](http://emberjs.com/api/classes/Ember.computed.html#method_union)\n *\n * Alias for [union](http://emberjs.com/api/classes/Ember.computed.html#method_uniq).\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { union } from 'ember-decorators/object/computed';\n *\n * export default class LikesAndFoodsComponent extends Component {\n *   likes = A([ 'tacos', 'puppies', 'pizza' ]);\n *   foods = A(['tacos', 'pizza', 'ramen']);\n *\n *   @union('likes', 'foods') favorites; // ['tacos', 'puppies', 'pizza', 'ramen']\n * }\n * ```\n *\n * @function\n * @param {...String} dependentKeys - Keys of the arrays to union\n ",
      "start": 23982,
      "end": 24697,
      "loc": {
        "start": {
          "line": 740,
          "column": 0
        },
        "end": {
          "line": 760,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 24698,
      "end": 24704,
      "loc": {
        "start": {
          "line": 761,
          "column": 0
        },
        "end": {
          "line": 761,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "const",
        "keyword": "const",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "const",
      "start": 24705,
      "end": 24710,
      "loc": {
        "start": {
          "line": 761,
          "column": 7
        },
        "end": {
          "line": 761,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "union",
      "start": 24711,
      "end": 24716,
      "loc": {
        "start": {
          "line": 761,
          "column": 13
        },
        "end": {
          "line": 761,
          "column": 18
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 24717,
      "end": 24718,
      "loc": {
        "start": {
          "line": 761,
          "column": 19
        },
        "end": {
          "line": 761,
          "column": 20
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "decoratedPropertyWithRequiredParams",
      "start": 24719,
      "end": 24754,
      "loc": {
        "start": {
          "line": 761,
          "column": 21
        },
        "end": {
          "line": 761,
          "column": 56
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 24754,
      "end": 24755,
      "loc": {
        "start": {
          "line": 761,
          "column": 56
        },
        "end": {
          "line": 761,
          "column": 57
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "Ember",
      "start": 24755,
      "end": 24760,
      "loc": {
        "start": {
          "line": 761,
          "column": 57
        },
        "end": {
          "line": 761,
          "column": 62
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 24760,
      "end": 24761,
      "loc": {
        "start": {
          "line": 761,
          "column": 62
        },
        "end": {
          "line": 761,
          "column": 63
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "computed",
      "start": 24761,
      "end": 24769,
      "loc": {
        "start": {
          "line": 761,
          "column": 63
        },
        "end": {
          "line": 761,
          "column": 71
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 24769,
      "end": 24770,
      "loc": {
        "start": {
          "line": 761,
          "column": 71
        },
        "end": {
          "line": 761,
          "column": 72
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "union",
      "start": 24770,
      "end": 24775,
      "loc": {
        "start": {
          "line": 761,
          "column": 72
        },
        "end": {
          "line": 761,
          "column": 77
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 24775,
      "end": 24776,
      "loc": {
        "start": {
          "line": 761,
          "column": 77
        },
        "end": {
          "line": 761,
          "column": 78
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 24776,
      "end": 24777,
      "loc": {
        "start": {
          "line": 761,
          "column": 78
        },
        "end": {
          "line": 761,
          "column": 79
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.uniq](http://emberjs.com/api/classes/Ember.computed.html#method_uniq)\n *\n * A computed property which returns a new array with all the unique elements from one or more dependent arrays.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { uniq } from 'ember-decorators/object/computed';\n *\n * export default class FavoriteThingsComponent extends Component {\n *   likes = A([ 'tacos', 'puppies', 'pizza' ]);\n *   foods = A(['tacos', 'pizza', 'ramen']);\n *\n *   @uniq('likes', 'foods') favorites; // ['tacos', 'puppies', 'pizza', 'ramen']\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key of the array to uniq\n ",
      "start": 24779,
      "end": 25511,
      "loc": {
        "start": {
          "line": 763,
          "column": 0
        },
        "end": {
          "line": 783,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 25512,
      "end": 25518,
      "loc": {
        "start": {
          "line": 784,
          "column": 0
        },
        "end": {
          "line": 784,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "const",
        "keyword": "const",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "const",
      "start": 25519,
      "end": 25524,
      "loc": {
        "start": {
          "line": 784,
          "column": 7
        },
        "end": {
          "line": 784,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "uniq",
      "start": 25525,
      "end": 25529,
      "loc": {
        "start": {
          "line": 784,
          "column": 13
        },
        "end": {
          "line": 784,
          "column": 17
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 25530,
      "end": 25531,
      "loc": {
        "start": {
          "line": 784,
          "column": 18
        },
        "end": {
          "line": 784,
          "column": 19
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "decoratedPropertyWithRequiredParams",
      "start": 25532,
      "end": 25567,
      "loc": {
        "start": {
          "line": 784,
          "column": 20
        },
        "end": {
          "line": 784,
          "column": 55
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 25567,
      "end": 25568,
      "loc": {
        "start": {
          "line": 784,
          "column": 55
        },
        "end": {
          "line": 784,
          "column": 56
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "Ember",
      "start": 25568,
      "end": 25573,
      "loc": {
        "start": {
          "line": 784,
          "column": 56
        },
        "end": {
          "line": 784,
          "column": 61
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 25573,
      "end": 25574,
      "loc": {
        "start": {
          "line": 784,
          "column": 61
        },
        "end": {
          "line": 784,
          "column": 62
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "computed",
      "start": 25574,
      "end": 25582,
      "loc": {
        "start": {
          "line": 784,
          "column": 62
        },
        "end": {
          "line": 784,
          "column": 70
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 25582,
      "end": 25583,
      "loc": {
        "start": {
          "line": 784,
          "column": 70
        },
        "end": {
          "line": 784,
          "column": 71
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "uniq",
      "start": 25583,
      "end": 25587,
      "loc": {
        "start": {
          "line": 784,
          "column": 71
        },
        "end": {
          "line": 784,
          "column": 75
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 25587,
      "end": 25588,
      "loc": {
        "start": {
          "line": 784,
          "column": 75
        },
        "end": {
          "line": 784,
          "column": 76
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 25588,
      "end": 25589,
      "loc": {
        "start": {
          "line": 784,
          "column": 76
        },
        "end": {
          "line": 784,
          "column": 77
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Decorator that wraps [Ember.computed.uniqBy](http://emberjs.com/api/classes/Ember.computed.html#method_uniqBy)\n *\n * A computed property which returns a new array with all the unique elements\n * from an array, with uniqueness determined by a specific key.\n *\n * ```javascript\n * import Component from '@ember/component';\n * import { A } from '@ember/array';\n * import { uniqBy } from 'ember-decorators/object/computed';\n *\n * export default class FruitBowlComponent extends Component {\n *   fruits = A([\n *     { name: 'banana', color: 'yellow' },\n *     { name: 'apple',  color: 'red' },\n *     { name: 'kiwi',   color: 'brown' },\n *     { name: 'cherry', color: 'red' },\n *     { name: 'lemon',  color: 'yellow' }\n *   ]);\n *\n *   @uniqBy('fruits', 'color') oneOfEachColor;\n *   // [\n *   //  { name: 'banana', color: 'yellow'},\n *   //  { name: 'apple',  color: 'red'},\n *   //  { name: 'kiwi',   color: 'brown'}\n *   // ]\n * }\n * ```\n *\n * @function\n * @param {String} dependentKey - Key of the array to uniq\n * @param {String} propertyKey - Key of the property on the objects of the array to determine uniqueness by\n ",
      "start": 25591,
      "end": 26722,
      "loc": {
        "start": {
          "line": 786,
          "column": 0
        },
        "end": {
          "line": 818,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 26723,
      "end": 26729,
      "loc": {
        "start": {
          "line": 819,
          "column": 0
        },
        "end": {
          "line": 819,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "const",
        "keyword": "const",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "const",
      "start": 26730,
      "end": 26735,
      "loc": {
        "start": {
          "line": 819,
          "column": 7
        },
        "end": {
          "line": 819,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "uniqBy",
      "start": 26736,
      "end": 26742,
      "loc": {
        "start": {
          "line": 819,
          "column": 13
        },
        "end": {
          "line": 819,
          "column": 19
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 26743,
      "end": 26744,
      "loc": {
        "start": {
          "line": 819,
          "column": 20
        },
        "end": {
          "line": 819,
          "column": 21
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "SUPPORTS_UNIQ_BY_COMPUTED",
      "start": 26745,
      "end": 26770,
      "loc": {
        "start": {
          "line": 819,
          "column": 22
        },
        "end": {
          "line": 819,
          "column": 47
        }
      }
    },
    {
      "type": {
        "label": "?",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 26771,
      "end": 26772,
      "loc": {
        "start": {
          "line": 819,
          "column": 48
        },
        "end": {
          "line": 819,
          "column": 49
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "decoratedPropertyWithRequiredParams",
      "start": 26775,
      "end": 26810,
      "loc": {
        "start": {
          "line": 820,
          "column": 2
        },
        "end": {
          "line": 820,
          "column": 37
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 26810,
      "end": 26811,
      "loc": {
        "start": {
          "line": 820,
          "column": 37
        },
        "end": {
          "line": 820,
          "column": 38
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "Ember",
      "start": 26811,
      "end": 26816,
      "loc": {
        "start": {
          "line": 820,
          "column": 38
        },
        "end": {
          "line": 820,
          "column": 43
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 26816,
      "end": 26817,
      "loc": {
        "start": {
          "line": 820,
          "column": 43
        },
        "end": {
          "line": 820,
          "column": 44
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "computed",
      "start": 26817,
      "end": 26825,
      "loc": {
        "start": {
          "line": 820,
          "column": 44
        },
        "end": {
          "line": 820,
          "column": 52
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 26825,
      "end": 26826,
      "loc": {
        "start": {
          "line": 820,
          "column": 52
        },
        "end": {
          "line": 820,
          "column": 53
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "uniqBy",
      "start": 26826,
      "end": 26832,
      "loc": {
        "start": {
          "line": 820,
          "column": 53
        },
        "end": {
          "line": 820,
          "column": 59
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 26832,
      "end": 26833,
      "loc": {
        "start": {
          "line": 820,
          "column": 59
        },
        "end": {
          "line": 820,
          "column": 60
        }
      }
    },
    {
      "type": {
        "label": ":",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 26834,
      "end": 26835,
      "loc": {
        "start": {
          "line": 820,
          "column": 61
        },
        "end": {
          "line": 820,
          "column": 62
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 26838,
      "end": 26839,
      "loc": {
        "start": {
          "line": 821,
          "column": 2
        },
        "end": {
          "line": 821,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 26839,
      "end": 26840,
      "loc": {
        "start": {
          "line": 821,
          "column": 3
        },
        "end": {
          "line": 821,
          "column": 4
        }
      }
    },
    {
      "type": {
        "label": "=>",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 26841,
      "end": 26843,
      "loc": {
        "start": {
          "line": 821,
          "column": 5
        },
        "end": {
          "line": 821,
          "column": 7
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 26844,
      "end": 26845,
      "loc": {
        "start": {
          "line": 821,
          "column": 8
        },
        "end": {
          "line": 821,
          "column": 9
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "assert",
      "start": 26850,
      "end": 26856,
      "loc": {
        "start": {
          "line": 822,
          "column": 4
        },
        "end": {
          "line": 822,
          "column": 10
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 26856,
      "end": 26857,
      "loc": {
        "start": {
          "line": 822,
          "column": 10
        },
        "end": {
          "line": 822,
          "column": 11
        }
      }
    },
    {
      "type": {
        "label": "string",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "uniqBy is only available from Ember.js v2.7 onwards.",
      "start": 26857,
      "end": 26911,
      "loc": {
        "start": {
          "line": 822,
          "column": 11
        },
        "end": {
          "line": 822,
          "column": 65
        }
      }
    },
    {
      "type": {
        "label": ",",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 26911,
      "end": 26912,
      "loc": {
        "start": {
          "line": 822,
          "column": 65
        },
        "end": {
          "line": 822,
          "column": 66
        }
      }
    },
    {
      "type": {
        "label": "false",
        "keyword": "false",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "false",
      "start": 26913,
      "end": 26918,
      "loc": {
        "start": {
          "line": 822,
          "column": 67
        },
        "end": {
          "line": 822,
          "column": 72
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 26918,
      "end": 26919,
      "loc": {
        "start": {
          "line": 822,
          "column": 72
        },
        "end": {
          "line": 822,
          "column": 73
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 26919,
      "end": 26920,
      "loc": {
        "start": {
          "line": 822,
          "column": 73
        },
        "end": {
          "line": 822,
          "column": 74
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 26923,
      "end": 26924,
      "loc": {
        "start": {
          "line": 823,
          "column": 2
        },
        "end": {
          "line": 823,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 26924,
      "end": 26925,
      "loc": {
        "start": {
          "line": 823,
          "column": 3
        },
        "end": {
          "line": 823,
          "column": 4
        }
      }
    },
    {
      "type": {
        "label": "eof",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 26926,
      "end": 26926,
      "loc": {
        "start": {
          "line": 824,
          "column": 0
        },
        "end": {
          "line": 824,
          "column": 0
        }
      }
    }
  ]
}